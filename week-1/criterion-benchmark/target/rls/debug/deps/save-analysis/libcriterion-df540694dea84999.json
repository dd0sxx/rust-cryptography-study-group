{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6","program":"/Users/theo/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","criterion","--edition=2018","/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"cargo_bench_support\"","--cfg","feature=\"default\"","-C","metadata=df540694dea84999","-C","extra-filename=-df540694dea84999","--out-dir","/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps","-L","dependency=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps","--extern","atty=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libatty-67347fe94cc91e2a.rmeta","--extern","cast=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libcast-952be8f38ed47326.rmeta","--extern","clap=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libclap-1bbf65f4bf820527.rmeta","--extern","criterion_plot=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libcriterion_plot-756ed22db7e7f5ab.rmeta","--extern","csv=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libcsv-23ea244f81941687.rmeta","--extern","itertools=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libitertools-cbf075d512101e72.rmeta","--extern","lazy_static=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/liblazy_static-6238ad3cb7350337.rmeta","--extern","num_traits=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libnum_traits-8cf751f1a4af4af7.rmeta","--extern","oorandom=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/liboorandom-8e502940fc795d9d.rmeta","--extern","plotters=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libplotters-0e15fb50b07ea086.rmeta","--extern","rayon=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/librayon-595d604ac5af9797.rmeta","--extern","regex=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libregex-b8edddc918761c28.rmeta","--extern","serde=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libserde-d4174442248eaec7.rmeta","--extern","serde_cbor=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libserde_cbor-88910a183f72ab4f.rmeta","--extern","serde_derive=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libserde_derive-ad4f7e93db0f034a.dylib","--extern","serde_json=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libserde_json-52fe911b13eaa838.rmeta","--extern","tinytemplate=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libtinytemplate-4df591ee0aee28b9.rmeta","--extern","walkdir=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libwalkdir-3b4a9fcadd1663fd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/theo/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libcriterion-df540694dea84999.rmeta"},"prelude":{"crate_id":{"name":"criterion","disambiguator":[17126600242856969805,0]},"crate_root":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src","external_crates":[{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":18,"id":{"name":"lazy_static","disambiguator":[15130840265310738312,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":19,"id":{"name":"serde_derive","disambiguator":[12678365443300840270,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":20,"id":{"name":"clap","disambiguator":[15496337550150961360,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":21,"id":{"name":"bitflags","disambiguator":[5221822649502070792,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":22,"id":{"name":"textwrap","disambiguator":[13352052056648973676,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":23,"id":{"name":"unicode_width","disambiguator":[6548758303772742231,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":24,"id":{"name":"regex","disambiguator":[13162303602461201052,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":25,"id":{"name":"regex_syntax","disambiguator":[4993293306121144132,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","num":26,"id":{"name":"csv","disambiguator":[2702128573891778435,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":27,"id":{"name":"serde","disambiguator":[10858964680113434127,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","num":28,"id":{"name":"bstr","disambiguator":[4256224176905472598,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","num":29,"id":{"name":"memchr","disambiguator":[8572966422452186516,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","num":30,"id":{"name":"regex_automata","disambiguator":[18280677101129314498,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","num":31,"id":{"name":"csv_core","disambiguator":[5094052922144531283,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","num":32,"id":{"name":"itoa","disambiguator":[11479504685015244304,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","num":33,"id":{"name":"ryu","disambiguator":[16073521324321269628,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/error.rs","num":34,"id":{"name":"serde_json","disambiguator":[3826954327255578354,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/error.rs","num":35,"id":{"name":"itoa","disambiguator":[4616050707793390338,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/fs.rs","num":36,"id":{"name":"walkdir","disambiguator":[4770962622033757160,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/fs.rs","num":37,"id":{"name":"same_file","disambiguator":[17193056058484690486,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","num":38,"id":{"name":"criterion_plot","disambiguator":[10992993389789535898,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","num":39,"id":{"name":"cast","disambiguator":[17766721637890608744,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/gnuplot_backend/summary.rs","num":40,"id":{"name":"itertools","disambiguator":[16201346203843383992,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","num":41,"id":{"name":"either","disambiguator":[14887329217978898368,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","num":42,"id":{"name":"tinytemplate","disambiguator":[2543360658156936649,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/plotters_backend/mod.rs","num":43,"id":{"name":"plotters","disambiguator":[2737466048716555006,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/plotters_backend/mod.rs","num":44,"id":{"name":"plotters_backend","disambiguator":[5119860915555537548,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/float.rs","num":45,"id":{"name":"num_traits","disambiguator":[64657744445024638,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/plotters_backend/mod.rs","num":46,"id":{"name":"plotters_svg","disambiguator":[35721240112143275,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","num":47,"id":{"name":"rayon","disambiguator":[7360665037375659437,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","num":48,"id":{"name":"rayon_core","disambiguator":[2380899681804247126,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","num":49,"id":{"name":"crossbeam_channel","disambiguator":[9075312018714855413,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","num":50,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","num":51,"id":{"name":"crossbeam_utils","disambiguator":[6390297690919074076,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","num":52,"id":{"name":"crossbeam_deque","disambiguator":[8312277034626580561,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","num":53,"id":{"name":"crossbeam_epoch","disambiguator":[15068090761512692139,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","num":54,"id":{"name":"scopeguard","disambiguator":[794896012219393328,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","num":55,"id":{"name":"memoffset","disambiguator":[8128783658247980088,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","num":56,"id":{"name":"num_cpus","disambiguator":[12750407429985933967,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","num":57,"id":{"name":"libc","disambiguator":[12525383312641221777,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/rand_util.rs","num":58,"id":{"name":"oorandom","disambiguator":[4576024324192952572,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","num":59,"id":{"name":"serde_cbor","disambiguator":[8364636681895858257,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","num":60,"id":{"name":"half","disambiguator":[13925788981814059123,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","num":61,"id":{"name":"atty","disambiguator":[7306518637155413125,0]}}],"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":0,"byte_end":62437,"line_start":1,"line_end":1623,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":443},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":2709,"byte_end":2716,"line_start":104,"line_end":104,"column_start":25,"column_end":32},"alias_span":null,"name":"Bencher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":255},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":2766,"byte_end":2775,"line_start":106,"line_end":106,"column_start":28,"column_end":37},"alias_span":null,"name":"Benchmark","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":2777,"byte_end":2796,"line_start":106,"line_end":106,"column_start":39,"column_end":58},"alias_span":null,"name":"BenchmarkDefinition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":248},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":2798,"byte_end":2820,"line_start":106,"line_end":106,"column_start":60,"column_end":82},"alias_span":null,"name":"ParameterizedBenchmark","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":2856,"byte_end":2870,"line_start":107,"line_end":107,"column_start":34,"column_end":48},"alias_span":null,"name":"BenchmarkGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2895},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":2872,"byte_end":2883,"line_start":107,"line_end":107,"column_start":50,"column_end":61},"alias_span":null,"name":"BenchmarkId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":0,"byte_end":62437,"line_start":1,"line_end":1623,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":16},{"krate":0,"index":167},{"krate":0,"index":298},{"krate":0,"index":412},{"krate":0,"index":420},{"krate":0,"index":487},{"krate":0,"index":551},{"krate":0,"index":595},{"krate":0,"index":624},{"krate":0,"index":664},{"krate":0,"index":671},{"krate":0,"index":737},{"krate":0,"index":888},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":959},{"krate":0,"index":1736},{"krate":0,"index":1748},{"krate":0,"index":1945},{"krate":0,"index":2013},{"krate":0,"index":2591},{"krate":0,"index":2594},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2603},{"krate":0,"index":2606},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2619},{"krate":0,"index":2622},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2629},{"krate":0,"index":2632},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2671},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2681},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2688},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2700},{"krate":0,"index":2703},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2710},{"krate":0,"index":2713},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2720},{"krate":0,"index":4012},{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4020},{"krate":0,"index":4023},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4031},{"krate":0,"index":4034},{"krate":0,"index":4036},{"krate":0,"index":4037},{"krate":0,"index":4042},{"krate":0,"index":4045},{"krate":0,"index":4047},{"krate":0,"index":4048},{"krate":0,"index":4053},{"krate":0,"index":4056},{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4064},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2726},{"krate":0,"index":2731},{"krate":0,"index":4067},{"krate":0,"index":4082},{"krate":0,"index":4084},{"krate":0,"index":4085},{"krate":0,"index":4087},{"krate":0,"index":4088},{"krate":0,"index":4091},{"krate":0,"index":4092},{"krate":0,"index":4095},{"krate":0,"index":2736},{"krate":0,"index":4097},{"krate":0,"index":4102},{"krate":0,"index":4104},{"krate":0,"index":4106},{"krate":0,"index":4107},{"krate":0,"index":4112},{"krate":0,"index":4114},{"krate":0,"index":4116},{"krate":0,"index":2738},{"krate":0,"index":4117},{"krate":0,"index":4127},{"krate":0,"index":4129},{"krate":0,"index":2740},{"krate":0,"index":2742},{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":2762},{"krate":0,"index":2808},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":4174},{"krate":0,"index":4181},{"krate":0,"index":4183},{"krate":0,"index":4185},{"krate":0,"index":4191},{"krate":0,"index":4230},{"krate":0,"index":4231},{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4237},{"krate":0,"index":4242},{"krate":0,"index":4244},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4249},{"krate":0,"index":4251},{"krate":0,"index":2828},{"krate":0,"index":2830},{"krate":0,"index":4253},{"krate":0,"index":4260},{"krate":0,"index":4262},{"krate":0,"index":4264},{"krate":0,"index":2832},{"krate":0,"index":4265},{"krate":0,"index":4270},{"krate":0,"index":4272},{"krate":0,"index":4274},{"krate":0,"index":4275},{"krate":0,"index":4281},{"krate":0,"index":2834},{"krate":0,"index":4320},{"krate":0,"index":4324},{"krate":0,"index":4326},{"krate":0,"index":4332},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842}],"decl_id":null,"docs":" A statistics-driven micro-benchmarking library written in Rust.","sig":null,"attributes":[{"value":"/ A statistics-driven micro-benchmarking library written in Rust.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":0,"byte_end":67,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":68,"byte_end":71,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate is a microbenchmarking library which aims to provide strong","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":72,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ statistical confidence in detecting and estimating the size of performance","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":147,"byte_end":225,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ improvements and regressions, while also being easy to use.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":226,"byte_end":289,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":290,"byte_end":293,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":294,"byte_end":301,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ [the user guide](https://bheisler.github.io/criterion.rs/book/index.html)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":302,"byte_end":379,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ for examples as well as details on the measurement and analysis process,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":380,"byte_end":456,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ and the output.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":457,"byte_end":476,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":477,"byte_end":480,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Features:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":481,"byte_end":497,"line_start":12,"line_end":12,"column_start":1,"column_end":17}},{"value":"/ * Collects detailed statistics, providing strong confidence that changes","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":498,"byte_end":574,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/   to performance are real, not measurement noise.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":575,"byte_end":628,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ * Produces detailed charts, providing thorough understanding of your code's","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":629,"byte_end":708,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   performance behavior.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":709,"byte_end":736,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":738,"byte_end":760,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"warn(bare_trait_objects)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":761,"byte_end":789,"line_start":19,"line_end":19,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":248},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":82251,"byte_end":82273,"line_start":69,"line_end":69,"column_start":12,"column_end":34},"name":"ParameterizedBenchmark","qualname":"::benchmark::ParameterizedBenchmark","value":"ParameterizedBenchmark {  }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"decl_id":null,"docs":" Structure representing a benchmark (or group of benchmarks)\n which take one parameter.\n","sig":null,"attributes":[{"value":"/ Structure representing a benchmark (or group of benchmarks)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":82020,"byte_end":82083,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"/ which take one parameter.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":82084,"byte_end":82113,"line_start":65,"line_end":65,"column_start":1,"column_end":30}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":82129,"byte_end":82162,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"deprecated(since = \"0.3.4\", note = \"Please use BenchmarkGroups instead.\")","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":82163,"byte_end":82239,"line_start":68,"line_end":68,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":82664,"byte_end":82673,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"Benchmark","qualname":"::benchmark::Benchmark","value":"Benchmark {  }","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"decl_id":null,"docs":" Structure representing a benchmark (or group of benchmarks)\n which takes no parameters.\n","sig":null,"attributes":[{"value":"/ Structure representing a benchmark (or group of benchmarks)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":82466,"byte_end":82529,"line_start":76,"line_end":76,"column_start":1,"column_end":64}},{"value":"/ which takes no parameters.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":82530,"byte_end":82560,"line_start":77,"line_end":77,"column_start":1,"column_end":31}},{"value":"deprecated(since = \"0.3.4\", note = \"Please use BenchmarkGroups instead.\")","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":82576,"byte_end":82652,"line_start":79,"line_end":79,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":260},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":82959,"byte_end":82978,"line_start":89,"line_end":89,"column_start":11,"column_end":30},"name":"BenchmarkDefinition","qualname":"::benchmark::BenchmarkDefinition","value":"BenchmarkDefinition<M: Measurement = WallTime>: Sized","parent":null,"children":[{"krate":0,"index":262}],"decl_id":null,"docs":" Common trait for `Benchmark` and `ParameterizedBenchmark`. Not intended to be\n used outside of Criterion.rs.\n","sig":null,"attributes":[{"value":"/ Common trait for `Benchmark` and `ParameterizedBenchmark`. Not intended to be","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":82818,"byte_end":82899,"line_start":86,"line_end":86,"column_start":1,"column_end":82}},{"value":"/ used outside of Criterion.rs.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":82900,"byte_end":82933,"line_start":87,"line_end":87,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":83041,"byte_end":83044,"line_start":91,"line_end":91,"column_start":8,"column_end":11},"name":"run","qualname":"::benchmark::BenchmarkDefinition::run","value":"pub fn run(Self, &str, &mut Criterion<M>)","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89833,"byte_end":89836,"line_start":266,"line_end":266,"column_start":12,"column_end":15},"name":"new","qualname":"<Benchmark<M>>::new","value":"pub fn new<S, F>(S, F) -> Benchmark<M> where S: Into<String>,\nF: FnMut(&mut Bencher<, M>) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new benchmark group and adds the given function to it.","sig":null,"attributes":[{"value":"/ Create a new benchmark group and adds the given function to it.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89239,"byte_end":89306,"line_start":245,"line_end":245,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89311,"byte_end":89314,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89319,"byte_end":89332,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89337,"byte_end":89340,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89345,"byte_end":89356,"line_start":249,"line_end":249,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89361,"byte_end":89403,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # use criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89408,"byte_end":89431,"line_start":251,"line_end":251,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89436,"byte_end":89439,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89444,"byte_end":89477,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/     // One-time setup goes here","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89482,"byte_end":89517,"line_start":254,"line_end":254,"column_start":5,"column_end":40}},{"value":"/     c.bench(","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89522,"byte_end":89538,"line_start":255,"line_end":255,"column_start":5,"column_end":21}},{"value":"/         \"my_group\",","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89543,"byte_end":89566,"line_start":256,"line_end":256,"column_start":5,"column_end":28}},{"value":"/         Benchmark::new(\"my_function\", |b| b.iter(|| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89571,"byte_end":89628,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/             // Code to benchmark goes here","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89633,"byte_end":89679,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/         })),","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89684,"byte_end":89700,"line_start":259,"line_end":259,"column_start":5,"column_end":21}},{"value":"/     );","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89705,"byte_end":89715,"line_start":260,"line_end":260,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89720,"byte_end":89725,"line_start":261,"line_end":261,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89730,"byte_end":89733,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89738,"byte_end":89775,"line_start":263,"line_end":263,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89780,"byte_end":89809,"line_start":264,"line_end":264,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89814,"byte_end":89821,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":90202,"byte_end":90215,"line_start":280,"line_end":280,"column_start":12,"column_end":25},"name":"with_function","qualname":"<Benchmark<M>>::with_function","value":"pub fn with_function<S, F>(Self, S, F) -> Benchmark<M> where S: Into<String>,\nF: FnMut(&mut Bencher<, M>) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a function to the benchmark group.\n","sig":null,"attributes":[{"value":"/ Add a function to the benchmark group.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":90148,"byte_end":90190,"line_start":279,"line_end":279,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":90666,"byte_end":90676,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"throughput","qualname":"<Benchmark<M>>::throughput","value":"pub fn throughput(Self, Throughput) -> Benchmark<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the input size for this benchmark group. Used for reporting the\n throughput.\n","sig":null,"attributes":[{"value":"/ Set the input size for this benchmark group. Used for reporting the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":90563,"byte_end":90634,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ throughput.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":90639,"byte_end":90654,"line_start":294,"line_end":294,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94400,"byte_end":94403,"line_start":420,"line_end":420,"column_start":12,"column_end":15},"name":"new","qualname":"<ParameterizedBenchmark<T, M>>::new","value":"pub fn new<S, F, I>(S, F, I) -> ParameterizedBenchmark<T, M> where\nS: Into<String>, F: FnMut(&mut Bencher<, M>, &T) -> () + 'static,\nI: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new parameterized benchmark group and adds the given function\n to it.\n The function under test must follow the setup - bench - teardown pattern:","sig":null,"attributes":[{"value":"/ Create a new parameterized benchmark group and adds the given function","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93512,"byte_end":93586,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ to it.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93591,"byte_end":93601,"line_start":392,"line_end":392,"column_start":5,"column_end":15}},{"value":"/ The function under test must follow the setup - bench - teardown pattern:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93606,"byte_end":93683,"line_start":393,"line_end":393,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93688,"byte_end":93691,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93696,"byte_end":93709,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93714,"byte_end":93717,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93722,"byte_end":93733,"line_start":397,"line_end":397,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93738,"byte_end":93780,"line_start":398,"line_end":398,"column_start":5,"column_end":47}},{"value":"/ # use criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93785,"byte_end":93808,"line_start":399,"line_end":399,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93813,"byte_end":93816,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93821,"byte_end":93854,"line_start":401,"line_end":401,"column_start":5,"column_end":38}},{"value":"/     let parameters = vec![1u64, 2u64, 3u64];","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93859,"byte_end":93907,"line_start":402,"line_end":402,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93912,"byte_end":93915,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/     // One-time setup goes here","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93920,"byte_end":93955,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/     c.bench(","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93960,"byte_end":93976,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/         \"my_group\",","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93981,"byte_end":94004,"line_start":406,"line_end":406,"column_start":5,"column_end":28}},{"value":"/         ParameterizedBenchmark::new(","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94009,"byte_end":94049,"line_start":407,"line_end":407,"column_start":5,"column_end":45}},{"value":"/             \"my_function\",","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94054,"byte_end":94084,"line_start":408,"line_end":408,"column_start":5,"column_end":35}},{"value":"/             |b, param| b.iter(|| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94089,"byte_end":94127,"line_start":409,"line_end":409,"column_start":5,"column_end":43}},{"value":"/                 // Code to benchmark using param goes here","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94132,"byte_end":94194,"line_start":410,"line_end":410,"column_start":5,"column_end":67}},{"value":"/             }),","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94199,"byte_end":94218,"line_start":411,"line_end":411,"column_start":5,"column_end":24}},{"value":"/             parameters","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94223,"byte_end":94249,"line_start":412,"line_end":412,"column_start":5,"column_end":31}},{"value":"/         )","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94254,"byte_end":94267,"line_start":413,"line_end":413,"column_start":5,"column_end":18}},{"value":"/     );","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94272,"byte_end":94282,"line_start":414,"line_end":414,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94287,"byte_end":94292,"line_start":415,"line_end":415,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94297,"byte_end":94300,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94305,"byte_end":94342,"line_start":417,"line_end":417,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94347,"byte_end":94376,"line_start":418,"line_end":418,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94381,"byte_end":94388,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94909,"byte_end":94922,"line_start":436,"line_end":436,"column_start":12,"column_end":25},"name":"with_function","qualname":"<ParameterizedBenchmark<T, M>>::with_function","value":"pub fn with_function<S, F>(Self, S, F) -> ParameterizedBenchmark<T, M> where\nS: Into<String>, F: FnMut(&mut Bencher<, M>, &T) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a function to the benchmark group.\n","sig":null,"attributes":[{"value":"/ Add a function to the benchmark group.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":94855,"byte_end":94897,"line_start":435,"line_end":435,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":95356,"byte_end":95366,"line_start":450,"line_end":450,"column_start":12,"column_end":22},"name":"throughput","qualname":"<ParameterizedBenchmark<T, M>>::throughput","value":"pub fn throughput<F>(Self, F) -> ParameterizedBenchmark<T, M> where F: Fn(&T)\n-> Throughput + 'static","parent":null,"children":[],"decl_id":null,"docs":" Use the given function to calculate the input size for a given input.\n","sig":null,"attributes":[{"value":"/ Use the given function to calculate the input size for a given input.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":95271,"byte_end":95344,"line_start":449,"line_end":449,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":352},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103175,"byte_end":103189,"line_start":78,"line_end":78,"column_start":12,"column_end":26},"name":"BenchmarkGroup","qualname":"::benchmark_group::BenchmarkGroup","value":"BenchmarkGroup {  }","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"decl_id":null,"docs":" Structure used to group together a set of related benchmarks, along with custom configuration\n settings for groups of benchmarks. All benchmarks performed using a benchmark group will be\n grouped together in the final report.","sig":null,"attributes":[{"value":"/ Structure used to group together a set of related benchmarks, along with custom configuration","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100452,"byte_end":100549,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ settings for groups of benchmarks. All benchmarks performed using a benchmark group will be","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100550,"byte_end":100645,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/ grouped together in the final report.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100646,"byte_end":100687,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100688,"byte_end":100691,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100692,"byte_end":100707,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100708,"byte_end":100711,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100712,"byte_end":100725,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100726,"byte_end":100766,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ use self::criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100767,"byte_end":100794,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100795,"byte_end":100823,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100824,"byte_end":100827,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ fn bench_simple(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100828,"byte_end":100868,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/     let mut group = c.benchmark_group(\"My Group\");","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100869,"byte_end":100923,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100924,"byte_end":100927,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     // Now we can perform benchmarks with this group","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100928,"byte_end":100984,"line_start":26,"line_end":26,"column_start":1,"column_end":57}},{"value":"/     group.bench_function(\"Bench 1\", |b| b.iter(|| 1 ));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":100985,"byte_end":101044,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/     group.bench_function(\"Bench 2\", |b| b.iter(|| 2 ));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101045,"byte_end":101104,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/    ","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101105,"byte_end":101112,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/     // It's recommended to call group.finish() explicitly at the end, but if you don't it will","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101113,"byte_end":101211,"line_start":30,"line_end":30,"column_start":1,"column_end":99}},{"value":"/     // be called automatically when the group is dropped.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101212,"byte_end":101273,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/     group.finish();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101274,"byte_end":101297,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101298,"byte_end":101303,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101304,"byte_end":101307,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn bench_nested(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101308,"byte_end":101348,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/     let mut group = c.benchmark_group(\"My Second Group\");","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101349,"byte_end":101410,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/     // We can override the configuration on a per-group level","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101411,"byte_end":101476,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/     group.measurement_time(Duration::from_secs(1));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101477,"byte_end":101532,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101533,"byte_end":101536,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/     // We can also use loops to define multiple benchmarks, even over multiple dimensions.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101537,"byte_end":101631,"line_start":40,"line_end":40,"column_start":1,"column_end":95}},{"value":"/     for x in 0..3 {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101632,"byte_end":101655,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/         for y in 0..3 {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101656,"byte_end":101683,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/             let point = (x, y);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101684,"byte_end":101719,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/             let parameter_string = format!(\"{} * {}\", x, y);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101720,"byte_end":101784,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/             group.bench_with_input(BenchmarkId::new(\"Multiply\", parameter_string), &point,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101785,"byte_end":101879,"line_start":45,"line_end":45,"column_start":1,"column_end":95}},{"value":"/                 |b, (p_x, p_y)| b.iter(|| p_x * p_y));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101880,"byte_end":101938,"line_start":46,"line_end":46,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101939,"byte_end":101952,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101953,"byte_end":101962,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/    ","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101963,"byte_end":101970,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/     group.finish();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101971,"byte_end":101994,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":101995,"byte_end":102000,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102001,"byte_end":102004,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ fn bench_throughput(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102005,"byte_end":102049,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/     let mut group = c.benchmark_group(\"Summation\");","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102050,"byte_end":102105,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/     ","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102106,"byte_end":102114,"line_start":55,"line_end":55,"column_start":1,"column_end":9}},{"value":"/     for size in [1024, 2048, 4096].iter() {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102115,"byte_end":102162,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/         // Generate input of an appropriate size...","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102163,"byte_end":102218,"line_start":57,"line_end":57,"column_start":1,"column_end":56}},{"value":"/         let input = vec![1u64, *size];","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102219,"byte_end":102261,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102262,"byte_end":102265,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/         // We can use the throughput function to tell Criterion.rs how large the input is","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102266,"byte_end":102359,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/         // so it can calculate the overall throughput of the function. If we wanted, we could","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102360,"byte_end":102457,"line_start":61,"line_end":61,"column_start":1,"column_end":98}},{"value":"/         // even change the benchmark configuration for different inputs (eg. to reduce the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102458,"byte_end":102552,"line_start":62,"line_end":62,"column_start":1,"column_end":95}},{"value":"/         // number of samples for extremely large and slow inputs) or even different functions.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102553,"byte_end":102651,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"/         group.throughput(Throughput::Elements(*size as u64));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102652,"byte_end":102717,"line_start":64,"line_end":64,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102718,"byte_end":102721,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         group.bench_with_input(BenchmarkId::new(\"sum\", *size), &input,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102722,"byte_end":102796,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/             |b, i| b.iter(|| i.iter().sum::<u64>()));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102797,"byte_end":102854,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/         group.bench_with_input(BenchmarkId::new(\"fold\", *size), &input,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102855,"byte_end":102930,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/             |b, i| b.iter(|| i.iter().fold(0u64, |a, b| a + b)));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":102931,"byte_end":103000,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103001,"byte_end":103010,"line_start":70,"line_end":70,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103011,"byte_end":103014,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     group.finish();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103015,"byte_end":103038,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103039,"byte_end":103044,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103045,"byte_end":103048,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ criterion_group!(benches, bench_simple, bench_nested, bench_throughput);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103049,"byte_end":103125,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103126,"byte_end":103155,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103156,"byte_end":103163,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103772,"byte_end":103783,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"sample_size","qualname":"<BenchmarkGroup>::sample_size","value":"pub fn sample_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the size of the sample for this benchmark","sig":null,"attributes":[{"value":"/ Changes the size of the sample for this benchmark","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103470,"byte_end":103523,"line_start":87,"line_end":87,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103528,"byte_end":103531,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ A bigger sample should yield more accurate results if paired with a sufficiently large","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103536,"byte_end":103626,"line_start":89,"line_end":89,"column_start":5,"column_end":95}},{"value":"/ measurement time.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103631,"byte_end":103652,"line_start":90,"line_end":90,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103657,"byte_end":103660,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Sample size must be at least 10.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103665,"byte_end":103701,"line_start":92,"line_end":92,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103706,"byte_end":103709,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103714,"byte_end":103726,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103731,"byte_end":103734,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Panics if n < 10.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103739,"byte_end":103760,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104059,"byte_end":104071,"line_start":109,"line_end":109,"column_start":12,"column_end":24},"name":"warm_up_time","qualname":"<BenchmarkGroup>::warm_up_time","value":"pub fn warm_up_time(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the warm up time for this benchmark","sig":null,"attributes":[{"value":"/ Changes the warm up time for this benchmark","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103922,"byte_end":103969,"line_start":104,"line_end":104,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103974,"byte_end":103977,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103982,"byte_end":103994,"line_start":106,"line_end":106,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103999,"byte_end":104002,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration is zero","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104007,"byte_end":104047,"line_start":108,"line_end":108,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104861,"byte_end":104877,"line_start":127,"line_end":127,"column_start":12,"column_end":28},"name":"measurement_time","qualname":"<BenchmarkGroup>::measurement_time","value":"pub fn measurement_time(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the target measurement time for this benchmark group.","sig":null,"attributes":[{"value":"/ Changes the target measurement time for this benchmark group.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104229,"byte_end":104294,"line_start":116,"line_end":116,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104299,"byte_end":104302,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Criterion will attempt to spent approximately this amount of time measuring each","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104307,"byte_end":104391,"line_start":118,"line_end":118,"column_start":5,"column_end":89}},{"value":"/ benchmark on a best-effort basis. If it is not possible to perform the measurement in","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104396,"byte_end":104485,"line_start":119,"line_end":119,"column_start":5,"column_end":94}},{"value":"/ the requested time (eg. because each iteration of the benchmark is long) then Criterion","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104490,"byte_end":104581,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/ will spend as long as is needed to collect the desired number of samples. With a longer","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104586,"byte_end":104677,"line_start":121,"line_end":121,"column_start":5,"column_end":96}},{"value":"/ time, the measurement will become more resilient to interference from other programs.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104682,"byte_end":104771,"line_start":122,"line_end":122,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104776,"byte_end":104779,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104784,"byte_end":104796,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104801,"byte_end":104804,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration is zero","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":104809,"byte_end":104849,"line_start":126,"line_end":126,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105515,"byte_end":105525,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"nresamples","qualname":"<BenchmarkGroup>::nresamples","value":"pub fn nresamples(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of resamples for this benchmark group","sig":null,"attributes":[{"value":"/ Changes the number of resamples for this benchmark group","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105039,"byte_end":105099,"line_start":134,"line_end":134,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105104,"byte_end":105107,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Number of resamples to use for the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105112,"byte_end":105150,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"/ [bootstrap](http://en.wikipedia.org/wiki/Bootstrapping_(statistics)#Case_resampling)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105155,"byte_end":105243,"line_start":137,"line_end":137,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105248,"byte_end":105251,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ A larger number of resamples reduces the random sampling errors which are inherent to the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105256,"byte_end":105349,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ bootstrap method, but also increases the analysis time.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105354,"byte_end":105413,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105418,"byte_end":105421,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105426,"byte_end":105438,"line_start":142,"line_end":142,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105443,"byte_end":105446,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Panics if the number of resamples is set to zero","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105451,"byte_end":105503,"line_start":144,"line_end":144,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106515,"byte_end":106530,"line_start":167,"line_end":167,"column_start":12,"column_end":27},"name":"noise_threshold","qualname":"<BenchmarkGroup>::noise_threshold","value":"pub fn noise_threshold(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the noise threshold for benchmarks in this group. The noise threshold\n is used to filter out small changes in performance from one run to the next, even if they\n are statistically significant. Sometimes benchmarking the same code twice will result in\n small but statistically significant differences solely because of noise. This provides a way\n to filter out some of these false positives at the cost of making it harder to detect small\n changes to the true performance of the benchmark.","sig":null,"attributes":[{"value":"/ Changes the noise threshold for benchmarks in this group. The noise threshold","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105785,"byte_end":105866,"line_start":155,"line_end":155,"column_start":5,"column_end":86}},{"value":"/ is used to filter out small changes in performance from one run to the next, even if they","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105871,"byte_end":105964,"line_start":156,"line_end":156,"column_start":5,"column_end":98}},{"value":"/ are statistically significant. Sometimes benchmarking the same code twice will result in","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":105969,"byte_end":106061,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ small but statistically significant differences solely because of noise. This provides a way","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106066,"byte_end":106162,"line_start":158,"line_end":158,"column_start":5,"column_end":101}},{"value":"/ to filter out some of these false positives at the cost of making it harder to detect small","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106167,"byte_end":106262,"line_start":159,"line_end":159,"column_start":5,"column_end":100}},{"value":"/ changes to the true performance of the benchmark.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106267,"byte_end":106320,"line_start":160,"line_end":160,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106325,"byte_end":106328,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The default is 0.01, meaning that changes smaller than 1% will be ignored.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106333,"byte_end":106411,"line_start":162,"line_end":162,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106416,"byte_end":106419,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106424,"byte_end":106436,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106441,"byte_end":106444,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Panics if the threshold is set to a negative value","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106449,"byte_end":106503,"line_start":166,"line_end":166,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":107186,"byte_end":107202,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"confidence_level","qualname":"<BenchmarkGroup>::confidence_level","value":"pub fn confidence_level(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the confidence level for benchmarks in this group. The confidence\n level is the desired probability that the true runtime lies within the estimated\n [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is\n 0.95, meaning that the confidence interval should capture the true value 95% of the time.","sig":null,"attributes":[{"value":"/ Changes the confidence level for benchmarks in this group. The confidence","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106696,"byte_end":106773,"line_start":174,"line_end":174,"column_start":5,"column_end":82}},{"value":"/ level is the desired probability that the true runtime lies within the estimated","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106778,"byte_end":106862,"line_start":175,"line_end":175,"column_start":5,"column_end":89}},{"value":"/ [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106867,"byte_end":106959,"line_start":176,"line_end":176,"column_start":5,"column_end":97}},{"value":"/ 0.95, meaning that the confidence interval should capture the true value 95% of the time.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":106964,"byte_end":107057,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":107062,"byte_end":107065,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":107070,"byte_end":107082,"line_start":179,"line_end":179,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":107087,"byte_end":107090,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Panics if the confidence level is set to a value outside the `(0, 1)` range","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":107095,"byte_end":107174,"line_start":181,"line_end":181,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108771,"byte_end":108789,"line_start":212,"line_end":212,"column_start":12,"column_end":30},"name":"significance_level","qualname":"<BenchmarkGroup>::significance_level","value":"pub fn significance_level(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the [significance level](https://en.wikipedia.org/wiki/Statistical_significance)\n for benchmarks in this group. This is used to perform a\n [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if\n the measurements from this run are different from the measured performance of the last run.\n The significance level is the desired probability that two measurements of identical code\n will be considered 'different' due to noise in the measurements. The default value is 0.05,\n meaning that approximately 5% of identical benchmarks will register as different due to\n noise.","sig":null,"attributes":[{"value":"/ Changes the [significance level](https://en.wikipedia.org/wiki/Statistical_significance)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":107487,"byte_end":107579,"line_start":192,"line_end":192,"column_start":5,"column_end":97}},{"value":"/ for benchmarks in this group. This is used to perform a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":107584,"byte_end":107643,"line_start":193,"line_end":193,"column_start":5,"column_end":64}},{"value":"/ [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":107648,"byte_end":107741,"line_start":194,"line_end":194,"column_start":5,"column_end":98}},{"value":"/ the measurements from this run are different from the measured performance of the last run.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":107746,"byte_end":107841,"line_start":195,"line_end":195,"column_start":5,"column_end":100}},{"value":"/ The significance level is the desired probability that two measurements of identical code","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":107846,"byte_end":107939,"line_start":196,"line_end":196,"column_start":5,"column_end":98}},{"value":"/ will be considered 'different' due to noise in the measurements. The default value is 0.05,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":107944,"byte_end":108039,"line_start":197,"line_end":197,"column_start":5,"column_end":100}},{"value":"/ meaning that approximately 5% of identical benchmarks will register as different due to","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108044,"byte_end":108135,"line_start":198,"line_end":198,"column_start":5,"column_end":96}},{"value":"/ noise.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108140,"byte_end":108150,"line_start":199,"line_end":199,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108155,"byte_end":108158,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This presents a trade-off. By setting the significance level closer to 0.0, you can increase","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108163,"byte_end":108259,"line_start":201,"line_end":201,"column_start":5,"column_end":101}},{"value":"/ the statistical robustness against noise, but it also weakens Criterion.rs' ability to","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108264,"byte_end":108354,"line_start":202,"line_end":202,"column_start":5,"column_end":95}},{"value":"/ detect small but real changes in the performance. By setting the significance level","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108359,"byte_end":108446,"line_start":203,"line_end":203,"column_start":5,"column_end":92}},{"value":"/ closer to 1.0, Criterion.rs will be more able to detect small true changes, but will also","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108451,"byte_end":108544,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ report more spurious differences.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108549,"byte_end":108586,"line_start":205,"line_end":205,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108591,"byte_end":108594,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ See also the noise threshold setting.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108599,"byte_end":108640,"line_start":207,"line_end":207,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108645,"byte_end":108648,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108653,"byte_end":108665,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108670,"byte_end":108673,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Panics if the significance level is set to a value outside the `(0, 1)` range","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108678,"byte_end":108759,"line_start":211,"line_end":211,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":109020,"byte_end":109031,"line_start":220,"line_end":220,"column_start":12,"column_end":23},"name":"plot_config","qualname":"<BenchmarkGroup>::plot_config","value":"pub fn plot_config(&mut Self, PlotConfiguration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the plot configuration for this benchmark group.\n","sig":null,"attributes":[{"value":"/ Changes the plot configuration for this benchmark group.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":108948,"byte_end":109008,"line_start":219,"line_end":219,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":109270,"byte_end":109280,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"throughput","qualname":"<BenchmarkGroup>::throughput","value":"pub fn throughput(&mut Self, Throughput) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the input size for this benchmark group. Used for reporting the\n throughput.\n","sig":null,"attributes":[{"value":"/ Set the input size for this benchmark group. Used for reporting the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":109167,"byte_end":109238,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/ throughput.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":109243,"byte_end":109258,"line_start":226,"line_end":226,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":109462,"byte_end":109475,"line_start":233,"line_end":233,"column_start":12,"column_end":25},"name":"sampling_mode","qualname":"<BenchmarkGroup>::sampling_mode","value":"pub fn sampling_mode(&mut Self, SamplingMode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the sampling mode for this benchmark group.\n","sig":null,"attributes":[{"value":"/ Set the sampling mode for this benchmark group.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":109399,"byte_end":109450,"line_start":232,"line_end":232,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":110039,"byte_end":110053,"line_start":250,"line_end":250,"column_start":12,"column_end":26},"name":"bench_function","qualname":"<BenchmarkGroup>::bench_function","value":"pub fn bench_function<ID: IntoBenchmarkId, F>(&mut Self, ID, F) -> &mut Self\nwhere F: FnMut(&mut Bencher<, M>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Benchmark the given parameterless function inside this benchmark group.\n","sig":null,"attributes":[{"value":"/ Benchmark the given parameterless function inside this benchmark group.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":109952,"byte_end":110027,"line_start":249,"line_end":249,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":110352,"byte_end":110368,"line_start":259,"line_end":259,"column_start":12,"column_end":28},"name":"bench_with_input","qualname":"<BenchmarkGroup>::bench_with_input","value":"pub fn bench_with_input<ID: IntoBenchmarkId, F, I>(&mut Self, ID, &I, F)\n-> &mut Self where F: FnMut(&mut Bencher<, M>, &I) -> (), I: ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Benchmark the given parameterized function inside this benchmark group.\n","sig":null,"attributes":[{"value":"/ Benchmark the given parameterized function inside this benchmark group.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":110265,"byte_end":110340,"line_start":258,"line_end":258,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":113886,"byte_end":113892,"line_start":364,"line_end":364,"column_start":12,"column_end":18},"name":"finish","qualname":"<BenchmarkGroup>::finish","value":"pub fn finish(Self)","parent":null,"children":[],"decl_id":null,"docs":" Consume the benchmark group and generate the summary reports for the group.","sig":null,"attributes":[{"value":"/ Consume the benchmark group and generate the summary reports for the group.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":113665,"byte_end":113744,"line_start":360,"line_end":360,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":113749,"byte_end":113752,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ It is recommended to call this explicitly, but if you forget it will be called when the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":113757,"byte_end":113848,"line_start":362,"line_end":362,"column_start":5,"column_end":96}},{"value":"/ group is dropped.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":113853,"byte_end":113874,"line_start":363,"line_end":363,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":2895},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115262,"byte_end":115273,"line_start":403,"line_end":403,"column_start":12,"column_end":23},"name":"BenchmarkId","qualname":"::benchmark_group::BenchmarkId","value":"BenchmarkId {  }","parent":null,"children":[{"krate":0,"index":2896},{"krate":0,"index":2897}],"decl_id":null,"docs":" Simple structure representing an ID for a benchmark. The ID must be unique within a benchmark\n group.\n","sig":null,"attributes":[{"value":"/ Simple structure representing an ID for a benchmark. The ID must be unique within a benchmark","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115104,"byte_end":115201,"line_start":400,"line_end":400,"column_start":1,"column_end":98}},{"value":"/ group.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115202,"byte_end":115212,"line_start":401,"line_end":401,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116823,"byte_end":116826,"line_start":437,"line_end":437,"column_start":12,"column_end":15},"name":"new","qualname":"<BenchmarkId>::new","value":"pub fn new<S: Into<String>, P: ::std::fmt::Display>(S, P) -> BenchmarkId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new benchmark ID from a string function name and a parameter value.","sig":null,"attributes":[{"value":"/ Construct a new benchmark ID from a string function name and a parameter value.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115389,"byte_end":115472,"line_start":408,"line_end":408,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115477,"byte_end":115480,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Note that the parameter value need not be the same as the parameter passed to your","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115485,"byte_end":115571,"line_start":410,"line_end":410,"column_start":5,"column_end":91}},{"value":"/ actual benchmark. For instance, you might have a benchmark that takes a 1MB string as","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115576,"byte_end":115665,"line_start":411,"line_end":411,"column_start":5,"column_end":94}},{"value":"/ input. It would be impractical to embed the whole string in the benchmark ID, so instead","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115670,"byte_end":115762,"line_start":412,"line_end":412,"column_start":5,"column_end":97}},{"value":"/ your parameter value might be a descriptive string like \"1MB Alphanumeric\".","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115767,"byte_end":115846,"line_start":413,"line_end":413,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115851,"byte_end":115854,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115859,"byte_end":115873,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115878,"byte_end":115885,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ # use criterion::{BenchmarkId, Criterion};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115890,"byte_end":115936,"line_start":417,"line_end":417,"column_start":5,"column_end":51}},{"value":"/ // A basic benchmark ID is typically constructed from a constant string and a simple","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115941,"byte_end":116029,"line_start":418,"line_end":418,"column_start":5,"column_end":93}},{"value":"/ // parameter","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116034,"byte_end":116050,"line_start":419,"line_end":419,"column_start":5,"column_end":21}},{"value":"/ let basic_id = BenchmarkId::new(\"my_id\", 5);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116055,"byte_end":116103,"line_start":420,"line_end":420,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116108,"byte_end":116111,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ // The function name can be a string","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116116,"byte_end":116156,"line_start":422,"line_end":422,"column_start":5,"column_end":45}},{"value":"/ let function_name = \"test_string\".to_string();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116161,"byte_end":116211,"line_start":423,"line_end":423,"column_start":5,"column_end":55}},{"value":"/ let string_id = BenchmarkId::new(function_name, 12);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116216,"byte_end":116272,"line_start":424,"line_end":424,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116277,"byte_end":116280,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ // Benchmark IDs are passed to benchmark groups:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116285,"byte_end":116337,"line_start":426,"line_end":426,"column_start":5,"column_end":57}},{"value":"/ let mut criterion = Criterion::default();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116342,"byte_end":116387,"line_start":427,"line_end":427,"column_start":5,"column_end":50}},{"value":"/ let mut group = criterion.benchmark_group(\"My Group\");","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116392,"byte_end":116450,"line_start":428,"line_end":428,"column_start":5,"column_end":63}},{"value":"/ // Generate a very large input","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116455,"byte_end":116489,"line_start":429,"line_end":429,"column_start":5,"column_end":39}},{"value":"/ let input : String = ::std::iter::repeat(\"X\").take(1024 * 1024).collect();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116494,"byte_end":116572,"line_start":430,"line_end":430,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116577,"byte_end":116580,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ // Note that we don't have to use the input as the parameter in the ID","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116585,"byte_end":116659,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/ group.bench_with_input(BenchmarkId::new(\"Test long string\", \"1MB X's\"), &input, |b, i| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116664,"byte_end":116756,"line_start":433,"line_end":433,"column_start":5,"column_end":97}},{"value":"/     b.iter(|| i.len())","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116761,"byte_end":116787,"line_start":434,"line_end":434,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116792,"byte_end":116799,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":116804,"byte_end":116811,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":117255,"byte_end":117269,"line_start":449,"line_end":449,"column_start":12,"column_end":26},"name":"from_parameter","qualname":"<BenchmarkId>::from_parameter","value":"pub fn from_parameter<P: ::std::fmt::Display>(P) -> BenchmarkId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new benchmark ID from just a parameter value. Use this when benchmarking a\n single function with a variety of different inputs.\n","sig":null,"attributes":[{"value":"/ Construct a new benchmark ID from just a parameter value. Use this when benchmarking a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":117093,"byte_end":117183,"line_start":447,"line_end":447,"column_start":5,"column_end":95}},{"value":"/ single function with a variety of different inputs.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":117188,"byte_end":117243,"line_start":448,"line_end":448,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":401},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":117855,"byte_end":117861,"line_start":472,"line_end":472,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::benchmark_group::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":405},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":118049,"byte_end":118064,"line_start":478,"line_end":478,"column_start":11,"column_end":26},"name":"IntoBenchmarkId","qualname":"::benchmark_group::IntoBenchmarkId","value":"IntoBenchmarkId: private::Sealed","parent":null,"children":[{"krate":0,"index":406}],"decl_id":null,"docs":" Sealed trait which allows users to automatically convert strings to benchmark IDs.\n","sig":null,"attributes":[{"value":"/ Sealed trait which allows users to automatically convert strings to benchmark IDs.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":117952,"byte_end":118038,"line_start":477,"line_end":477,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":118091,"byte_end":118108,"line_start":479,"line_end":479,"column_start":8,"column_end":25},"name":"into_benchmark_id","qualname":"::benchmark_group::IntoBenchmarkId::into_benchmark_id","value":"pub fn into_benchmark_id(Self) -> BenchmarkId","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":412},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"async_executor","qualname":"::async_executor","value":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":416}],"decl_id":null,"docs":" This module defines a trait that can be used to plug in different Futures executors into\n Criterion.rs' async benchmarking support.","sig":null,"attributes":[{"value":"/ This module defines a trait that can be used to plug in different Futures executors into","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":118609,"byte_end":118701,"line_start":1,"line_end":1,"column_start":1,"column_end":93}},{"value":"/ Criterion.rs' async benchmarking support.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":118702,"byte_end":118747,"line_start":2,"line_end":2,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":118748,"byte_end":118751,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Implementations are provided for:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":118752,"byte_end":118789,"line_start":4,"line_end":4,"column_start":1,"column_end":38}},{"value":"/ * Tokio (implemented directly for tokio::Runtime)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":118790,"byte_end":118843,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/ * Async-std","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":118844,"byte_end":118859,"line_start":6,"line_end":6,"column_start":1,"column_end":16}},{"value":"/ * Smol","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":118860,"byte_end":118870,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"/ * The Futures crate","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":118871,"byte_end":118894,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":118895,"byte_end":118898,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Please note that async benchmarks will have a small amount of measurement overhead relative","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":118899,"byte_end":118994,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ to synchronous benchmarks. It is recommended to use synchronous benchmarks where possible, to","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":118995,"byte_end":119092,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ improve measurement accuracy.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":119093,"byte_end":119126,"line_start":12,"line_end":12,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":416},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":119436,"byte_end":119449,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"AsyncExecutor","qualname":"::async_executor::AsyncExecutor","value":"AsyncExecutor","parent":null,"children":[{"krate":0,"index":417}],"decl_id":null,"docs":" Plugin trait used to allow benchmarking on multiple different async runtimes.","sig":null,"attributes":[{"value":"/ Plugin trait used to allow benchmarking on multiple different async runtimes.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":119154,"byte_end":119235,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":119236,"byte_end":119239,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Smol, Tokio and Async-std are supported out of the box, as is the current-thread runner from the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":119240,"byte_end":119340,"line_start":18,"line_end":18,"column_start":1,"column_end":101}},{"value":"/ Futures crate; it is recommended to use whichever runtime you use in production.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":119341,"byte_end":119425,"line_start":19,"line_end":19,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":119561,"byte_end":119569,"line_start":22,"line_end":22,"column_start":8,"column_end":16},"name":"block_on","qualname":"::async_executor::AsyncExecutor::block_on","value":"pub fn block_on<T, impl Future<Output = T>: Future<Output =\nT>>(&Self, impl Future<Output = T>) -> T","parent":{"krate":0,"index":416},"children":[],"decl_id":null,"docs":" Spawn the given future onto this runtime and block until it's complete, returning the result.\n","sig":null,"attributes":[{"value":"/ Spawn the given future onto this runtime and block until it's complete, returning the result.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/async_executor.rs","byte_start":119456,"byte_end":119553,"line_start":21,"line_end":21,"column_start":5,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":122706,"byte_end":122713,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Bencher","qualname":"::bencher::Bencher","value":"Bencher {  }","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"decl_id":null,"docs":" Timer struct used to iterate a benchmarked function and measure the runtime.","sig":null,"attributes":[{"value":"/ Timer struct used to iterate a benchmarked function and measure the runtime.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":121580,"byte_end":121660,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":121661,"byte_end":121664,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This struct provides different timing loops as methods. Each timing loop provides a different","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":121665,"byte_end":121762,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ way to time a routine and each has advantages and disadvantages.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":121763,"byte_end":121831,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":121832,"byte_end":121835,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ * If you want to do the iteration and measurement yourself (eg. passing the iteration count","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":121836,"byte_end":121931,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/   to a separate process), use `iter_custom`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":121932,"byte_end":121980,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/ * If your routine requires no per-iteration setup and returns a value with an expensive `drop`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":121981,"byte_end":122079,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/   method, use `iter_with_large_drop`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":122080,"byte_end":122121,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ * If your routine requires some per-iteration setup that shouldn't be timed, use `iter_batched`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":122122,"byte_end":122221,"line_start":28,"line_end":28,"column_start":1,"column_end":100}},{"value":"/   or `iter_batched_ref`. See [`BatchSize`](enum.BatchSize.html) for a discussion of batch sizes.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":122222,"byte_end":122322,"line_start":29,"line_end":29,"column_start":1,"column_end":101}},{"value":"/   If the setup value implements `Drop` and you don't want to include the `drop` time in the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":122323,"byte_end":122418,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/   measurement, use `iter_batched_ref`, otherwise use `iter_batched`. These methods are also","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":122419,"byte_end":122514,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/   suitable for benchmarking routines which return a value with an expensive `drop` method,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":122515,"byte_end":122609,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"/   but are more complex than `iter_with_large_drop`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":122610,"byte_end":122665,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/ * Otherwise, use `iter`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":122666,"byte_end":122694,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124308,"byte_end":124312,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"iter","qualname":"<Bencher>::iter","value":"pub fn iter<O, R>(&mut Self, R) where R: FnMut() -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by executing it many times and timing the total elapsed time.","sig":null,"attributes":[{"value":"/ Times a `routine` by executing it many times and timing the total elapsed time.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123215,"byte_end":123298,"line_start":43,"line_end":43,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123303,"byte_end":123306,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Prefer this timing loop when `routine` returns a value that doesn't have a destructor.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123311,"byte_end":123401,"line_start":45,"line_end":45,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123406,"byte_end":123409,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123414,"byte_end":123432,"line_start":47,"line_end":47,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123437,"byte_end":123440,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that the `Bencher` also times the time required to destroy the output of `routine()`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123445,"byte_end":123539,"line_start":49,"line_end":49,"column_start":5,"column_end":99}},{"value":"/ Therefore prefer this timing loop when the runtime of `mem::drop(O)` is negligible compared","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123544,"byte_end":123639,"line_start":50,"line_end":50,"column_start":5,"column_end":100}},{"value":"/ to the runtime of the `routine`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123644,"byte_end":123680,"line_start":51,"line_end":51,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123685,"byte_end":123688,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123693,"byte_end":123704,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ elapsed = Instant::now + iters * (routine + mem::drop(O) + Range::next)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123709,"byte_end":123784,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123789,"byte_end":123796,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123801,"byte_end":123804,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123809,"byte_end":123822,"line_start":57,"line_end":57,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123827,"byte_end":123830,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123835,"byte_end":123846,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123851,"byte_end":123891,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123896,"byte_end":123899,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123904,"byte_end":123925,"line_start":62,"line_end":62,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123930,"byte_end":123933,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ // The function to benchmark","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123938,"byte_end":123970,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ fn foo() {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123975,"byte_end":123989,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/     // ...","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123994,"byte_end":124008,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124013,"byte_end":124018,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124023,"byte_end":124026,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124031,"byte_end":124064,"line_start":69,"line_end":69,"column_start":5,"column_end":38}},{"value":"/     c.bench_function(\"iter\", move |b| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124069,"byte_end":124112,"line_start":70,"line_end":70,"column_start":5,"column_end":48}},{"value":"/         b.iter(|| foo())","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124117,"byte_end":124145,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/     });","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124150,"byte_end":124161,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124166,"byte_end":124171,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124176,"byte_end":124179,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124184,"byte_end":124221,"line_start":75,"line_end":75,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124226,"byte_end":124255,"line_start":76,"line_end":76,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124260,"byte_end":124267,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124272,"byte_end":124275,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124280,"byte_end":124296,"line_start":79,"line_end":79,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125903,"byte_end":125914,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"iter_custom","qualname":"<Bencher>::iter_custom","value":"pub fn iter_custom<R>(&mut Self, R) where R: FnMut(u64) -> M::Value","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by executing it many times and relying on `routine` to measure its own execution time.","sig":null,"attributes":[{"value":"/ Times a `routine` by executing it many times and relying on `routine` to measure its own execution time.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124692,"byte_end":124800,"line_start":94,"line_end":94,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124805,"byte_end":124808,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Prefer this timing loop in cases where `routine` has to do its own measurements to","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124813,"byte_end":124899,"line_start":96,"line_end":96,"column_start":5,"column_end":91}},{"value":"/ get accurate timing information (for example in multi-threaded scenarios where you spawn","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":124904,"byte_end":124996,"line_start":97,"line_end":97,"column_start":5,"column_end":97}},{"value":"/ and coordinate with multiple threads).","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125001,"byte_end":125043,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125048,"byte_end":125051,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125056,"byte_end":125074,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ Custom, the timing model is whatever is returned as the Duration from `routine`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125079,"byte_end":125163,"line_start":101,"line_end":101,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125168,"byte_end":125171,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125176,"byte_end":125189,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125194,"byte_end":125205,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125210,"byte_end":125250,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"/ use criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125255,"byte_end":125276,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/ use criterion::black_box;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125281,"byte_end":125310,"line_start":107,"line_end":107,"column_start":5,"column_end":34}},{"value":"/ use std::time::Instant;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125315,"byte_end":125342,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125347,"byte_end":125350,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ fn foo() {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125355,"byte_end":125369,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/     // ...","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125374,"byte_end":125388,"line_start":111,"line_end":111,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125393,"byte_end":125398,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125403,"byte_end":125406,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125411,"byte_end":125444,"line_start":114,"line_end":114,"column_start":5,"column_end":38}},{"value":"/     c.bench_function(\"iter\", move |b| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125449,"byte_end":125492,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/         b.iter_custom(|iters| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125497,"byte_end":125532,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/             let start = Instant::now();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125537,"byte_end":125580,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/             for _i in 0..iters {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125585,"byte_end":125621,"line_start":118,"line_end":118,"column_start":5,"column_end":41}},{"value":"/                 black_box(foo());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125626,"byte_end":125663,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/             }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125668,"byte_end":125685,"line_start":120,"line_end":120,"column_start":5,"column_end":22}},{"value":"/             start.elapsed()","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125690,"byte_end":125721,"line_start":121,"line_end":121,"column_start":5,"column_end":36}},{"value":"/         })","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125726,"byte_end":125740,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125745,"byte_end":125756,"line_start":123,"line_end":123,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125761,"byte_end":125766,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125771,"byte_end":125774,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125779,"byte_end":125816,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125821,"byte_end":125850,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125855,"byte_end":125862,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125867,"byte_end":125870,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":125875,"byte_end":125891,"line_start":130,"line_end":130,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126196,"byte_end":126211,"line_start":142,"line_end":142,"column_start":12,"column_end":27},"name":"iter_with_setup","qualname":"<Bencher>::iter_with_setup","value":"pub fn iter_with_setup<I, O, S, R>(&mut Self, S, R) where S: FnMut() -> I,\nR: FnMut(I) -> O","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127488,"byte_end":127508,"line_start":185,"line_end":185,"column_start":12,"column_end":32},"name":"iter_with_large_drop","qualname":"<Bencher>::iter_with_large_drop","value":"pub fn iter_with_large_drop<O, R>(&mut Self, R) where R: FnMut() -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by collecting its output on each iteration. This avoids timing the\n destructor of the value returned by `routine`.","sig":null,"attributes":[{"value":"/ Times a `routine` by collecting its output on each iteration. This avoids timing the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126403,"byte_end":126491,"line_start":150,"line_end":150,"column_start":5,"column_end":93}},{"value":"/ destructor of the value returned by `routine`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126496,"byte_end":126546,"line_start":151,"line_end":151,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126551,"byte_end":126554,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ WARNING: This requires `O(iters * mem::size_of::<O>())` of memory, and `iters` is not under the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126559,"byte_end":126658,"line_start":153,"line_end":153,"column_start":5,"column_end":104}},{"value":"/ control of the caller. If this causes out-of-memory errors, use `iter_batched` instead.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126663,"byte_end":126754,"line_start":154,"line_end":154,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126759,"byte_end":126762,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126767,"byte_end":126785,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126790,"byte_end":126793,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ``` text","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126798,"byte_end":126810,"line_start":158,"line_end":158,"column_start":5,"column_end":17}},{"value":"/ elapsed = Instant::now + iters * (routine) + Iterator::collect::<Vec<_>>","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126815,"byte_end":126891,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126896,"byte_end":126903,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126908,"byte_end":126911,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126916,"byte_end":126929,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126934,"byte_end":126937,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126942,"byte_end":126953,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":126958,"byte_end":126998,"line_start":165,"line_end":165,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127003,"byte_end":127006,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127011,"byte_end":127032,"line_start":167,"line_end":167,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127037,"byte_end":127040,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ fn create_vector() -> Vec<u64> {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127045,"byte_end":127081,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/     # vec![]","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127086,"byte_end":127102,"line_start":170,"line_end":170,"column_start":5,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127107,"byte_end":127121,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127126,"byte_end":127131,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127136,"byte_end":127139,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127144,"byte_end":127177,"line_start":174,"line_end":174,"column_start":5,"column_end":38}},{"value":"/     c.bench_function(\"with_drop\", move |b| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127182,"byte_end":127230,"line_start":175,"line_end":175,"column_start":5,"column_end":53}},{"value":"/         // This will avoid timing the Vec::drop.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127235,"byte_end":127287,"line_start":176,"line_end":176,"column_start":5,"column_end":57}},{"value":"/         b.iter_with_large_drop(|| create_vector())","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127292,"byte_end":127346,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127351,"byte_end":127362,"line_start":178,"line_end":178,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127367,"byte_end":127372,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127377,"byte_end":127380,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127385,"byte_end":127422,"line_start":181,"line_end":181,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127427,"byte_end":127456,"line_start":182,"line_end":182,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127461,"byte_end":127468,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127473,"byte_end":127476,"line_start":184,"line_end":184,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127692,"byte_end":127713,"line_start":193,"line_end":193,"column_start":12,"column_end":33},"name":"iter_with_large_setup","qualname":"<Bencher>::iter_with_large_setup","value":"pub fn iter_with_large_setup<I, O, S, R>(&mut Self, S, R) where S: FnMut() ->\nI, R: FnMut(I) -> O","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":129313,"byte_end":129325,"line_start":245,"line_end":245,"column_start":12,"column_end":24},"name":"iter_batched","qualname":"<Bencher>::iter_batched","value":"pub fn iter_batched<I, O, S, R>(&mut Self, S, R, BatchSize) where S: FnMut()\n-> I, R: FnMut(I) -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` that requires some input by generating a batch of input, then timing the\n iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for\n details on choosing the batch size. Use this when the routine must consume its input.","sig":null,"attributes":[{"value":"/ Times a `routine` that requires some input by generating a batch of input, then timing the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":127906,"byte_end":128000,"line_start":201,"line_end":201,"column_start":5,"column_end":99}},{"value":"/ iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128005,"byte_end":128094,"line_start":202,"line_end":202,"column_start":5,"column_end":94}},{"value":"/ details on choosing the batch size. Use this when the routine must consume its input.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128099,"byte_end":128188,"line_start":203,"line_end":203,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128193,"byte_end":128196,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ For example, use this loop to benchmark sorting algorithms, because they require unsorted","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128201,"byte_end":128294,"line_start":205,"line_end":205,"column_start":5,"column_end":98}},{"value":"/ data on each iteration.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128299,"byte_end":128326,"line_start":206,"line_end":206,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128331,"byte_end":128334,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128339,"byte_end":128357,"line_start":208,"line_end":208,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128362,"byte_end":128365,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128370,"byte_end":128381,"line_start":210,"line_end":210,"column_start":5,"column_end":16}},{"value":"/ elapsed = (Instant::now * num_batches) + (iters * (routine + O::drop)) + Vec::extend","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128386,"byte_end":128474,"line_start":211,"line_end":211,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128479,"byte_end":128486,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128491,"byte_end":128494,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128499,"byte_end":128512,"line_start":214,"line_end":214,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128517,"byte_end":128520,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128525,"byte_end":128536,"line_start":216,"line_end":216,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128541,"byte_end":128581,"line_start":217,"line_end":217,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128586,"byte_end":128589,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128594,"byte_end":128615,"line_start":219,"line_end":219,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128620,"byte_end":128623,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ fn create_scrambled_data() -> Vec<u64> {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128628,"byte_end":128672,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/     # vec![]","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128677,"byte_end":128693,"line_start":222,"line_end":222,"column_start":5,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128698,"byte_end":128712,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128717,"byte_end":128722,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128727,"byte_end":128730,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ // The sorting algorithm to test","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128735,"byte_end":128771,"line_start":226,"line_end":226,"column_start":5,"column_end":41}},{"value":"/ fn sort(data: &mut [u64]) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128776,"byte_end":128807,"line_start":227,"line_end":227,"column_start":5,"column_end":36}},{"value":"/     // ...","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128812,"byte_end":128826,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128831,"byte_end":128836,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128841,"byte_end":128844,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128849,"byte_end":128882,"line_start":231,"line_end":231,"column_start":5,"column_end":38}},{"value":"/     let data = create_scrambled_data();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128887,"byte_end":128930,"line_start":232,"line_end":232,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128935,"byte_end":128938,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/     c.bench_function(\"with_setup\", move |b| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128943,"byte_end":128992,"line_start":234,"line_end":234,"column_start":5,"column_end":54}},{"value":"/         // This will avoid timing the to_vec call.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":128997,"byte_end":129051,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/         b.iter_batched(|| data.clone(), |mut data| sort(&mut data), BatchSize::SmallInput)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":129056,"byte_end":129150,"line_start":236,"line_end":236,"column_start":5,"column_end":99}},{"value":"/     });","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":129155,"byte_end":129166,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":129171,"byte_end":129176,"line_start":238,"line_end":238,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":129181,"byte_end":129184,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":129189,"byte_end":129226,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":129231,"byte_end":129260,"line_start":241,"line_end":241,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":129265,"byte_end":129272,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":129277,"byte_end":129280,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":129285,"byte_end":129301,"line_start":244,"line_end":244,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":132325,"byte_end":132341,"line_start":335,"line_end":335,"column_start":12,"column_end":28},"name":"iter_batched_ref","qualname":"<Bencher>::iter_batched_ref","value":"pub fn iter_batched_ref<I, O, S, R>(&mut Self, S, R, BatchSize) where\nS: FnMut() -> I, R: FnMut(&mut I) -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` that requires some input by generating a batch of input, then timing the\n iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for\n details on choosing the batch size. Use this when the routine should accept the input by\n mutable reference.","sig":null,"attributes":[{"value":"/ Times a `routine` that requires some input by generating a batch of input, then timing the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":130900,"byte_end":130994,"line_start":290,"line_end":290,"column_start":5,"column_end":99}},{"value":"/ iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":130999,"byte_end":131088,"line_start":291,"line_end":291,"column_start":5,"column_end":94}},{"value":"/ details on choosing the batch size. Use this when the routine should accept the input by","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131093,"byte_end":131185,"line_start":292,"line_end":292,"column_start":5,"column_end":97}},{"value":"/ mutable reference.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131190,"byte_end":131212,"line_start":293,"line_end":293,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131217,"byte_end":131220,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ For example, use this loop to benchmark sorting algorithms, because they require unsorted","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131225,"byte_end":131318,"line_start":295,"line_end":295,"column_start":5,"column_end":98}},{"value":"/ data on each iteration.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131323,"byte_end":131350,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131355,"byte_end":131358,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131363,"byte_end":131381,"line_start":298,"line_end":298,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131386,"byte_end":131389,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131394,"byte_end":131405,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/ elapsed = (Instant::now * num_batches) + (iters * routine) + Vec::extend","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131410,"byte_end":131486,"line_start":301,"line_end":301,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131491,"byte_end":131498,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131503,"byte_end":131506,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131511,"byte_end":131524,"line_start":304,"line_end":304,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131529,"byte_end":131532,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131537,"byte_end":131548,"line_start":306,"line_end":306,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131553,"byte_end":131593,"line_start":307,"line_end":307,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131598,"byte_end":131601,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131606,"byte_end":131627,"line_start":309,"line_end":309,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131632,"byte_end":131635,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ fn create_scrambled_data() -> Vec<u64> {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131640,"byte_end":131684,"line_start":311,"line_end":311,"column_start":5,"column_end":49}},{"value":"/     # vec![]","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131689,"byte_end":131705,"line_start":312,"line_end":312,"column_start":5,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131710,"byte_end":131724,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131729,"byte_end":131734,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131739,"byte_end":131742,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ // The sorting algorithm to test","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131747,"byte_end":131783,"line_start":316,"line_end":316,"column_start":5,"column_end":41}},{"value":"/ fn sort(data: &mut [u64]) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131788,"byte_end":131819,"line_start":317,"line_end":317,"column_start":5,"column_end":36}},{"value":"/     // ...","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131824,"byte_end":131838,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131843,"byte_end":131848,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131853,"byte_end":131856,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131861,"byte_end":131894,"line_start":321,"line_end":321,"column_start":5,"column_end":38}},{"value":"/     let data = create_scrambled_data();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131899,"byte_end":131942,"line_start":322,"line_end":322,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131947,"byte_end":131950,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/     c.bench_function(\"with_setup\", move |b| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":131955,"byte_end":132004,"line_start":324,"line_end":324,"column_start":5,"column_end":54}},{"value":"/         // This will avoid timing the to_vec call.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":132009,"byte_end":132063,"line_start":325,"line_end":325,"column_start":5,"column_end":59}},{"value":"/         b.iter_batched(|| data.clone(), |mut data| sort(&mut data), BatchSize::SmallInput)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":132068,"byte_end":132162,"line_start":326,"line_end":326,"column_start":5,"column_end":99}},{"value":"/     });","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":132167,"byte_end":132178,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":132183,"byte_end":132188,"line_start":328,"line_end":328,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":132193,"byte_end":132196,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":132201,"byte_end":132238,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":132243,"byte_end":132272,"line_start":331,"line_end":331,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":132277,"byte_end":132284,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":132289,"byte_end":132292,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":132297,"byte_end":132313,"line_start":334,"line_end":334,"column_start":5,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":907},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"measurement","qualname":"::measurement","value":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":930},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":948},{"krate":0,"index":950}],"decl_id":null,"docs":" This module defines a set of traits that can be used to plug different measurements (eg.\n Unix's Processor Time, CPU or GPU performance counters, etc.) into Criterion.rs. It also\n includes the [WallTime](struct.WallTime.html) struct which defines the default wall-clock time\n measurement.\n","sig":null,"attributes":[{"value":"/ This module defines a set of traits that can be used to plug different measurements (eg.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":208233,"byte_end":208325,"line_start":1,"line_end":1,"column_start":1,"column_end":93}},{"value":"/ Unix's Processor Time, CPU or GPU performance counters, etc.) into Criterion.rs. It also","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":208326,"byte_end":208418,"line_start":2,"line_end":2,"column_start":1,"column_end":93}},{"value":"/ includes the [WallTime](struct.WallTime.html) struct which defines the default wall-clock time","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":208419,"byte_end":208517,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ measurement.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":208518,"byte_end":208534,"line_start":4,"line_end":4,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":924},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":209459,"byte_end":209473,"line_start":21,"line_end":21,"column_start":11,"column_end":25},"name":"ValueFormatter","qualname":"::measurement::ValueFormatter","value":"ValueFormatter","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"decl_id":null,"docs":" Trait providing functions to format measured values to string so that they can be displayed on\n the command line or in the reports. The functions of this trait take measured values in f64\n form; implementors can assume that the values are of the same scale as those produced by the\n associated [MeasuredValue](trait.MeasuredValue.html) (eg. if your measurement produces values in\n nanoseconds, the values passed to the formatter will be in nanoseconds).","sig":null,"attributes":[{"value":"/ Trait providing functions to format measured values to string so that they can be displayed on","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":208646,"byte_end":208744,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ the command line or in the reports. The functions of this trait take measured values in f64","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":208745,"byte_end":208840,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ form; implementors can assume that the values are of the same scale as those produced by the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":208841,"byte_end":208937,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ associated [MeasuredValue](trait.MeasuredValue.html) (eg. if your measurement produces values in","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":208938,"byte_end":209038,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/ nanoseconds, the values passed to the formatter will be in nanoseconds).","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":209039,"byte_end":209115,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":209116,"byte_end":209119,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Implementors are encouraged to format the values in a way that is intuitive for humans and","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":209120,"byte_end":209214,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ uses the SI prefix system. For example, the format used by [WallTime](struct.WallTime.html)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":209215,"byte_end":209310,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ can display the value in units ranging from picoseconds to seconds depending on the magnitude","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":209311,"byte_end":209408,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ of the elapsed time in nanoseconds.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":209409,"byte_end":209448,"line_start":20,"line_end":20,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":209559,"byte_end":209571,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"format_value","qualname":"::measurement::ValueFormatter::format_value","value":"pub fn format_value(&Self, f64) -> String","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Format the value (with appropriate unit) and return it as a string.\n","sig":null,"attributes":[{"value":"/ Format the value (with appropriate unit) and return it as a string.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":209480,"byte_end":209551,"line_start":22,"line_end":22,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":209951,"byte_end":209968,"line_start":31,"line_end":31,"column_start":8,"column_end":25},"name":"format_throughput","qualname":"::measurement::ValueFormatter::format_throughput","value":"pub fn format_throughput(&Self, &Throughput, f64) -> String","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Format the value as a throughput measurement. The value represents the measurement value;\n the implementor will have to calculate bytes per second, iterations per cycle, etc.\n","sig":null,"attributes":[{"value":"/ Format the value as a throughput measurement. The value represents the measurement value;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":209758,"byte_end":209851,"line_start":29,"line_end":29,"column_start":5,"column_end":98}},{"value":"/ the implementor will have to calculate bytes per second, iterations per cycle, etc.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":209856,"byte_end":209943,"line_start":30,"line_end":30,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":210671,"byte_end":210683,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"scale_values","qualname":"::measurement::ValueFormatter::scale_values","value":"pub fn scale_values(&Self, f64, &mut [f64]) -> &'static str","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Scale the given values to some appropriate unit and return the unit string.","sig":null,"attributes":[{"value":"/ Scale the given values to some appropriate unit and return the unit string.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":210197,"byte_end":210276,"line_start":37,"line_end":37,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":210281,"byte_end":210284,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ The given typical value should be used to choose the unit. This function may be called","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":210289,"byte_end":210379,"line_start":39,"line_end":39,"column_start":5,"column_end":95}},{"value":"/ multiple times with different datasets; the typical value will remain the same to ensure","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":210384,"byte_end":210476,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ that the units remain consistent within a graph. The typical value will not be NaN.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":210481,"byte_end":210568,"line_start":41,"line_end":41,"column_start":5,"column_end":92}},{"value":"/ Values will not contain NaN as input, and the transformed values must not contain NaN.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":210573,"byte_end":210663,"line_start":42,"line_end":42,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":211319,"byte_end":211336,"line_start":52,"line_end":52,"column_start":8,"column_end":25},"name":"scale_throughputs","qualname":"::measurement::ValueFormatter::scale_throughputs","value":"pub fn scale_throughputs(&Self, f64, &Throughput, &mut [f64]) -> &'static str","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Convert the given measured values into throughput numbers based on the given throughput\n value, scale them to some appropriate unit, and return the unit string.","sig":null,"attributes":[{"value":"/ Convert the given measured values into throughput numbers based on the given throughput","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":210753,"byte_end":210844,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ value, scale them to some appropriate unit, and return the unit string.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":210849,"byte_end":210924,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":210929,"byte_end":210932,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The given typical value should be used to choose the unit. This function may be called","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":210937,"byte_end":211027,"line_start":48,"line_end":48,"column_start":5,"column_end":95}},{"value":"/ multiple times with different datasets; the typical value will remain the same to ensure","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":211032,"byte_end":211124,"line_start":49,"line_end":49,"column_start":5,"column_end":97}},{"value":"/ that the units remain consistent within a graph. The typical value will not be NaN.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":211129,"byte_end":211216,"line_start":50,"line_end":50,"column_start":5,"column_end":92}},{"value":"/ Values will not contain NaN as input, and the transformed values must not contain NaN.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":211221,"byte_end":211311,"line_start":51,"line_end":51,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":211790,"byte_end":211808,"line_start":64,"line_end":64,"column_start":8,"column_end":26},"name":"scale_for_machines","qualname":"::measurement::ValueFormatter::scale_for_machines","value":"pub fn scale_for_machines(&Self, &mut [f64]) -> &'static str","parent":{"krate":0,"index":924},"children":[],"decl_id":null,"docs":" Scale the values and return a unit string designed for machines.","sig":null,"attributes":[{"value":"/ Scale the values and return a unit string designed for machines.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":211470,"byte_end":211538,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":211543,"byte_end":211546,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ For example, this is used for the CSV file output. Implementations should modify the given","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":211551,"byte_end":211645,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ values slice to apply the desired scaling (if any) and return a string representing the unit","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":211650,"byte_end":211746,"line_start":62,"line_end":62,"column_start":5,"column_end":101}},{"value":"/ the modified values are in.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":211751,"byte_end":211782,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":930},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212405,"byte_end":212416,"line_start":76,"line_end":76,"column_start":11,"column_end":22},"name":"Measurement","qualname":"::measurement::Measurement","value":"Measurement","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938}],"decl_id":null,"docs":" Trait for all types which define something Criterion.rs can measure. The only measurement\n currently provided is [WallTime](struct.WallTime.html), but third party crates or benchmarks\n may define more.","sig":null,"attributes":[{"value":"/ Trait for all types which define something Criterion.rs can measure. The only measurement","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":211856,"byte_end":211949,"line_start":67,"line_end":67,"column_start":1,"column_end":94}},{"value":"/ currently provided is [WallTime](struct.WallTime.html), but third party crates or benchmarks","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":211950,"byte_end":212046,"line_start":68,"line_end":68,"column_start":1,"column_end":97}},{"value":"/ may define more.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212047,"byte_end":212067,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212068,"byte_end":212071,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This trait defines two core methods, `start` and `end`. `start` is called at the beginning of","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212072,"byte_end":212169,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/ a measurement to produce some intermediate value (for example, the wall-clock time at the start","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212170,"byte_end":212269,"line_start":72,"line_end":72,"column_start":1,"column_end":100}},{"value":"/ of that set of iterations) and `end` is called at the end of the measurement with the value","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212270,"byte_end":212365,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ returned by `start`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212366,"byte_end":212390,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212391,"byte_end":212394,"line_start":75,"line_end":75,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":931},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212655,"byte_end":212667,"line_start":80,"line_end":80,"column_start":10,"column_end":22},"name":"Intermediate","qualname":"::measurement::Measurement::Intermediate","value":"type Intermediate;","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" This type represents an intermediate value for the measurements. It will be produced by the\n start function and passed to the end function. An example might be the wall-clock time as\n of the `start` call.\n","sig":null,"attributes":[{"value":"/ This type represents an intermediate value for the measurements. It will be produced by the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212423,"byte_end":212518,"line_start":77,"line_end":77,"column_start":5,"column_end":100}},{"value":"/ start function and passed to the end function. An example might be the wall-clock time as","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212523,"byte_end":212616,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ of the `start` call.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212621,"byte_end":212645,"line_start":79,"line_end":79,"column_start":5,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":932},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212813,"byte_end":212818,"line_start":84,"line_end":84,"column_start":10,"column_end":15},"name":"Value","qualname":"::measurement::Measurement::Value","value":"type Value;","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" This type is the measured value. An example might be the elapsed wall-clock time between the\n `start` and `end` calls.\n","sig":null,"attributes":[{"value":"/ This type is the measured value. An example might be the elapsed wall-clock time between the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212674,"byte_end":212770,"line_start":82,"line_end":82,"column_start":5,"column_end":101}},{"value":"/ `start` and `end` calls.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212775,"byte_end":212803,"line_start":83,"line_end":83,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212896,"byte_end":212901,"line_start":87,"line_end":87,"column_start":8,"column_end":13},"name":"start","qualname":"::measurement::Measurement::start","value":"pub fn start(&Self) -> Self::Intermediate","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Criterion.rs will call this before iterating the benchmark.\n","sig":null,"attributes":[{"value":"/ Criterion.rs will call this before iterating the benchmark.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212825,"byte_end":212888,"line_start":86,"line_end":86,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":213033,"byte_end":213036,"line_start":90,"line_end":90,"column_start":8,"column_end":11},"name":"end","qualname":"::measurement::Measurement::end","value":"pub fn end(&Self, Self::Intermediate) -> Self::Value","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Criterion.rs will call this after iterating the benchmark to get the measured value.\n","sig":null,"attributes":[{"value":"/ Criterion.rs will call this after iterating the benchmark to get the measured value.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":212937,"byte_end":213025,"line_start":89,"line_end":89,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":213293,"byte_end":213296,"line_start":94,"line_end":94,"column_start":8,"column_end":11},"name":"add","qualname":"::measurement::Measurement::add","value":"pub fn add(&Self, &Self::Value, &Self::Value) -> Self::Value","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Combine two values. Criterion.rs sometimes needs to perform measurements in multiple batches\n of iterations, so the value from one batch must be added to the sum of the previous batches.\n","sig":null,"attributes":[{"value":"/ Combine two values. Criterion.rs sometimes needs to perform measurements in multiple batches","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":213088,"byte_end":213184,"line_start":92,"line_end":92,"column_start":5,"column_end":101}},{"value":"/ of iterations, so the value from one batch must be added to the sum of the previous batches.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":213189,"byte_end":213285,"line_start":93,"line_end":93,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":213450,"byte_end":213454,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"zero","qualname":"::measurement::Measurement::zero","value":"pub fn zero(&Self) -> Self::Value","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Return a \"zero\" value for the Value type which can be added to another value.\n","sig":null,"attributes":[{"value":"/ Return a \"zero\" value for the Value type which can be added to another value.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":213361,"byte_end":213442,"line_start":96,"line_end":96,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":213577,"byte_end":213583,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::measurement::Measurement::to_f64","value":"pub fn to_f64(&Self, &Self::Value) -> f64","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Converts the measured value to f64 so that it can be used in statistical analysis.\n","sig":null,"attributes":[{"value":"/ Converts the measured value to f64 so that it can be used in statistical analysis.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":213483,"byte_end":213569,"line_start":99,"line_end":99,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":213713,"byte_end":213722,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"formatter","qualname":"::measurement::Measurement::formatter","value":"pub fn formatter(&Self) -> &dyn ValueFormatter","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Return a trait-object reference to the value formatter for this measurement.\n","sig":null,"attributes":[{"value":"/ Return a trait-object reference to the value formatter for this measurement.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":213625,"byte_end":213705,"line_start":102,"line_end":102,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":948},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":216431,"byte_end":216439,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"WallTime","qualname":"::measurement::WallTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" `WallTime` is the default measurement in Criterion.rs. It measures the elapsed time from the\n beginning of a series of iterations to the end.\n","sig":null,"attributes":[{"value":"/ `WallTime` is the default measurement in Criterion.rs. It measures the elapsed time from the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":216271,"byte_end":216367,"line_start":187,"line_end":187,"column_start":1,"column_end":97}},{"value":"/ beginning of a series of iterations to the end.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":216368,"byte_end":216419,"line_start":188,"line_end":188,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"profiler","qualname":"::profiler","value":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","parent":null,"children":[{"krate":0,"index":1737},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1745}],"decl_id":null,"docs":" This module provides an extension trait which allows in-process profilers\n to be hooked into the `--profile-time` argument at compile-time. Users of\n out-of-process profilers such as perf don't need to do anything special.\n","sig":null,"attributes":[{"value":"/ This module provides an extension trait which allows in-process profilers","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":321953,"byte_end":322030,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ to be hooked into the `--profile-time` argument at compile-time. Users of","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322031,"byte_end":322108,"line_start":2,"line_end":2,"column_start":1,"column_end":78}},{"value":"/ out-of-process profilers such as perf don't need to do anything special.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322109,"byte_end":322185,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1740},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322362,"byte_end":322370,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"Profiler","qualname":"::profiler::Profiler","value":"Profiler","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1742}],"decl_id":null,"docs":" Extension trait for external crates to implement which provides start/stop\n hooks when profiling (but not when benchmarking) functions.\n","sig":null,"attributes":[{"value":"/ Extension trait for external crates to implement which provides start/stop","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322209,"byte_end":322287,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ hooks when profiling (but not when benchmarking) functions.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322288,"byte_end":322351,"line_start":8,"line_end":8,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322593,"byte_end":322608,"line_start":13,"line_end":13,"column_start":8,"column_end":23},"name":"start_profiling","qualname":"::profiler::Profiler::start_profiling","value":"pub fn start_profiling(&mut Self, &str, &Path)","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" This function is called when Criterion.rs starts profiling a particular\n benchmark. It provides the stringified benchmark ID and\n a path to a directory where the profiler can store its data.\n","sig":null,"attributes":[{"value":"/ This function is called when Criterion.rs starts profiling a particular","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322377,"byte_end":322452,"line_start":10,"line_end":10,"column_start":5,"column_end":80}},{"value":"/ benchmark. It provides the stringified benchmark ID and","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322457,"byte_end":322516,"line_start":11,"line_end":11,"column_start":5,"column_end":64}},{"value":"/ a path to a directory where the profiler can store its data.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322521,"byte_end":322585,"line_start":12,"line_end":12,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322875,"byte_end":322889,"line_start":18,"line_end":18,"column_start":8,"column_end":22},"name":"stop_profiling","qualname":"::profiler::Profiler::stop_profiling","value":"pub fn stop_profiling(&mut Self, &str, &Path)","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" This function is called after Criterion.rs stops profiling a particular\n benchmark. The benchmark ID and directory are the same as in the call\n to `start`, provided for convenience.\n","sig":null,"attributes":[{"value":"/ This function is called after Criterion.rs stops profiling a particular","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322668,"byte_end":322743,"line_start":15,"line_end":15,"column_start":5,"column_end":80}},{"value":"/ benchmark. The benchmark ID and directory are the same as in the call","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322748,"byte_end":322821,"line_start":16,"line_end":16,"column_start":5,"column_end":78}},{"value":"/ to `start`, provided for convenience.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322826,"byte_end":322867,"line_start":17,"line_end":17,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1743},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":323184,"byte_end":323200,"line_start":24,"line_end":24,"column_start":12,"column_end":28},"name":"ExternalProfiler","qualname":"::profiler::ExternalProfiler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy profiler implementation, representing cases where the profiler is\n an external process (eg. perftools, etc.) which do not require start/stop\n hooks. This implementation does nothing and is used as the default.\n","sig":null,"attributes":[{"value":"/ Dummy profiler implementation, representing cases where the profiler is","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":322947,"byte_end":323022,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ an external process (eg. perftools, etc.) which do not require start/stop","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":323023,"byte_end":323100,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ hooks. This implementation does nothing and is used as the default.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":323101,"byte_end":323172,"line_start":23,"line_end":23,"column_start":1,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":2131},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":370675,"byte_end":370680,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Tuple","qualname":"::stats::tuple::Tuple","value":"Tuple: Sized","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2133}],"decl_id":null,"docs":" Any tuple: `(A, B, ..)`\n","sig":null,"attributes":[{"value":"/ Any tuple: `(A, B, ..)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":370637,"byte_end":370664,"line_start":5,"line_end":5,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":370759,"byte_end":370772,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"Distributions","qualname":"::stats::tuple::Tuple::Distributions","value":"type Distributions: TupledDistributions<Item = Self>;","parent":{"krate":0,"index":2131},"children":[],"decl_id":null,"docs":" A tuple of distributions associated with this tuple\n","sig":null,"attributes":[{"value":"/ A tuple of distributions associated with this tuple","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":370694,"byte_end":370749,"line_start":7,"line_end":7,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":2133},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":370872,"byte_end":370879,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Builder","qualname":"::stats::tuple::Tuple::Builder","value":"type Builder: TupledDistributionsBuilder<Item = Self>;","parent":{"krate":0,"index":2131},"children":[],"decl_id":null,"docs":" A tuple of vectors associated with this tuple\n","sig":null,"attributes":[{"value":"/ A tuple of vectors associated with this tuple","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":370813,"byte_end":370862,"line_start":10,"line_end":10,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":371118,"byte_end":371122,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"name":"Item","qualname":"::stats::tuple::TupledDistributions::Item","value":"type Item: Tuple<Distributions = Self>;","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" A tuple that can be pushed/inserted into the tupled distributions\n","sig":null,"attributes":[{"value":"/ A tuple that can be pushed/inserted into the tupled distributions","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":371039,"byte_end":371108,"line_start":16,"line_end":16,"column_start":5,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":371334,"byte_end":371338,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::stats::tuple::TupledDistributionsBuilder::Item","value":"type Item: Tuple<Builder = Self>;","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" A tuple that can be pushed/inserted into the tupled distributions\n","sig":null,"attributes":[{"value":"/ A tuple that can be pushed/inserted into the tupled distributions","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":371255,"byte_end":371324,"line_start":22,"line_end":22,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2229},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":385988,"byte_end":385999,"line_start":5,"line_end":5,"column_start":12,"column_end":23},"name":"Percentiles","qualname":"::stats::univariate::percentiles::Percentiles","value":"","parent":null,"children":[],"decl_id":null,"docs":" A \"view\" into the percentiles of a sample\n","sig":null,"attributes":[{"value":"/ A \"view\" into the percentiles of a sample","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":385931,"byte_end":385976,"line_start":4,"line_end":4,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":387118,"byte_end":387120,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"at","qualname":"<Percentiles<A>>::at","value":"pub fn at(&Self, A) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the percentile at `p`%","sig":null,"attributes":[{"value":"/ Returns the percentile at `p`%","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":386978,"byte_end":387012,"line_start":40,"line_end":40,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":387017,"byte_end":387020,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":387025,"byte_end":387037,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":387042,"byte_end":387045,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Panics if `p` is outside the closed `[0, 100]` range","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":387050,"byte_end":387106,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":387377,"byte_end":387380,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"iqr","qualname":"<Percentiles<A>>::iqr","value":"pub fn iqr(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the interquartile range\n","sig":null,"attributes":[{"value":"/ Returns the interquartile range","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":387330,"byte_end":387365,"line_start":55,"line_end":55,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":387603,"byte_end":387609,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"median","qualname":"<Percentiles<A>>::median","value":"pub fn median(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the 50th percentile\n","sig":null,"attributes":[{"value":"/ Returns the 50th percentile","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":387560,"byte_end":387591,"line_start":65,"line_end":65,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":387744,"byte_end":387753,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"quartiles","qualname":"<Percentiles<A>>::quartiles","value":"pub fn quartiles(&Self) -> (A, A, A)","parent":null,"children":[],"decl_id":null,"docs":" Returns the 25th, 50th and 75th percentiles\n","sig":null,"attributes":[{"value":"/ Returns the 25th, 50th and 75th percentiles","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":387685,"byte_end":387732,"line_start":70,"line_end":70,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391743,"byte_end":391749,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Sample","qualname":"::stats::univariate::sample::Sample","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of data points drawn from a population","sig":null,"attributes":[{"value":"/ A collection of data points drawn from a population","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391567,"byte_end":391622,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391623,"byte_end":391626,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Invariants:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391627,"byte_end":391642,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391643,"byte_end":391646,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - The sample contains at least 2 data points","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391647,"byte_end":391695,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/ - The sample contains no `NaN`s","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391696,"byte_end":391731,"line_start":14,"line_end":14,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":392135,"byte_end":392138,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Sample<A>>::new","value":"pub fn new(&[A]) -> &Sample<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sample from an existing slice","sig":null,"attributes":[{"value":"/ Creates a new sample from an existing slice","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391883,"byte_end":391930,"line_start":22,"line_end":22,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391935,"byte_end":391938,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391943,"byte_end":391955,"line_start":24,"line_end":24,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391960,"byte_end":391963,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Panics if `slice` contains any `NaN` or if `slice` has less than two elements","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391968,"byte_end":392049,"line_start":26,"line_end":26,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":392385,"byte_end":392388,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"max","qualname":"<Sample<A>>::max","value":"pub fn max(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the biggest element in the sample","sig":null,"attributes":[{"value":"/ Returns the biggest element in the sample","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":392292,"byte_end":392337,"line_start":34,"line_end":34,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":392342,"byte_end":392345,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":392350,"byte_end":392373,"line_start":36,"line_end":36,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2302},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":392782,"byte_end":392786,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"mean","qualname":"<Sample<A>>::mean","value":"pub fn mean(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the arithmetic average of the sample","sig":null,"attributes":[{"value":"/ Returns the arithmetic average of the sample","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":392686,"byte_end":392734,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":392739,"byte_end":392742,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":392747,"byte_end":392770,"line_start":49,"line_end":49,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":393085,"byte_end":393099,"line_start":62,"line_end":62,"column_start":12,"column_end":26},"name":"median_abs_dev","qualname":"<Sample<A>>::median_abs_dev","value":"pub fn median_abs_dev(&Self, Option<A>) -> A where usize: cast::From<A, Output\n= Result<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the median absolute deviation","sig":null,"attributes":[{"value":"/ Returns the median absolute deviation","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":392873,"byte_end":392914,"line_start":56,"line_end":56,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":392919,"byte_end":392922,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The `median` can be optionally passed along to speed up (2X) the computation","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":392927,"byte_end":393007,"line_start":58,"line_end":58,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":393012,"byte_end":393015,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":393020,"byte_end":393043,"line_start":60,"line_end":60,"column_start":5,"column_end":28}},{"value":"/ - Memory: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":393048,"byte_end":393073,"line_start":61,"line_end":61,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":393841,"byte_end":393859,"line_start":81,"line_end":81,"column_start":12,"column_end":30},"name":"median_abs_dev_pct","qualname":"<Sample<A>>::median_abs_dev_pct","value":"pub fn median_abs_dev_pct(&Self) -> A where usize: cast::From<A, Output =\nResult<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the median absolute deviation as a percentage of the median","sig":null,"attributes":[{"value":"/ Returns the median absolute deviation as a percentage of the median","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":393692,"byte_end":393763,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":393768,"byte_end":393771,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":393776,"byte_end":393799,"line_start":79,"line_end":79,"column_start":5,"column_end":28}},{"value":"/ - Memory: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":393804,"byte_end":393829,"line_start":80,"line_end":80,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":394227,"byte_end":394230,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"min","qualname":"<Sample<A>>::min","value":"pub fn min(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest element in the sample","sig":null,"attributes":[{"value":"/ Returns the smallest element in the sample","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":394133,"byte_end":394179,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":394184,"byte_end":394187,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":394192,"byte_end":394215,"line_start":94,"line_end":94,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":394774,"byte_end":394785,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"percentiles","qualname":"<Sample<A>>::percentiles","value":"pub fn percentiles(&Self) -> Percentiles<A> where usize: cast::From<A, Output\n= Result<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a \"view\" into the percentiles of the sample","sig":null,"attributes":[{"value":"/ Returns a \"view\" into the percentiles of the sample","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":394528,"byte_end":394583,"line_start":105,"line_end":105,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":394588,"byte_end":394591,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This \"view\" makes consecutive computations of percentiles much faster (`O(1)`)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":394596,"byte_end":394678,"line_start":107,"line_end":107,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":394683,"byte_end":394686,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(N log N) where N = length`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":394691,"byte_end":394732,"line_start":109,"line_end":109,"column_start":5,"column_end":46}},{"value":"/ - Memory: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":394737,"byte_end":394762,"line_start":110,"line_end":110,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":395678,"byte_end":395685,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"std_dev","qualname":"<Sample<A>>::std_dev","value":"pub fn std_dev(&Self, Option<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the standard deviation of the sample","sig":null,"attributes":[{"value":"/ Returns the standard deviation of the sample","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":395491,"byte_end":395539,"line_start":136,"line_end":136,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":395544,"byte_end":395547,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ The `mean` can be optionally passed along to speed up (2X) the computation","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":395552,"byte_end":395630,"line_start":138,"line_end":138,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":395635,"byte_end":395638,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":395643,"byte_end":395666,"line_start":140,"line_end":140,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":395868,"byte_end":395879,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"std_dev_pct","qualname":"<Sample<A>>::std_dev_pct","value":"pub fn std_dev_pct(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the standard deviation as a percentage of the mean","sig":null,"attributes":[{"value":"/ Returns the standard deviation as a percentage of the mean","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":395758,"byte_end":395820,"line_start":145,"line_end":145,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":395825,"byte_end":395828,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":395833,"byte_end":395856,"line_start":147,"line_end":147,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396152,"byte_end":396155,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"sum","qualname":"<Sample<A>>::sum","value":"pub fn sum(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the sum of all the elements of the sample","sig":null,"attributes":[{"value":"/ Returns the sum of all the elements of the sample","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396051,"byte_end":396104,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396109,"byte_end":396112,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396117,"byte_end":396140,"line_start":158,"line_end":158,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396310,"byte_end":396311,"line_start":166,"line_end":166,"column_start":12,"column_end":13},"name":"t","qualname":"<Sample<A>>::t","value":"pub fn t(&Self, &Sample<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the t score between these two samples","sig":null,"attributes":[{"value":"/ Returns the t score between these two samples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396213,"byte_end":396262,"line_start":163,"line_end":163,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396267,"byte_end":396270,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396275,"byte_end":396298,"line_start":165,"line_end":165,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396850,"byte_end":396853,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"var","qualname":"<Sample<A>>::var","value":"pub fn var(&Self, Option<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the variance of the sample","sig":null,"attributes":[{"value":"/ Returns the variance of the sample","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396673,"byte_end":396711,"line_start":177,"line_end":177,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396716,"byte_end":396719,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The `mean` can be optionally passed along to speed up (2X) the computation","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396724,"byte_end":396802,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396807,"byte_end":396810,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":396815,"byte_end":396838,"line_start":181,"line_end":181,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":397439,"byte_end":397448,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"bootstrap","qualname":"<Sample<A>>::bootstrap","value":"pub fn bootstrap<T, S>(&Self, usize, S) -> T::Distributions where\nS: Fn(&Sample<A>) -> T + Sync, T: Tuple + Send, T::Distributions: Send,\nT::Builder: Send","parent":null,"children":[],"decl_id":null,"docs":" Returns the bootstrap distributions of the parameters estimated by the 1-sample statistic","sig":null,"attributes":[{"value":"/ Returns the bootstrap distributions of the parameters estimated by the 1-sample statistic","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":397235,"byte_end":397328,"line_start":197,"line_end":197,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":397333,"byte_end":397336,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ - Multi-threaded","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":397341,"byte_end":397361,"line_start":199,"line_end":199,"column_start":5,"column_end":25}},{"value":"/ - Time: `O(nresamples)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":397366,"byte_end":397393,"line_start":200,"line_end":200,"column_start":5,"column_end":32}},{"value":"/ - Memory: `O(nresamples)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":397398,"byte_end":397427,"line_start":201,"line_end":201,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3989},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408686,"byte_end":408699,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"LabeledSample","qualname":"::stats::univariate::outliers::tukey::LabeledSample","value":"LabeledSample {  }","parent":null,"children":[{"krate":0,"index":3992},{"krate":0,"index":3993}],"decl_id":null,"docs":" A classified/labeled sample.","sig":null,"attributes":[{"value":"/ A classified/labeled sample.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408302,"byte_end":408334,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408335,"byte_end":408338,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The labeled data can be accessed using the indexing operator. The order of the data points is","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408339,"byte_end":408436,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"/ retained.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408437,"byte_end":408450,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408451,"byte_end":408454,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ NOTE: Due to limitations in the indexing traits, only the label is returned. Once the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408455,"byte_end":408544,"line_start":54,"line_end":54,"column_start":1,"column_end":90}},{"value":"/ `IndexGet` trait lands in stdlib, the indexing operation will return a `(data_point, label)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408545,"byte_end":408641,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/ pair.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408642,"byte_end":408651,"line_start":56,"line_end":56,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":409011,"byte_end":409016,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"count","qualname":"<LabeledSample>::count","value":"pub fn count(&Self) -> (usize, usize, usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of data points per label","sig":null,"attributes":[{"value":"/ Returns the number of data points per label","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408844,"byte_end":408891,"line_start":70,"line_end":70,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408896,"byte_end":408899,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408904,"byte_end":408927,"line_start":72,"line_end":72,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":409732,"byte_end":409738,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"fences","qualname":"<LabeledSample>::fences","value":"pub fn fences(&Self) -> (A, A, A, A)","parent":null,"children":[],"decl_id":null,"docs":" Returns the fences used to classify the outliers\n","sig":null,"attributes":[{"value":"/ Returns the fences used to classify the outliers","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":409668,"byte_end":409720,"line_start":100,"line_end":100,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":409852,"byte_end":409856,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"iter","qualname":"<LabeledSample>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the labeled data\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the labeled data","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":409795,"byte_end":409840,"line_start":105,"line_end":105,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":411235,"byte_end":411239,"line_start":170,"line_end":170,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stats::univariate::outliers::tukey::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2467}],"decl_id":null,"docs":" Iterator over the labeled data\n","sig":null,"attributes":[{"value":"/ Iterator over the labeled data","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":411189,"byte_end":411223,"line_start":169,"line_end":169,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2476},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412171,"byte_end":412179,"line_start":213,"line_end":213,"column_start":5,"column_end":13},"name":"HighMild","qualname":"::stats::univariate::outliers::tukey::Label::HighMild","value":"Label::HighMild","parent":{"krate":0,"index":2475},"children":[],"decl_id":null,"docs":" A \"mild\" outlier in the \"high\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"mild\" outlier in the \"high\" spectrum","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412123,"byte_end":412166,"line_start":212,"line_end":212,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2478},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412235,"byte_end":412245,"line_start":215,"line_end":215,"column_start":5,"column_end":15},"name":"HighSevere","qualname":"::stats::univariate::outliers::tukey::Label::HighSevere","value":"Label::HighSevere","parent":{"krate":0,"index":2475},"children":[],"decl_id":null,"docs":" A \"severe\" outlier in the \"high\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"severe\" outlier in the \"high\" spectrum","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412185,"byte_end":412230,"line_start":214,"line_end":214,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412298,"byte_end":412305,"line_start":217,"line_end":217,"column_start":5,"column_end":12},"name":"LowMild","qualname":"::stats::univariate::outliers::tukey::Label::LowMild","value":"Label::LowMild","parent":{"krate":0,"index":2475},"children":[],"decl_id":null,"docs":" A \"mild\" outlier in the \"low\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"mild\" outlier in the \"low\" spectrum","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412251,"byte_end":412293,"line_start":216,"line_end":216,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2482},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412360,"byte_end":412369,"line_start":219,"line_end":219,"column_start":5,"column_end":14},"name":"LowSevere","qualname":"::stats::univariate::outliers::tukey::Label::LowSevere","value":"Label::LowSevere","parent":{"krate":0,"index":2475},"children":[],"decl_id":null,"docs":" A \"severe\" outlier in the \"low\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"severe\" outlier in the \"low\" spectrum","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412311,"byte_end":412355,"line_start":218,"line_end":218,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2484},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412403,"byte_end":412415,"line_start":221,"line_end":221,"column_start":5,"column_end":17},"name":"NotAnOutlier","qualname":"::stats::univariate::outliers::tukey::Label::NotAnOutlier","value":"Label::NotAnOutlier","parent":{"krate":0,"index":2475},"children":[],"decl_id":null,"docs":" A normal data point\n","sig":null,"attributes":[{"value":"/ A normal data point","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412375,"byte_end":412398,"line_start":220,"line_end":220,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":2475},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412111,"byte_end":412116,"line_start":211,"line_end":211,"column_start":10,"column_end":15},"name":"Label","qualname":"::stats::univariate::outliers::tukey::Label","value":"pub enum Label { HighMild, HighSevere, LowMild, LowSevere, NotAnOutlier, }","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2482},{"krate":0,"index":2484}],"decl_id":null,"docs":" Labels used to classify outliers\n","sig":null,"attributes":[{"value":"/ Labels used to classify outliers","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412065,"byte_end":412101,"line_start":210,"line_end":210,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412507,"byte_end":412514,"line_start":226,"line_end":226,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Label>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point has an \"unusually\" high value\n","sig":null,"attributes":[{"value":"/ Checks if the data point has an \"unusually\" high value","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412437,"byte_end":412495,"line_start":225,"line_end":225,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412661,"byte_end":412668,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"is_mild","qualname":"<Label>::is_mild","value":"pub fn is_mild(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as a \"mild\" outlier\n","sig":null,"attributes":[{"value":"/ Checks if the data point is labeled as a \"mild\" outlier","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412590,"byte_end":412649,"line_start":230,"line_end":230,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412810,"byte_end":412816,"line_start":236,"line_end":236,"column_start":12,"column_end":18},"name":"is_low","qualname":"<Label>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point has an \"unusually\" low value\n","sig":null,"attributes":[{"value":"/ Checks if the data point has an \"unusually\" low value","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412741,"byte_end":412798,"line_start":235,"line_end":235,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412955,"byte_end":412965,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"is_outlier","qualname":"<Label>::is_outlier","value":"pub fn is_outlier(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as an outlier\n","sig":null,"attributes":[{"value":"/ Checks if the data point is labeled as an outlier","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412890,"byte_end":412943,"line_start":240,"line_end":240,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":413105,"byte_end":413114,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"is_severe","qualname":"<Label>::is_severe","value":"pub fn is_severe(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as a \"severe\" outlier\n","sig":null,"attributes":[{"value":"/ Checks if the data point is labeled as a \"severe\" outlier","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":413032,"byte_end":413093,"line_start":245,"line_end":245,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/float.rs","byte_start":414019,"byte_end":414024,"line_start":9,"line_end":9,"column_start":11,"column_end":16},"name":"Float","qualname":"::stats::float::Float","value":"Float: float::Float + From<usize, Output = Self> + From<f32, Output = Self> + Sync +\nSend","parent":null,"children":[],"decl_id":null,"docs":" This is an extension of `num_traits::float::Float` that adds safe\n casting and Sync + Send. Once `num_traits` has these features this\n can be removed.\n","sig":null,"attributes":[{"value":"/ This is an extension of `num_traits::float::Float` that adds safe","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/float.rs","byte_start":413848,"byte_end":413917,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ casting and Sync + Send. Once `num_traits` has these features this","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/float.rs","byte_start":413918,"byte_end":413988,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ can be removed.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/float.rs","byte_start":413989,"byte_end":414008,"line_start":8,"line_end":8,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4005},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":358555,"byte_end":358567,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"Distribution","qualname":"::stats::Distribution","value":"","parent":null,"children":[],"decl_id":null,"docs":" The bootstrap distribution of some parameter\n","sig":null,"attributes":[{"value":"/ The bootstrap distribution of some parameter","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":358478,"byte_end":358526,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":358692,"byte_end":358696,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"from","qualname":"<Distribution<A>>::from","value":"pub fn from(Box<[A]>) -> Distribution<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a distribution from the given values\n","sig":null,"attributes":[{"value":"/ Create a distribution from the given values","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":358633,"byte_end":358680,"line_start":32,"line_end":32,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":358974,"byte_end":358993,"line_start":42,"line_end":42,"column_start":12,"column_end":31},"name":"confidence_interval","qualname":"<Distribution<A>>::confidence_interval","value":"pub fn confidence_interval(&Self, A) -> (A, A) where usize: cast::From<A,\nOutput = Result<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the confidence interval of the population parameter using percentiles","sig":null,"attributes":[{"value":"/ Computes the confidence interval of the population parameter using percentiles","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":358776,"byte_end":358858,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":358863,"byte_end":358866,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":358871,"byte_end":358883,"line_start":39,"line_end":39,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":358888,"byte_end":358891,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Panics if the `confidence_level` is not in the `(0, 1)` range.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":358896,"byte_end":358962,"line_start":41,"line_end":41,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":359656,"byte_end":359663,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"p_value","qualname":"<Distribution<A>>::p_value","value":"pub fn p_value(&Self, A, &Tails) -> A","parent":null,"children":[],"decl_id":null,"docs":" Computes the \"likelihood\" of seeing the value `t` or \"more extreme\" values in the\n distribution.\n","sig":null,"attributes":[{"value":"/ Computes the \"likelihood\" of seeing the value `t` or \"more extreme\" values in the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":359537,"byte_end":359622,"line_start":61,"line_end":61,"column_start":5,"column_end":90}},{"value":"/ distribution.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":359627,"byte_end":359644,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":360279,"byte_end":360282,"line_start":91,"line_end":91,"column_start":5,"column_end":8},"name":"One","qualname":"::stats::Tails::One","value":"Tails::One","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" One tailed test\n","sig":null,"attributes":[{"value":"/ One tailed test","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":360255,"byte_end":360274,"line_start":90,"line_end":90,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":360312,"byte_end":360315,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"Two","qualname":"::stats::Tails::Two","value":"Tails::Two","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Two tailed test\n","sig":null,"attributes":[{"value":"/ Two tailed test","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":360288,"byte_end":360307,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":360243,"byte_end":360248,"line_start":89,"line_end":89,"column_start":10,"column_end":15},"name":"Tails","qualname":"::stats::Tails","value":"pub enum Tails { One, Two, }","parent":null,"children":[{"krate":0,"index":2579},{"krate":0,"index":2581}],"decl_id":null,"docs":" Number of tails for significance testing\n","sig":null,"attributes":[{"value":"/ Number of tails for significance testing","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":360189,"byte_end":360233,"line_start":88,"line_end":88,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":2724},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5330,"byte_end":5339,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"black_box","qualname":"::black_box","value":"pub fn black_box<T>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A function that is opaque to the optimizer, used to prevent the compiler from\n optimizing away computations in a benchmark.","sig":null,"attributes":[{"value":"/ A function that is opaque to the optimizer, used to prevent the compiler from","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5016,"byte_end":5097,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ optimizing away computations in a benchmark.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5098,"byte_end":5146,"line_start":167,"line_end":167,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5147,"byte_end":5150,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ This variant is stable-compatible, but it may cause some performance overhead","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5151,"byte_end":5232,"line_start":169,"line_end":169,"column_start":1,"column_end":82}},{"value":"/ or fail to prevent code from being eliminated.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5233,"byte_end":5283,"line_start":170,"line_end":170,"column_start":1,"column_end":51}},{"value":"cfg(not(feature = \"real_blackbox\"))","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5284,"byte_end":5322,"line_start":171,"line_end":171,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2726},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5689,"byte_end":5692,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"Fun","qualname":"::Fun","value":"Fun {  }","parent":null,"children":[{"krate":0,"index":2729},{"krate":0,"index":2730}],"decl_id":null,"docs":" Representing a function to benchmark together with a name of that function.\n Used together with `bench_functions` to represent one out of multiple functions\n under benchmark.\n","sig":null,"attributes":[{"value":"/ Representing a function to benchmark together with a name of that function.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5478,"byte_end":5557,"line_start":180,"line_end":180,"column_start":1,"column_end":80}},{"value":"/ Used together with `bench_functions` to represent one out of multiple functions","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5558,"byte_end":5641,"line_start":181,"line_end":181,"column_start":1,"column_end":84}},{"value":"/ under benchmark.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5642,"byte_end":5662,"line_start":182,"line_end":182,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5943,"byte_end":5946,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"name":"new","qualname":"<Fun<I, M>>::new","value":"pub fn new<F>(&str, F) -> Fun<I, M> where F: FnMut(&mut Bencher<, M>, &I) ->\n() + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Fun` given a name and a closure\n","sig":null,"attributes":[{"value":"/ Create a new `Fun` given a name and a closure","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5882,"byte_end":5931,"line_start":193,"line_end":193,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4068},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8464,"byte_end":8474,"line_start":240,"line_end":240,"column_start":5,"column_end":15},"name":"SmallInput","qualname":"::BatchSize::SmallInput","value":"BatchSize::SmallInput","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":" `SmallInput` indicates that the input to the benchmark routine (the value returned from\n the setup routine) is small enough that millions of values can be safely held in memory.\n Always prefer `SmallInput` unless the benchmark is using too much memory.","sig":null,"attributes":[{"value":"/ `SmallInput` indicates that the input to the benchmark routine (the value returned from","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7989,"byte_end":8080,"line_start":234,"line_end":234,"column_start":5,"column_end":96}},{"value":"/ the setup routine) is small enough that millions of values can be safely held in memory.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8085,"byte_end":8177,"line_start":235,"line_end":235,"column_start":5,"column_end":97}},{"value":"/ Always prefer `SmallInput` unless the benchmark is using too much memory.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8182,"byte_end":8259,"line_start":236,"line_end":236,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8264,"byte_end":8267,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ In testing, the maximum measurement overhead from benchmarking with `SmallInput` is on the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8272,"byte_end":8366,"line_start":238,"line_end":238,"column_start":5,"column_end":99}},{"value":"/ order of 500 picoseconds. This is presented as a rough guide; your results may vary.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8371,"byte_end":8459,"line_start":239,"line_end":239,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4070},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8891,"byte_end":8901,"line_start":248,"line_end":248,"column_start":5,"column_end":15},"name":"LargeInput","qualname":"::BatchSize::LargeInput","value":"BatchSize::LargeInput","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":" `LargeInput` indicates that the input to the benchmark routine or the value returned from\n that routine is large. This will reduce the memory usage but increase the measurement\n overhead.","sig":null,"attributes":[{"value":"/ `LargeInput` indicates that the input to the benchmark routine or the value returned from","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8481,"byte_end":8574,"line_start":242,"line_end":242,"column_start":5,"column_end":98}},{"value":"/ that routine is large. This will reduce the memory usage but increase the measurement","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8579,"byte_end":8668,"line_start":243,"line_end":243,"column_start":5,"column_end":94}},{"value":"/ overhead.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8673,"byte_end":8686,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8691,"byte_end":8694,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ In testing, the maximum measurement overhead from benchmarking with `LargeInput` is on the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8699,"byte_end":8793,"line_start":246,"line_end":246,"column_start":5,"column_end":99}},{"value":"/ order of 750 picoseconds. This is presented as a rough guide; your results may vary.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8798,"byte_end":8886,"line_start":247,"line_end":247,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4072},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9467,"byte_end":9479,"line_start":258,"line_end":258,"column_start":5,"column_end":17},"name":"PerIteration","qualname":"::BatchSize::PerIteration","value":"BatchSize::PerIteration","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":" `PerIteration` indicates that the input to the benchmark routine or the value returned from\n that routine is extremely large or holds some limited resource, such that holding many values\n in memory at once is infeasible. This provides the worst measurement overhead, but the\n lowest memory usage.","sig":null,"attributes":[{"value":"/ `PerIteration` indicates that the input to the benchmark routine or the value returned from","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":8908,"byte_end":9003,"line_start":250,"line_end":250,"column_start":5,"column_end":100}},{"value":"/ that routine is extremely large or holds some limited resource, such that holding many values","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9008,"byte_end":9105,"line_start":251,"line_end":251,"column_start":5,"column_end":102}},{"value":"/ in memory at once is infeasible. This provides the worst measurement overhead, but the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9110,"byte_end":9200,"line_start":252,"line_end":252,"column_start":5,"column_end":95}},{"value":"/ lowest memory usage.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9205,"byte_end":9229,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9234,"byte_end":9237,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ In testing, the maximum measurement overhead from benchmarking with `PerIteration` is on the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9242,"byte_end":9338,"line_start":255,"line_end":255,"column_start":5,"column_end":101}},{"value":"/ order of 350 nanoseconds or 350,000 picoseconds. This is presented as a rough guide; your","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9343,"byte_end":9436,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/ results may vary.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9441,"byte_end":9462,"line_start":257,"line_end":257,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4074},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9944,"byte_end":9954,"line_start":265,"line_end":265,"column_start":5,"column_end":15},"name":"NumBatches","qualname":"::BatchSize::NumBatches","value":"BatchSize::NumBatches(u64)","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":" `NumBatches` will attempt to divide the iterations up into a given number of batches.\n A larger number of batches (and thus smaller batches) will reduce memory usage but increase\n measurement overhead. This allows the user to choose their own tradeoff between memory usage\n and measurement overhead, but care must be taken in tuning the number of batches. Most\n benchmarks should use `SmallInput` or `LargeInput` instead.\n","sig":null,"attributes":[{"value":"/ `NumBatches` will attempt to divide the iterations up into a given number of batches.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9486,"byte_end":9575,"line_start":260,"line_end":260,"column_start":5,"column_end":94}},{"value":"/ A larger number of batches (and thus smaller batches) will reduce memory usage but increase","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9580,"byte_end":9675,"line_start":261,"line_end":261,"column_start":5,"column_end":100}},{"value":"/ measurement overhead. This allows the user to choose their own tradeoff between memory usage","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9680,"byte_end":9776,"line_start":262,"line_end":262,"column_start":5,"column_end":101}},{"value":"/ and measurement overhead, but care must be taken in tuning the number of batches. Most","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9781,"byte_end":9871,"line_start":263,"line_end":263,"column_start":5,"column_end":95}},{"value":"/ benchmarks should use `SmallInput` or `LargeInput` instead.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9876,"byte_end":9939,"line_start":264,"line_end":264,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4077},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":10385,"byte_end":10398,"line_start":272,"line_end":272,"column_start":5,"column_end":18},"name":"NumIterations","qualname":"::BatchSize::NumIterations","value":"BatchSize::NumIterations(u64)","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":" `NumIterations` fixes the batch size to a constant number, specified by the user. This\n allows the user to choose their own tradeoff between overhead and memory usage, but care must\n be taken in tuning the batch size. In general, the measurement overhead of `NumIterations`\n will be larger than that of `NumBatches`. Most benchmarks should use `SmallInput` or\n `LargeInput` instead.\n","sig":null,"attributes":[{"value":"/ `NumIterations` fixes the batch size to a constant number, specified by the user. This","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":9966,"byte_end":10056,"line_start":267,"line_end":267,"column_start":5,"column_end":95}},{"value":"/ allows the user to choose their own tradeoff between overhead and memory usage, but care must","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":10061,"byte_end":10158,"line_start":268,"line_end":268,"column_start":5,"column_end":102}},{"value":"/ be taken in tuning the batch size. In general, the measurement overhead of `NumIterations`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":10163,"byte_end":10257,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ will be larger than that of `NumBatches`. Most benchmarks should use `SmallInput` or","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":10262,"byte_end":10350,"line_start":270,"line_end":270,"column_start":5,"column_end":93}},{"value":"/ `LargeInput` instead.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":10355,"byte_end":10380,"line_start":271,"line_end":271,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4080},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":10429,"byte_end":10444,"line_start":275,"line_end":275,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::BatchSize::__NonExhaustive","value":"BatchSize::__NonExhaustive","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4067},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7973,"byte_end":7982,"line_start":233,"line_end":233,"column_start":10,"column_end":19},"name":"BatchSize","qualname":"::BatchSize","value":"pub enum BatchSize {\n    SmallInput,\n    LargeInput,\n    PerIteration,\n    NumBatches(u64),\n    NumIterations(u64),\n    __NonExhaustive,\n}","parent":null,"children":[{"krate":0,"index":4068},{"krate":0,"index":4070},{"krate":0,"index":4072},{"krate":0,"index":4074},{"krate":0,"index":4077},{"krate":0,"index":4080}],"decl_id":null,"docs":" Argument to [`Bencher::iter_batched`](struct.Bencher.html#method.iter_batched) and\n [`Bencher::iter_batched_ref`](struct.Bencher.html#method.iter_batched_ref) which controls the\n batch size.","sig":null,"attributes":[{"value":"/ Argument to [`Bencher::iter_batched`](struct.Bencher.html#method.iter_batched) and","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":6281,"byte_end":6367,"line_start":210,"line_end":210,"column_start":1,"column_end":87}},{"value":"/ [`Bencher::iter_batched_ref`](struct.Bencher.html#method.iter_batched_ref) which controls the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":6368,"byte_end":6465,"line_start":211,"line_end":211,"column_start":1,"column_end":98}},{"value":"/ batch size.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":6466,"byte_end":6481,"line_start":212,"line_end":212,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":6482,"byte_end":6485,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, almost all benchmarks should use `SmallInput`. If the input or the result","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":6486,"byte_end":6583,"line_start":214,"line_end":214,"column_start":1,"column_end":98}},{"value":"/ of the benchmark routine is large enough that `SmallInput` causes out-of-memory errors,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":6584,"byte_end":6675,"line_start":215,"line_end":215,"column_start":1,"column_end":92}},{"value":"/ `LargeInput` can be used to reduce memory usage at the cost of increasing the measurement","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":6676,"byte_end":6769,"line_start":216,"line_end":216,"column_start":1,"column_end":94}},{"value":"/ overhead. If the input or the result is extremely large (or if it holds some","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":6770,"byte_end":6850,"line_start":217,"line_end":217,"column_start":1,"column_end":81}},{"value":"/ limited external resource like a file handle), `PerIteration` will set the number of iterations","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":6851,"byte_end":6950,"line_start":218,"line_end":218,"column_start":1,"column_end":100}},{"value":"/ per batch to exactly one. `PerIteration` can increase the measurement overhead substantially","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":6951,"byte_end":7047,"line_start":219,"line_end":219,"column_start":1,"column_end":97}},{"value":"/ and should be avoided wherever possible.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7048,"byte_end":7092,"line_start":220,"line_end":220,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7093,"byte_end":7096,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ Each value lists an estimate of the measurement overhead. This is intended as a rough guide","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7097,"byte_end":7192,"line_start":222,"line_end":222,"column_start":1,"column_end":96}},{"value":"/ to assist in choosing an option, it should not be relied upon. In particular, it is not valid","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7193,"byte_end":7290,"line_start":223,"line_end":223,"column_start":1,"column_end":98}},{"value":"/ to subtract the listed overhead from the measurement and assume that the result represents the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7291,"byte_end":7389,"line_start":224,"line_end":224,"column_start":1,"column_end":99}},{"value":"/ true runtime of a function. The actual measurement overhead for your specific benchmark depends","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7390,"byte_end":7489,"line_start":225,"line_end":225,"column_start":1,"column_end":100}},{"value":"/ on the details of the function you're benchmarking and the hardware and operating","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7490,"byte_end":7575,"line_start":226,"line_end":226,"column_start":1,"column_end":86}},{"value":"/ system running the benchmark.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7576,"byte_end":7609,"line_start":227,"line_end":227,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7610,"byte_end":7613,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ With that said, if the runtime of your function is small relative to the measurement overhead","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7614,"byte_end":7711,"line_start":229,"line_end":229,"column_start":1,"column_end":98}},{"value":"/ it will be difficult to take accurate measurements. In this situation, the best option is to use","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7712,"byte_end":7812,"line_start":230,"line_end":230,"column_start":1,"column_end":101}},{"value":"/ [`Bencher::iter`](struct.Bencher.html#method.iter) which has next-to-zero measurement overhead.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":7813,"byte_end":7912,"line_start":231,"line_end":231,"column_start":1,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4098},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11574,"byte_end":11581,"line_start":301,"line_end":301,"column_start":5,"column_end":12},"name":"Compare","qualname":"::Baseline::Compare","value":"Baseline::Compare","parent":{"krate":0,"index":4097},"children":[],"decl_id":null,"docs":" Compare ensures a previous saved version of the baseline\n exists and runs comparison against that.\n","sig":null,"attributes":[{"value":"/ Compare ensures a previous saved version of the baseline","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11460,"byte_end":11520,"line_start":299,"line_end":299,"column_start":5,"column_end":65}},{"value":"/ exists and runs comparison against that.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11525,"byte_end":11569,"line_start":300,"line_end":300,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4100},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11716,"byte_end":11720,"line_start":304,"line_end":304,"column_start":5,"column_end":9},"name":"Save","qualname":"::Baseline::Save","value":"Baseline::Save","parent":{"krate":0,"index":4097},"children":[],"decl_id":null,"docs":" Save writes the benchmark results to the baseline directory,\n overwriting any results that were previously there.\n","sig":null,"attributes":[{"value":"/ Save writes the benchmark results to the baseline directory,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11587,"byte_end":11651,"line_start":302,"line_end":302,"column_start":5,"column_end":69}},{"value":"/ overwriting any results that were previously there.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11656,"byte_end":11711,"line_start":303,"line_end":303,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":4097},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11445,"byte_end":11453,"line_start":298,"line_end":298,"column_start":10,"column_end":18},"name":"Baseline","qualname":"::Baseline","value":"pub enum Baseline { Compare, Save, }","parent":null,"children":[{"krate":0,"index":4098},{"krate":0,"index":4100}],"decl_id":null,"docs":" Baseline describes how the baseline_directory is handled.\n","sig":null,"attributes":[{"value":"/ Baseline describes how the baseline_directory is handled.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11344,"byte_end":11405,"line_start":296,"line_end":296,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4108},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11983,"byte_end":11990,"line_start":312,"line_end":312,"column_start":5,"column_end":12},"name":"Gnuplot","qualname":"::PlottingBackend::Gnuplot","value":"PlottingBackend::Gnuplot","parent":{"krate":0,"index":4107},"children":[],"decl_id":null,"docs":" Plotting backend which uses the external `gnuplot` command to render plots. This is the\n default if the `gnuplot` command is installed.\n","sig":null,"attributes":[{"value":"/ Plotting backend which uses the external `gnuplot` command to render plots. This is the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11832,"byte_end":11923,"line_start":310,"line_end":310,"column_start":5,"column_end":96}},{"value":"/ default if the `gnuplot` command is installed.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11928,"byte_end":11978,"line_start":311,"line_end":311,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4110},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":12120,"byte_end":12128,"line_start":315,"line_end":315,"column_start":5,"column_end":13},"name":"Plotters","qualname":"::PlottingBackend::Plotters","value":"PlottingBackend::Plotters","parent":{"krate":0,"index":4107},"children":[],"decl_id":null,"docs":" Plotting backend which uses the rust 'Plotters' library. This is the default if `gnuplot`\n is not installed.\n","sig":null,"attributes":[{"value":"/ Plotting backend which uses the rust 'Plotters' library. This is the default if `gnuplot`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11996,"byte_end":12089,"line_start":313,"line_end":313,"column_start":5,"column_end":98}},{"value":"/ is not installed.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":12094,"byte_end":12115,"line_start":314,"line_end":314,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":4107},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11810,"byte_end":11825,"line_start":309,"line_end":309,"column_start":10,"column_end":25},"name":"PlottingBackend","qualname":"::PlottingBackend","value":"pub enum PlottingBackend { Gnuplot, Plotters, }","parent":null,"children":[{"krate":0,"index":4108},{"krate":0,"index":4110}],"decl_id":null,"docs":" Enum used to select the plotting backend.\n","sig":null,"attributes":[{"value":"/ Enum used to select the plotting backend.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":11725,"byte_end":11770,"line_start":307,"line_end":307,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":13543,"byte_end":13552,"line_start":358,"line_end":358,"column_start":12,"column_end":21},"name":"Criterion","qualname":"::Criterion","value":"Criterion {  }","parent":null,"children":[{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756}],"decl_id":null,"docs":" The benchmark manager","sig":null,"attributes":[{"value":"/ The benchmark manager","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":12909,"byte_end":12934,"line_start":344,"line_end":344,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":12935,"byte_end":12938,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ `Criterion` lets you configure and execute benchmarks","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":12939,"byte_end":12996,"line_start":346,"line_end":346,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":12997,"byte_end":13000,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ Each benchmark consists of four phases:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":13001,"byte_end":13044,"line_start":348,"line_end":348,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":13045,"byte_end":13048,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ - **Warm-up**: The routine is repeatedly executed, to let the CPU/OS/JIT/interpreter adapt to","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":13049,"byte_end":13146,"line_start":350,"line_end":350,"column_start":1,"column_end":98}},{"value":"/ the new load","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":13147,"byte_end":13163,"line_start":351,"line_end":351,"column_start":1,"column_end":17}},{"value":"/ - **Measurement**: The routine is repeatedly executed, and timing information is collected into","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":13164,"byte_end":13263,"line_start":352,"line_end":352,"column_start":1,"column_end":100}},{"value":"/ a sample","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":13264,"byte_end":13276,"line_start":353,"line_end":353,"column_start":1,"column_end":13}},{"value":"/ - **Analysis**: The sample is analyzed and distilled into meaningful statistics that get","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":13277,"byte_end":13369,"line_start":354,"line_end":354,"column_start":1,"column_end":93}},{"value":"/ reported to stdout, stored in files, and plotted","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":13370,"byte_end":13422,"line_start":355,"line_end":355,"column_start":1,"column_end":53}},{"value":"/ - **Comparison**: The current sample is compared with the sample obtained in the previous","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":13423,"byte_end":13516,"line_start":356,"line_end":356,"column_start":1,"column_end":94}},{"value":"/ benchmark.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":13517,"byte_end":13531,"line_start":357,"line_end":357,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":17094,"byte_end":17110,"line_start":459,"line_end":459,"column_start":12,"column_end":28},"name":"with_measurement","qualname":"<Criterion<M>>::with_measurement","value":"pub fn with_measurement<M2: Measurement>(Self, M2) -> Criterion<M2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the measurement for the benchmarks run with this runner. See the\n Measurement trait for more details\n","sig":null,"attributes":[{"value":"/ Changes the measurement for the benchmarks run with this runner. See the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":16963,"byte_end":17039,"line_start":457,"line_end":457,"column_start":5,"column_end":81}},{"value":"/ Measurement trait for more details","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":17044,"byte_end":17082,"line_start":458,"line_end":458,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":17944,"byte_end":17957,"line_start":480,"line_end":480,"column_start":12,"column_end":25},"name":"with_profiler","qualname":"<Criterion<M>>::with_profiler","value":"pub fn with_profiler<P: Profiler + 'static>(Self, P) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the internal profiler for benchmarks run with this runner. See\n the Profiler trait for more details.\n","sig":null,"attributes":[{"value":"/ Changes the internal profiler for benchmarks run with this runner. See","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":17813,"byte_end":17887,"line_start":478,"line_end":478,"column_start":5,"column_end":79}},{"value":"/ the Profiler trait for more details.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":17892,"byte_end":17932,"line_start":479,"line_end":479,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":18338,"byte_end":18354,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"plotting_backend","qualname":"<Criterion<M>>::plotting_backend","value":"pub fn plotting_backend(Self, PlottingBackend) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the plotting backend. By default, Criterion will use gnuplot if available, or plotters\n if not.","sig":null,"attributes":[{"value":"/ Set the plotting backend. By default, Criterion will use gnuplot if available, or plotters","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":18120,"byte_end":18214,"line_start":487,"line_end":487,"column_start":5,"column_end":99}},{"value":"/ if not.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":18219,"byte_end":18230,"line_start":488,"line_end":488,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":18235,"byte_end":18238,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Panics if `backend` is `PlottingBackend::Gnuplot` and gnuplot is not available.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":18243,"byte_end":18326,"line_start":490,"line_end":490,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19180,"byte_end":19191,"line_start":515,"line_end":515,"column_start":12,"column_end":23},"name":"sample_size","qualname":"<Criterion<M>>::sample_size","value":"pub fn sample_size(Self, usize) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default size of the sample for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default size of the sample for benchmarks run with this runner.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":18853,"byte_end":18932,"line_start":505,"line_end":505,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":18937,"byte_end":18940,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ A bigger sample should yield more accurate results if paired with a sufficiently large","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":18945,"byte_end":19035,"line_start":507,"line_end":507,"column_start":5,"column_end":95}},{"value":"/ measurement time.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19040,"byte_end":19061,"line_start":508,"line_end":508,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19066,"byte_end":19069,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Sample size must be at least 10.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19074,"byte_end":19110,"line_start":510,"line_end":510,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19115,"byte_end":19118,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19123,"byte_end":19135,"line_start":512,"line_end":512,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19140,"byte_end":19143,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Panics if n < 10","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19148,"byte_end":19168,"line_start":514,"line_end":514,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19481,"byte_end":19493,"line_start":527,"line_end":527,"column_start":12,"column_end":24},"name":"warm_up_time","qualname":"<Criterion<M>>::warm_up_time","value":"pub fn warm_up_time(Self, Duration) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default warm up time for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default warm up time for benchmarks run with this runner.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19318,"byte_end":19391,"line_start":522,"line_end":522,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19396,"byte_end":19399,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19404,"byte_end":19416,"line_start":524,"line_end":524,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19421,"byte_end":19424,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration is zero","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19429,"byte_end":19469,"line_start":526,"line_end":526,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20051,"byte_end":20067,"line_start":544,"line_end":544,"column_start":12,"column_end":28},"name":"measurement_time","qualname":"<Criterion<M>>::measurement_time","value":"pub fn measurement_time(Self, Duration) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default measurement time for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default measurement time for benchmarks run with this runner.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19639,"byte_end":19716,"line_start":534,"line_end":534,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19721,"byte_end":19724,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ With a longer time, the measurement will become more resilient to transitory peak loads","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19729,"byte_end":19820,"line_start":536,"line_end":536,"column_start":5,"column_end":96}},{"value":"/ caused by external programs","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19825,"byte_end":19856,"line_start":537,"line_end":537,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19861,"byte_end":19864,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ **Note**: If the measurement time is too \"low\", Criterion will automatically increase it","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19869,"byte_end":19961,"line_start":539,"line_end":539,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19966,"byte_end":19969,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19974,"byte_end":19986,"line_start":541,"line_end":541,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19991,"byte_end":19994,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration in zero","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":19999,"byte_end":20039,"line_start":543,"line_end":543,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20713,"byte_end":20723,"line_start":562,"line_end":562,"column_start":12,"column_end":22},"name":"nresamples","qualname":"<Criterion<M>>::nresamples","value":"pub fn nresamples(Self, usize) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default number of resamples for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default number of resamples for benchmarks run with this runner.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20217,"byte_end":20297,"line_start":551,"line_end":551,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20302,"byte_end":20305,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Number of resamples to use for the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20310,"byte_end":20348,"line_start":553,"line_end":553,"column_start":5,"column_end":43}},{"value":"/ [bootstrap](http://en.wikipedia.org/wiki/Bootstrapping_(statistics)#Case_resampling)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20353,"byte_end":20441,"line_start":554,"line_end":554,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20446,"byte_end":20449,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ A larger number of resamples reduces the random sampling errors, which are inherent to the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20454,"byte_end":20548,"line_start":556,"line_end":556,"column_start":5,"column_end":99}},{"value":"/ bootstrap method, but also increases the analysis time","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20553,"byte_end":20611,"line_start":557,"line_end":557,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20616,"byte_end":20619,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20624,"byte_end":20636,"line_start":559,"line_end":559,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20641,"byte_end":20644,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ Panics if the number of resamples is set to zero","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20649,"byte_end":20701,"line_start":561,"line_end":561,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21691,"byte_end":21706,"line_start":584,"line_end":584,"column_start":12,"column_end":27},"name":"noise_threshold","qualname":"<Criterion<M>>::noise_threshold","value":"pub fn noise_threshold(Self, f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default noise threshold for benchmarks run with this runner. The noise threshold\n is used to filter out small changes in performance, even if they are statistically\n significant. Sometimes benchmarking the same code twice will result in small but\n statistically significant differences solely because of noise. This provides a way to filter\n out some of these false positives at the cost of making it harder to detect small changes\n to the true performance of the benchmark.","sig":null,"attributes":[{"value":"/ Changes the default noise threshold for benchmarks run with this runner. The noise threshold","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":20971,"byte_end":21067,"line_start":572,"line_end":572,"column_start":5,"column_end":101}},{"value":"/ is used to filter out small changes in performance, even if they are statistically","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21072,"byte_end":21158,"line_start":573,"line_end":573,"column_start":5,"column_end":91}},{"value":"/ significant. Sometimes benchmarking the same code twice will result in small but","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21163,"byte_end":21247,"line_start":574,"line_end":574,"column_start":5,"column_end":89}},{"value":"/ statistically significant differences solely because of noise. This provides a way to filter","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21252,"byte_end":21348,"line_start":575,"line_end":575,"column_start":5,"column_end":101}},{"value":"/ out some of these false positives at the cost of making it harder to detect small changes","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21353,"byte_end":21446,"line_start":576,"line_end":576,"column_start":5,"column_end":98}},{"value":"/ to the true performance of the benchmark.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21451,"byte_end":21496,"line_start":577,"line_end":577,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21501,"byte_end":21504,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ The default is 0.01, meaning that changes smaller than 1% will be ignored.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21509,"byte_end":21587,"line_start":579,"line_end":579,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21592,"byte_end":21595,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21600,"byte_end":21612,"line_start":581,"line_end":581,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21617,"byte_end":21620,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ Panics if the threshold is set to a negative value","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21625,"byte_end":21679,"line_start":583,"line_end":583,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":22365,"byte_end":22381,"line_start":599,"line_end":599,"column_start":12,"column_end":28},"name":"confidence_level","qualname":"<Criterion<M>>::confidence_level","value":"pub fn confidence_level(Self, f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default confidence level for benchmarks run with this runner. The confidence\n level is the desired probability that the true runtime lies within the estimated\n [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is\n 0.95, meaning that the confidence interval should capture the true value 95% of the time.","sig":null,"attributes":[{"value":"/ Changes the default confidence level for benchmarks run with this runner. The confidence","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21860,"byte_end":21952,"line_start":591,"line_end":591,"column_start":5,"column_end":97}},{"value":"/ level is the desired probability that the true runtime lies within the estimated","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":21957,"byte_end":22041,"line_start":592,"line_end":592,"column_start":5,"column_end":89}},{"value":"/ [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":22046,"byte_end":22138,"line_start":593,"line_end":593,"column_start":5,"column_end":97}},{"value":"/ 0.95, meaning that the confidence interval should capture the true value 95% of the time.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":22143,"byte_end":22236,"line_start":594,"line_end":594,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":22241,"byte_end":22244,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":22249,"byte_end":22261,"line_start":596,"line_end":596,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":22266,"byte_end":22269,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ Panics if the confidence level is set to a value outside the `(0, 1)` range","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":22274,"byte_end":22353,"line_start":598,"line_end":598,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23953,"byte_end":23971,"line_start":629,"line_end":629,"column_start":12,"column_end":30},"name":"significance_level","qualname":"<Criterion<M>>::significance_level","value":"pub fn significance_level(Self, f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default [significance level](https://en.wikipedia.org/wiki/Statistical_significance)\n for benchmarks run with this runner. This is used to perform a\n [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if\n the measurements from this run are different from the measured performance of the last run.\n The significance level is the desired probability that two measurements of identical code\n will be considered 'different' due to noise in the measurements. The default value is 0.05,\n meaning that approximately 5% of identical benchmarks will register as different due to\n noise.","sig":null,"attributes":[{"value":"/ Changes the default [significance level](https://en.wikipedia.org/wiki/Statistical_significance)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":22654,"byte_end":22754,"line_start":609,"line_end":609,"column_start":5,"column_end":105}},{"value":"/ for benchmarks run with this runner. This is used to perform a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":22759,"byte_end":22825,"line_start":610,"line_end":610,"column_start":5,"column_end":71}},{"value":"/ [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":22830,"byte_end":22923,"line_start":611,"line_end":611,"column_start":5,"column_end":98}},{"value":"/ the measurements from this run are different from the measured performance of the last run.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":22928,"byte_end":23023,"line_start":612,"line_end":612,"column_start":5,"column_end":100}},{"value":"/ The significance level is the desired probability that two measurements of identical code","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23028,"byte_end":23121,"line_start":613,"line_end":613,"column_start":5,"column_end":98}},{"value":"/ will be considered 'different' due to noise in the measurements. The default value is 0.05,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23126,"byte_end":23221,"line_start":614,"line_end":614,"column_start":5,"column_end":100}},{"value":"/ meaning that approximately 5% of identical benchmarks will register as different due to","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23226,"byte_end":23317,"line_start":615,"line_end":615,"column_start":5,"column_end":96}},{"value":"/ noise.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23322,"byte_end":23332,"line_start":616,"line_end":616,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23337,"byte_end":23340,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This presents a trade-off. By setting the significance level closer to 0.0, you can increase","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23345,"byte_end":23441,"line_start":618,"line_end":618,"column_start":5,"column_end":101}},{"value":"/ the statistical robustness against noise, but it also weakens Criterion.rs' ability to","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23446,"byte_end":23536,"line_start":619,"line_end":619,"column_start":5,"column_end":95}},{"value":"/ detect small but real changes in the performance. By setting the significance level","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23541,"byte_end":23628,"line_start":620,"line_end":620,"column_start":5,"column_end":92}},{"value":"/ closer to 1.0, Criterion.rs will be more able to detect small true changes, but will also","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23633,"byte_end":23726,"line_start":621,"line_end":621,"column_start":5,"column_end":98}},{"value":"/ report more spurious differences.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23731,"byte_end":23768,"line_start":622,"line_end":622,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23773,"byte_end":23776,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ See also the noise threshold setting.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23781,"byte_end":23822,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23827,"byte_end":23830,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23835,"byte_end":23847,"line_start":626,"line_end":626,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23852,"byte_end":23855,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ Panics if the significance level is set to a value outside the `(0, 1)` range","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":23860,"byte_end":23941,"line_start":628,"line_end":628,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":24150,"byte_end":24160,"line_start":637,"line_end":637,"column_start":12,"column_end":22},"name":"with_plots","qualname":"<Criterion<M>>::with_plots","value":"pub fn with_plots(Self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Enables plotting\n","sig":null,"attributes":[{"value":"/ Enables plotting","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":24118,"byte_end":24138,"line_start":636,"line_end":636,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":24443,"byte_end":24456,"line_start":646,"line_end":646,"column_start":12,"column_end":25},"name":"without_plots","qualname":"<Criterion<M>>::without_plots","value":"pub fn without_plots(Self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Disables plotting\n","sig":null,"attributes":[{"value":"/ Disables plotting","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":24410,"byte_end":24431,"line_start":645,"line_end":645,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":24782,"byte_end":24790,"line_start":656,"line_end":656,"column_start":12,"column_end":20},"name":"can_plot","qualname":"<Criterion<M>>::can_plot","value":"pub fn can_plot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if generation of the plots is possible.\n","sig":null,"attributes":[{"value":"/ Return true if generation of the plots is possible.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":24551,"byte_end":24606,"line_start":651,"line_end":651,"column_start":5,"column_end":60}},{"value":"deprecated(since = \"0.3.4\", note =\n\"No longer useful; since the plotters backend is available Criterion.rs can always generate plots\")","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":24611,"byte_end":24770,"line_start":652,"line_end":655,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":25017,"byte_end":25030,"line_start":663,"line_end":663,"column_start":12,"column_end":25},"name":"save_baseline","qualname":"<Criterion<M>>::save_baseline","value":"pub fn save_baseline(Self, String) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Names an explicit baseline and enables overwriting the previous results.\n","sig":null,"attributes":[{"value":"/ Names an explicit baseline and enables overwriting the previous results.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":24929,"byte_end":25005,"line_start":662,"line_end":662,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":25274,"byte_end":25289,"line_start":670,"line_end":670,"column_start":12,"column_end":27},"name":"retain_baseline","qualname":"<Criterion<M>>::retain_baseline","value":"pub fn retain_baseline(Self, String) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Names an explicit baseline and disables overwriting the previous results.\n","sig":null,"attributes":[{"value":"/ Names an explicit baseline and disables overwriting the previous results.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":25185,"byte_end":25262,"line_start":669,"line_end":669,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":25569,"byte_end":25580,"line_start":678,"line_end":678,"column_start":12,"column_end":23},"name":"with_filter","qualname":"<Criterion<M>>::with_filter","value":"pub fn with_filter<S: Into<String>>(Self, S) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Filters the benchmarks. Only benchmarks with names that contain the\n given string will be executed.\n","sig":null,"attributes":[{"value":"/ Filters the benchmarks. Only benchmarks with names that contain the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":25447,"byte_end":25518,"line_start":676,"line_end":676,"column_start":5,"column_end":76}},{"value":"/ given string will be executed.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":25523,"byte_end":25557,"line_start":677,"line_end":677,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":26137,"byte_end":26154,"line_start":693,"line_end":693,"column_start":12,"column_end":29},"name":"with_output_color","qualname":"<Criterion<M>>::with_output_color","value":"pub fn with_output_color(Self, bool) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Override whether the CLI output will be colored or not. Usually you would use the `--color`\n CLI argument, but this is available for programmmatic use as well.\n","sig":null,"attributes":[{"value":"/ Override whether the CLI output will be colored or not. Usually you would use the `--color`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":25955,"byte_end":26050,"line_start":691,"line_end":691,"column_start":5,"column_end":100}},{"value":"/ CLI argument, but this is available for programmmatic use as well.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":26055,"byte_end":26125,"line_start":692,"line_end":692,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":26366,"byte_end":26382,"line_start":700,"line_end":700,"column_start":12,"column_end":28},"name":"output_directory","qualname":"<Criterion<M>>::output_directory","value":"pub fn output_directory(Self, &Path) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the output directory (currently for testing only)\n","sig":null,"attributes":[{"value":"/ Set the output directory (currently for testing only)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":26278,"byte_end":26335,"line_start":698,"line_end":698,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":26582,"byte_end":26594,"line_start":708,"line_end":708,"column_start":12,"column_end":24},"name":"profile_time","qualname":"<Criterion<M>>::profile_time","value":"pub fn profile_time(Self, Option<Duration>) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the profile time (currently for testing only)\n","sig":null,"attributes":[{"value":"/ Set the profile time (currently for testing only)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":26498,"byte_end":26551,"line_start":706,"line_end":706,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":26909,"byte_end":26922,"line_start":719,"line_end":719,"column_start":12,"column_end":25},"name":"final_summary","qualname":"<Criterion<M>>::final_summary","value":"pub fn final_summary(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Generate the final summary at the end of a run.\n","sig":null,"attributes":[{"value":"/ Generate the final summary at the end of a run.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":26827,"byte_end":26878,"line_start":717,"line_end":717,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":27425,"byte_end":27444,"line_start":735,"line_end":735,"column_start":12,"column_end":31},"name":"configure_from_args","qualname":"<Criterion<M>>::configure_from_args","value":"pub fn configure_from_args(Self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Configure this criterion struct based on the command-line arguments to\n this process.\n","sig":null,"attributes":[{"value":"/ Configure this criterion struct based on the command-line arguments to","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":27238,"byte_end":27312,"line_start":732,"line_end":732,"column_start":5,"column_end":79}},{"value":"/ this process.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":27317,"byte_end":27334,"line_start":733,"line_end":733,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43483,"byte_end":43498,"line_start":1099,"line_end":1099,"column_start":12,"column_end":27},"name":"benchmark_group","qualname":"<Criterion<M>>::benchmark_group","value":"pub fn benchmark_group<S: Into<String>>(&mut Self, S) -> BenchmarkGroup<, M>","parent":null,"children":[],"decl_id":null,"docs":" Return a benchmark group. All benchmarks performed using a benchmark group will be\n grouped together in the final report.","sig":null,"attributes":[{"value":"/ Return a benchmark group. All benchmarks performed using a benchmark group will be","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":42696,"byte_end":42782,"line_start":1076,"line_end":1076,"column_start":5,"column_end":91}},{"value":"/ grouped together in the final report.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":42787,"byte_end":42828,"line_start":1077,"line_end":1077,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":42833,"byte_end":42836,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":42841,"byte_end":42856,"line_start":1079,"line_end":1079,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":42861,"byte_end":42864,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":42869,"byte_end":42880,"line_start":1081,"line_end":1081,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":42885,"byte_end":42925,"line_start":1082,"line_end":1082,"column_start":5,"column_end":45}},{"value":"/ use self::criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":42930,"byte_end":42957,"line_start":1083,"line_end":1083,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":42962,"byte_end":42965,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ fn bench_simple(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":42970,"byte_end":43010,"line_start":1085,"line_end":1085,"column_start":5,"column_end":45}},{"value":"/     let mut group = c.benchmark_group(\"My Group\");","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43015,"byte_end":43069,"line_start":1086,"line_end":1086,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43074,"byte_end":43077,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/     // Now we can perform benchmarks with this group","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43082,"byte_end":43138,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/     group.bench_function(\"Bench 1\", |b| b.iter(|| 1 ));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43143,"byte_end":43202,"line_start":1089,"line_end":1089,"column_start":5,"column_end":64}},{"value":"/     group.bench_function(\"Bench 2\", |b| b.iter(|| 2 ));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43207,"byte_end":43266,"line_start":1090,"line_end":1090,"column_start":5,"column_end":64}},{"value":"/    ","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43271,"byte_end":43278,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}},{"value":"/     group.finish();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43283,"byte_end":43306,"line_start":1092,"line_end":1092,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43311,"byte_end":43316,"line_start":1093,"line_end":1093,"column_start":5,"column_end":10}},{"value":"/ criterion_group!(benches, bench_simple);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43321,"byte_end":43365,"line_start":1094,"line_end":1094,"column_start":5,"column_end":49}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43370,"byte_end":43399,"line_start":1095,"line_end":1095,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43404,"byte_end":43411,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}},{"value":"/ # Panics:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43416,"byte_end":43429,"line_start":1097,"line_end":1097,"column_start":5,"column_end":18}},{"value":"/ Panics if the group name is empty","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43434,"byte_end":43471,"line_start":1098,"line_end":1098,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44593,"byte_end":44607,"line_start":1136,"line_end":1136,"column_start":12,"column_end":26},"name":"bench_function","qualname":"<Criterion<M>>::bench_function","value":"pub fn bench_function<F>(&mut Self, &str, F) -> &mut Criterion<M> where\nF: FnMut(&mut Bencher<, M>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function. For comparing multiple functions, see `benchmark_group`.","sig":null,"attributes":[{"value":"/ Benchmarks a function. For comparing multiple functions, see `benchmark_group`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43978,"byte_end":44061,"line_start":1115,"line_end":1115,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44066,"byte_end":44069,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44074,"byte_end":44087,"line_start":1117,"line_end":1117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44092,"byte_end":44095,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44100,"byte_end":44111,"line_start":1119,"line_end":1119,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44116,"byte_end":44156,"line_start":1120,"line_end":1120,"column_start":5,"column_end":45}},{"value":"/ use self::criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44161,"byte_end":44188,"line_start":1121,"line_end":1121,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44193,"byte_end":44196,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44201,"byte_end":44234,"line_start":1123,"line_end":1123,"column_start":5,"column_end":38}},{"value":"/     // Setup (construct data, allocate memory, etc)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44239,"byte_end":44294,"line_start":1124,"line_end":1124,"column_start":5,"column_end":60}},{"value":"/     c.bench_function(","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44299,"byte_end":44324,"line_start":1125,"line_end":1125,"column_start":5,"column_end":30}},{"value":"/         \"function_name\",","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44329,"byte_end":44357,"line_start":1126,"line_end":1126,"column_start":5,"column_end":33}},{"value":"/         |b| b.iter(|| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44362,"byte_end":44389,"line_start":1127,"line_end":1127,"column_start":5,"column_end":32}},{"value":"/             // Code to benchmark goes here","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44394,"byte_end":44440,"line_start":1128,"line_end":1128,"column_start":5,"column_end":51}},{"value":"/         }),","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44445,"byte_end":44460,"line_start":1129,"line_end":1129,"column_start":5,"column_end":20}},{"value":"/     );","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44465,"byte_end":44475,"line_start":1130,"line_end":1130,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44480,"byte_end":44485,"line_start":1131,"line_end":1131,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44490,"byte_end":44493,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44498,"byte_end":44535,"line_start":1133,"line_end":1133,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44540,"byte_end":44569,"line_start":1134,"line_end":1134,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44574,"byte_end":44581,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45571,"byte_end":45587,"line_start":1168,"line_end":1168,"column_start":12,"column_end":28},"name":"bench_with_input","qualname":"<Criterion<M>>::bench_with_input","value":"pub fn bench_with_input<F, I>(&mut Self, BenchmarkId, &I, F)\n-> &mut Criterion<M> where F: FnMut(&mut Bencher<, M>, &I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function with an input. For comparing multiple functions or multiple inputs,\n see `benchmark_group`.","sig":null,"attributes":[{"value":"/ Benchmarks a function with an input. For comparing multiple functions or multiple inputs,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44831,"byte_end":44924,"line_start":1145,"line_end":1145,"column_start":5,"column_end":98}},{"value":"/ see `benchmark_group`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44929,"byte_end":44955,"line_start":1146,"line_end":1146,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44960,"byte_end":44963,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44968,"byte_end":44981,"line_start":1148,"line_end":1148,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44986,"byte_end":44989,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":44994,"byte_end":45005,"line_start":1150,"line_end":1150,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45010,"byte_end":45050,"line_start":1151,"line_end":1151,"column_start":5,"column_end":45}},{"value":"/ use self::criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45055,"byte_end":45082,"line_start":1152,"line_end":1152,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45087,"byte_end":45090,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45095,"byte_end":45128,"line_start":1154,"line_end":1154,"column_start":5,"column_end":38}},{"value":"/     // Setup (construct data, allocate memory, etc)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45133,"byte_end":45188,"line_start":1155,"line_end":1155,"column_start":5,"column_end":60}},{"value":"/     let input = 5u64;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45193,"byte_end":45218,"line_start":1156,"line_end":1156,"column_start":5,"column_end":30}},{"value":"/     c.bench_with_input(","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45223,"byte_end":45250,"line_start":1157,"line_end":1157,"column_start":5,"column_end":32}},{"value":"/         BenchmarkId::new(\"function_name\", input), &input,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45255,"byte_end":45316,"line_start":1158,"line_end":1158,"column_start":5,"column_end":66}},{"value":"/         |b, i| b.iter(|| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45321,"byte_end":45351,"line_start":1159,"line_end":1159,"column_start":5,"column_end":35}},{"value":"/             // Code to benchmark using input `i` goes here","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45356,"byte_end":45418,"line_start":1160,"line_end":1160,"column_start":5,"column_end":67}},{"value":"/         }),","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45423,"byte_end":45438,"line_start":1161,"line_end":1161,"column_start":5,"column_end":20}},{"value":"/     );","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45443,"byte_end":45453,"line_start":1162,"line_end":1162,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45458,"byte_end":45463,"line_start":1163,"line_end":1163,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45468,"byte_end":45471,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45476,"byte_end":45513,"line_start":1165,"line_end":1165,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45518,"byte_end":45547,"line_start":1166,"line_end":1166,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":45552,"byte_end":45559,"line_start":1167,"line_end":1167,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47352,"byte_end":47378,"line_start":1215,"line_end":1215,"column_start":12,"column_end":38},"name":"bench_function_over_inputs","qualname":"<Criterion<M>>::bench_function_over_inputs","value":"pub fn bench_function_over_inputs<I, F>(&mut Self, &str, F, I)\n-> &mut Criterion<M> where I: IntoIterator, I::Item: fmt::Debug + 'static,\nF: FnMut(&mut Bencher<, M>, &I::Item) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function under various inputs","sig":null,"attributes":[{"value":"/ Benchmarks a function under various inputs","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46514,"byte_end":46560,"line_start":1189,"line_end":1189,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46565,"byte_end":46568,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method to execute several related benchmarks. Each benchmark will","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46573,"byte_end":46664,"line_start":1191,"line_end":1191,"column_start":5,"column_end":96}},{"value":"/ receive the id: `${id}/${input}`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46669,"byte_end":46706,"line_start":1192,"line_end":1192,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46711,"byte_end":46714,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46719,"byte_end":46732,"line_start":1194,"line_end":1194,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46737,"byte_end":46740,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46745,"byte_end":46756,"line_start":1196,"line_end":1196,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46761,"byte_end":46803,"line_start":1197,"line_end":1197,"column_start":5,"column_end":47}},{"value":"/ # use self::criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46808,"byte_end":46837,"line_start":1198,"line_end":1198,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46842,"byte_end":46845,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46850,"byte_end":46883,"line_start":1200,"line_end":1200,"column_start":5,"column_end":38}},{"value":"/     c.bench_function_over_inputs(\"from_elem\",","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46888,"byte_end":46937,"line_start":1201,"line_end":1201,"column_start":5,"column_end":54}},{"value":"/         |b: &mut Bencher, size: &usize| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46942,"byte_end":46987,"line_start":1202,"line_end":1202,"column_start":5,"column_end":50}},{"value":"/             b.iter(|| vec![0u8; *size]);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":46992,"byte_end":47036,"line_start":1203,"line_end":1203,"column_start":5,"column_end":49}},{"value":"/         },","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47041,"byte_end":47055,"line_start":1204,"line_end":1204,"column_start":5,"column_end":19}},{"value":"/         vec![1024, 2048, 4096]","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47060,"byte_end":47094,"line_start":1205,"line_end":1205,"column_start":5,"column_end":39}},{"value":"/     );","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47099,"byte_end":47109,"line_start":1206,"line_end":1206,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47114,"byte_end":47119,"line_start":1207,"line_end":1207,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47124,"byte_end":47127,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47132,"byte_end":47169,"line_start":1209,"line_end":1209,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47174,"byte_end":47203,"line_start":1210,"line_end":1210,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47208,"byte_end":47215,"line_start":1211,"line_end":1211,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.3.4\", note = \"Please use BenchmarkGroups instead.\")","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47239,"byte_end":47315,"line_start":1213,"line_end":1213,"column_start":5,"column_end":81}},{"value":"allow(deprecated)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47320,"byte_end":47340,"line_start":1214,"line_end":1214,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48929,"byte_end":48944,"line_start":1268,"line_end":1268,"column_start":12,"column_end":27},"name":"bench_functions","qualname":"<Criterion<M>>::bench_functions","value":"pub fn bench_functions<I>(&mut Self, &str, Vec<Fun<I, M>>, I)\n-> &mut Criterion<M> where I: fmt::Debug + 'static","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks multiple functions","sig":null,"attributes":[{"value":"/ Benchmarks multiple functions","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47700,"byte_end":47733,"line_start":1229,"line_end":1229,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47738,"byte_end":47741,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ All functions get the same input and are compared with the other implementations.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47746,"byte_end":47831,"line_start":1231,"line_end":1231,"column_start":5,"column_end":90}},{"value":"/ Works similar to `bench_function`, but with multiple functions.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47836,"byte_end":47903,"line_start":1232,"line_end":1232,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47908,"byte_end":47911,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47916,"byte_end":47929,"line_start":1234,"line_end":1234,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47934,"byte_end":47937,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47942,"byte_end":47954,"line_start":1236,"line_end":1236,"column_start":5,"column_end":17}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":47959,"byte_end":48001,"line_start":1237,"line_end":1237,"column_start":5,"column_end":47}},{"value":"/ # use self::criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48006,"byte_end":48035,"line_start":1238,"line_end":1238,"column_start":5,"column_end":34}},{"value":"/ # fn seq_fib(i: &u32) {}","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48040,"byte_end":48068,"line_start":1239,"line_end":1239,"column_start":5,"column_end":33}},{"value":"/ # fn par_fib(i: &u32) {}","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48073,"byte_end":48101,"line_start":1240,"line_end":1240,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48106,"byte_end":48109,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ fn bench_seq_fib(b: &mut Bencher, i: &u32) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48114,"byte_end":48162,"line_start":1242,"line_end":1242,"column_start":5,"column_end":53}},{"value":"/     b.iter(|| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48167,"byte_end":48186,"line_start":1243,"line_end":1243,"column_start":5,"column_end":24}},{"value":"/         seq_fib(i);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48191,"byte_end":48214,"line_start":1244,"line_end":1244,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48219,"byte_end":48230,"line_start":1245,"line_end":1245,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48235,"byte_end":48240,"line_start":1246,"line_end":1246,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48245,"byte_end":48248,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ fn bench_par_fib(b: &mut Bencher, i: &u32) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48253,"byte_end":48301,"line_start":1248,"line_end":1248,"column_start":5,"column_end":53}},{"value":"/     b.iter(|| {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48306,"byte_end":48325,"line_start":1249,"line_end":1249,"column_start":5,"column_end":24}},{"value":"/         par_fib(i);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48330,"byte_end":48353,"line_start":1250,"line_end":1250,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48358,"byte_end":48369,"line_start":1251,"line_end":1251,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48374,"byte_end":48379,"line_start":1252,"line_end":1252,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48384,"byte_end":48387,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48392,"byte_end":48425,"line_start":1254,"line_end":1254,"column_start":5,"column_end":38}},{"value":"/     let sequential_fib = Fun::new(\"Sequential\", bench_seq_fib);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48430,"byte_end":48497,"line_start":1255,"line_end":1255,"column_start":5,"column_end":72}},{"value":"/     let parallel_fib = Fun::new(\"Parallel\", bench_par_fib);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48502,"byte_end":48565,"line_start":1256,"line_end":1256,"column_start":5,"column_end":68}},{"value":"/     let funs = vec![sequential_fib, parallel_fib];","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48570,"byte_end":48624,"line_start":1257,"line_end":1257,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48629,"byte_end":48632,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/     c.bench_functions(\"Fibonacci\", funs, 14);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48637,"byte_end":48686,"line_start":1259,"line_end":1259,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48691,"byte_end":48696,"line_start":1260,"line_end":1260,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48701,"byte_end":48704,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48709,"byte_end":48746,"line_start":1262,"line_end":1262,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48751,"byte_end":48780,"line_start":1263,"line_end":1263,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48785,"byte_end":48792,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.3.4\", note = \"Please use BenchmarkGroups instead.\")","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48816,"byte_end":48892,"line_start":1266,"line_end":1266,"column_start":5,"column_end":81}},{"value":"allow(deprecated)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":48897,"byte_end":48917,"line_start":1267,"line_end":1267,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50360,"byte_end":50365,"line_start":1312,"line_end":1312,"column_start":12,"column_end":17},"name":"bench","qualname":"<Criterion<M>>::bench","value":"pub fn bench<B: BenchmarkDefinition<M>>(&mut Self, &str, B)\n-> &mut Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Executes the given benchmark. Use this variant to execute benchmarks\n with complex configuration. This can be used to compare multiple\n functions, execute benchmarks with custom configuration settings and\n more. See the Benchmark and ParameterizedBenchmark structs for more\n information.","sig":null,"attributes":[{"value":"/ Executes the given benchmark. Use this variant to execute benchmarks","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49313,"byte_end":49385,"line_start":1285,"line_end":1285,"column_start":5,"column_end":77}},{"value":"/ with complex configuration. This can be used to compare multiple","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49390,"byte_end":49458,"line_start":1286,"line_end":1286,"column_start":5,"column_end":73}},{"value":"/ functions, execute benchmarks with custom configuration settings and","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49463,"byte_end":49535,"line_start":1287,"line_end":1287,"column_start":5,"column_end":77}},{"value":"/ more. See the Benchmark and ParameterizedBenchmark structs for more","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49540,"byte_end":49611,"line_start":1288,"line_end":1288,"column_start":5,"column_end":76}},{"value":"/ information.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49616,"byte_end":49632,"line_start":1289,"line_end":1289,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49637,"byte_end":49640,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49645,"byte_end":49656,"line_start":1291,"line_end":1291,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49661,"byte_end":49703,"line_start":1292,"line_end":1292,"column_start":5,"column_end":47}},{"value":"/ # use criterion::*;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49708,"byte_end":49731,"line_start":1293,"line_end":1293,"column_start":5,"column_end":28}},{"value":"/ # fn routine_1() {}","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49736,"byte_end":49759,"line_start":1294,"line_end":1294,"column_start":5,"column_end":28}},{"value":"/ # fn routine_2() {}","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49764,"byte_end":49787,"line_start":1295,"line_end":1295,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49792,"byte_end":49795,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49800,"byte_end":49833,"line_start":1297,"line_end":1297,"column_start":5,"column_end":38}},{"value":"/     // Setup (construct data, allocate memory, etc)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49838,"byte_end":49893,"line_start":1298,"line_end":1298,"column_start":5,"column_end":60}},{"value":"/     c.bench(","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49898,"byte_end":49914,"line_start":1299,"line_end":1299,"column_start":5,"column_end":21}},{"value":"/         \"routines\",","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49919,"byte_end":49942,"line_start":1300,"line_end":1300,"column_start":5,"column_end":28}},{"value":"/         Benchmark::new(\"routine_1\", |b| b.iter(|| routine_1()))","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":49947,"byte_end":50014,"line_start":1301,"line_end":1301,"column_start":5,"column_end":72}},{"value":"/             .with_function(\"routine_2\", |b| b.iter(|| routine_2()))","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50019,"byte_end":50090,"line_start":1302,"line_end":1302,"column_start":5,"column_end":76}},{"value":"/             .sample_size(50)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50095,"byte_end":50127,"line_start":1303,"line_end":1303,"column_start":5,"column_end":37}},{"value":"/     );","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50132,"byte_end":50142,"line_start":1304,"line_end":1304,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50147,"byte_end":50152,"line_start":1305,"line_end":1305,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50157,"byte_end":50160,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50165,"byte_end":50202,"line_start":1307,"line_end":1307,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50207,"byte_end":50236,"line_start":1308,"line_end":1308,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50241,"byte_end":50248,"line_start":1309,"line_end":1309,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.3.4\", note = \"Please use BenchmarkGroups instead.\")","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50272,"byte_end":50348,"line_start":1311,"line_end":1311,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4175},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51399,"byte_end":51404,"line_start":1343,"line_end":1343,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::Throughput::Bytes","value":"Throughput::Bytes(u64)","parent":{"krate":0,"index":4174},"children":[],"decl_id":null,"docs":" Measure throughput in terms of bytes/second. The value should be the number of bytes\n processed by one iteration of the benchmarked code. Typically, this would be the length of\n an input string or `&[u8]`.\n","sig":null,"attributes":[{"value":"/ Measure throughput in terms of bytes/second. The value should be the number of bytes","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51171,"byte_end":51259,"line_start":1340,"line_end":1340,"column_start":5,"column_end":93}},{"value":"/ processed by one iteration of the benchmarked code. Typically, this would be the length of","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51264,"byte_end":51358,"line_start":1341,"line_end":1341,"column_start":5,"column_end":99}},{"value":"/ an input string or `&[u8]`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51363,"byte_end":51394,"line_start":1342,"line_end":1342,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4178},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51728,"byte_end":51736,"line_start":1349,"line_end":1349,"column_start":5,"column_end":13},"name":"Elements","qualname":"::Throughput::Elements","value":"Throughput::Elements(u64)","parent":{"krate":0,"index":4174},"children":[],"decl_id":null,"docs":" Measure throughput in terms of elements/second. The value should be the number of elements\n processed by one iteration of the benchmarked code. Typically, this would be the size of a\n collection, but could also be the number of lines of input text or the number of values to\n parse.\n","sig":null,"attributes":[{"value":"/ Measure throughput in terms of elements/second. The value should be the number of elements","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51416,"byte_end":51510,"line_start":1345,"line_end":1345,"column_start":5,"column_end":99}},{"value":"/ processed by one iteration of the benchmarked code. Typically, this would be the size of a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51515,"byte_end":51609,"line_start":1346,"line_end":1346,"column_start":5,"column_end":99}},{"value":"/ collection, but could also be the number of lines of input text or the number of values to","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51614,"byte_end":51708,"line_start":1347,"line_end":1347,"column_start":5,"column_end":99}},{"value":"/ parse.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51713,"byte_end":51723,"line_start":1348,"line_end":1348,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":4174},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51154,"byte_end":51164,"line_start":1339,"line_end":1339,"column_start":10,"column_end":20},"name":"Throughput","qualname":"::Throughput","value":"pub enum Throughput { Bytes(u64), Elements(u64), }","parent":null,"children":[{"krate":0,"index":4175},{"krate":0,"index":4178}],"decl_id":null,"docs":" Enum representing different ways of measuring the throughput of benchmarked code.\n If the throughput setting is configured for a benchmark then the estimated throughput will\n be reported as well as the time per iteration.\n","sig":null,"attributes":[{"value":"/ Enum representing different ways of measuring the throughput of benchmarked code.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50791,"byte_end":50876,"line_start":1334,"line_end":1334,"column_start":1,"column_end":86}},{"value":"/ If the throughput setting is configured for a benchmark then the estimated throughput will","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50877,"byte_end":50971,"line_start":1335,"line_end":1335,"column_start":1,"column_end":95}},{"value":"/ be reported as well as the time per iteration.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50972,"byte_end":51022,"line_start":1336,"line_end":1336,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4238},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51851,"byte_end":51857,"line_start":1356,"line_end":1356,"column_start":5,"column_end":11},"name":"Linear","qualname":"::AxisScale::Linear","value":"AxisScale::Linear","parent":{"krate":0,"index":4237},"children":[],"decl_id":null,"docs":" Axes scale linearly\n","sig":null,"attributes":[{"value":"/ Axes scale linearly","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51823,"byte_end":51846,"line_start":1355,"line_end":1355,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4240},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51899,"byte_end":51910,"line_start":1359,"line_end":1359,"column_start":5,"column_end":16},"name":"Logarithmic","qualname":"::AxisScale::Logarithmic","value":"AxisScale::Logarithmic","parent":{"krate":0,"index":4237},"children":[],"decl_id":null,"docs":" Axes scale logarithmically\n","sig":null,"attributes":[{"value":"/ Axes scale logarithmically","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51864,"byte_end":51894,"line_start":1358,"line_end":1358,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":4237},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51807,"byte_end":51816,"line_start":1354,"line_end":1354,"column_start":10,"column_end":19},"name":"AxisScale","qualname":"::AxisScale","value":"pub enum AxisScale { Linear, Logarithmic, }","parent":null,"children":[{"krate":0,"index":4238},{"krate":0,"index":4240}],"decl_id":null,"docs":" Axis scaling type\n","sig":null,"attributes":[{"value":"/ Axis scaling type","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51746,"byte_end":51767,"line_start":1352,"line_end":1352,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4247},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52553,"byte_end":52570,"line_start":1378,"line_end":1378,"column_start":12,"column_end":29},"name":"PlotConfiguration","qualname":"::PlotConfiguration","value":"PlotConfiguration {  }","parent":null,"children":[{"krate":0,"index":4248}],"decl_id":null,"docs":" Contains the configuration options for the plots generated by a particular benchmark\n or benchmark group.","sig":null,"attributes":[{"value":"/ Contains the configuration options for the plots generated by a particular benchmark","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":51915,"byte_end":52003,"line_start":1362,"line_end":1362,"column_start":1,"column_end":89}},{"value":"/ or benchmark group.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52004,"byte_end":52027,"line_start":1363,"line_end":1363,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52028,"byte_end":52031,"line_start":1364,"line_end":1364,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52032,"byte_end":52043,"line_start":1365,"line_end":1365,"column_start":1,"column_end":12}},{"value":"/ use self::criterion::{Bencher, Criterion, Benchmark, PlotConfiguration, AxisScale};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52044,"byte_end":52131,"line_start":1366,"line_end":1366,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52132,"byte_end":52135,"line_start":1367,"line_end":1367,"column_start":1,"column_end":4}},{"value":"/ let plot_config = PlotConfiguration::default()","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52136,"byte_end":52186,"line_start":1368,"line_end":1368,"column_start":1,"column_end":51}},{"value":"/     .summary_scale(AxisScale::Logarithmic);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52187,"byte_end":52234,"line_start":1369,"line_end":1369,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52235,"byte_end":52238,"line_start":1370,"line_end":1370,"column_start":1,"column_end":4}},{"value":"/ // Using Criterion::default() for simplicity; normally you'd use the macros.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52239,"byte_end":52319,"line_start":1371,"line_end":1371,"column_start":1,"column_end":81}},{"value":"/ let mut criterion = Criterion::default();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52320,"byte_end":52365,"line_start":1372,"line_end":1372,"column_start":1,"column_end":46}},{"value":"/ let mut benchmark_group = criterion.benchmark_group(\"Group name\");","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52366,"byte_end":52436,"line_start":1373,"line_end":1373,"column_start":1,"column_end":71}},{"value":"/ benchmark_group.plot_config(plot_config);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52437,"byte_end":52482,"line_start":1374,"line_end":1374,"column_start":1,"column_end":46}},{"value":"/ // Use benchmark group","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52483,"byte_end":52509,"line_start":1375,"line_end":1375,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52510,"byte_end":52517,"line_start":1376,"line_end":1376,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53033,"byte_end":53046,"line_start":1394,"line_end":1394,"column_start":12,"column_end":25},"name":"summary_scale","qualname":"<PlotConfiguration>::summary_scale","value":"pub fn summary_scale(Self, AxisScale) -> PlotConfiguration","parent":null,"children":[],"decl_id":null,"docs":" Set the axis scale (linear or logarithmic) for the summary plots. Typically, you would\n set this to logarithmic if benchmarking over a range of inputs which scale exponentially.\n Defaults to linear.\n","sig":null,"attributes":[{"value":"/ Set the axis scale (linear or logarithmic) for the summary plots. Typically, you would","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52805,"byte_end":52895,"line_start":1391,"line_end":1391,"column_start":5,"column_end":95}},{"value":"/ set this to logarithmic if benchmarking over a range of inputs which scale exponentially.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52900,"byte_end":52993,"line_start":1392,"line_end":1392,"column_start":5,"column_end":98}},{"value":"/ Defaults to linear.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52998,"byte_end":53021,"line_start":1393,"line_end":1393,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4254},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53599,"byte_end":53603,"line_start":1407,"line_end":1407,"column_start":5,"column_end":9},"name":"Auto","qualname":"::SamplingMode::Auto","value":"SamplingMode::Auto","parent":{"krate":0,"index":4253},"children":[],"decl_id":null,"docs":" Criterion.rs should choose a sampling method automatically. This is the default, and is\n recommended for most users and most benchmarks.\n","sig":null,"attributes":[{"value":"/ Criterion.rs should choose a sampling method automatically. This is the default, and is","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53447,"byte_end":53538,"line_start":1405,"line_end":1405,"column_start":5,"column_end":96}},{"value":"/ recommended for most users and most benchmarks.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53543,"byte_end":53594,"line_start":1406,"line_end":1406,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4256},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53809,"byte_end":53815,"line_start":1411,"line_end":1411,"column_start":5,"column_end":11},"name":"Linear","qualname":"::SamplingMode::Linear","value":"SamplingMode::Linear","parent":{"krate":0,"index":4253},"children":[],"decl_id":null,"docs":" Scale the iteration count in each sample linearly. This is suitable for most benchmarks,\n but it tends to require many iterations which can make it very slow for very long benchmarks.\n","sig":null,"attributes":[{"value":"/ Scale the iteration count in each sample linearly. This is suitable for most benchmarks,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53610,"byte_end":53702,"line_start":1409,"line_end":1409,"column_start":5,"column_end":97}},{"value":"/ but it tends to require many iterations which can make it very slow for very long benchmarks.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53707,"byte_end":53804,"line_start":1410,"line_end":1410,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4258},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":54212,"byte_end":54216,"line_start":1417,"line_end":1417,"column_start":5,"column_end":9},"name":"Flat","qualname":"::SamplingMode::Flat","value":"SamplingMode::Flat","parent":{"krate":0,"index":4253},"children":[],"decl_id":null,"docs":" Keep the iteration count the same for all samples. This is not recommended, as it affects\n the statistics that Criterion.rs can compute. However, it requires fewer iterations than\n the Linear method and therefore is more suitable for very long-running benchmarks where\n benchmark execution time is more of a problem and statistical precision is less important.\n","sig":null,"attributes":[{"value":"/ Keep the iteration count the same for all samples. This is not recommended, as it affects","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53822,"byte_end":53915,"line_start":1413,"line_end":1413,"column_start":5,"column_end":98}},{"value":"/ the statistics that Criterion.rs can compute. However, it requires fewer iterations than","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53920,"byte_end":54012,"line_start":1414,"line_end":1414,"column_start":5,"column_end":97}},{"value":"/ the Linear method and therefore is more suitable for very long-running benchmarks where","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":54017,"byte_end":54108,"line_start":1415,"line_end":1415,"column_start":5,"column_end":96}},{"value":"/ benchmark execution time is more of a problem and statistical precision is less important.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":54113,"byte_end":54207,"line_start":1416,"line_end":1416,"column_start":5,"column_end":99}}]},{"kind":"Enum","id":{"krate":0,"index":4253},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53428,"byte_end":53440,"line_start":1404,"line_end":1404,"column_start":10,"column_end":22},"name":"SamplingMode","qualname":"::SamplingMode","value":"pub enum SamplingMode { Auto, Linear, Flat, }","parent":null,"children":[{"krate":0,"index":4254},{"krate":0,"index":4256},{"krate":0,"index":4258}],"decl_id":null,"docs":" This enum allows the user to control how Criterion.rs chooses the iteration count when sampling.\n The default is Auto, which will choose a method automatically based on the iteration time during\n the warm-up phase.\n","sig":null,"attributes":[{"value":"/ This enum allows the user to control how Criterion.rs chooses the iteration count when sampling.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53164,"byte_end":53264,"line_start":1400,"line_end":1400,"column_start":1,"column_end":101}},{"value":"/ The default is Auto, which will choose a method automatically based on the iteration time during","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53265,"byte_end":53365,"line_start":1401,"line_end":1401,"column_start":1,"column_end":101}},{"value":"/ the warm-up phase.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":53366,"byte_end":53388,"line_start":1402,"line_end":1402,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2840},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":60251,"byte_end":60257,"line_start":1568,"line_end":1568,"column_start":8,"column_end":14},"name":"runner","qualname":"::runner","value":"pub fn runner(&[&dyn Fn() -> ()])","parent":null,"children":[],"decl_id":null,"docs":" Custom-test-framework runner. Should not be called directly.\n","sig":null,"attributes":[{"value":"/ Custom-test-framework runner. Should not be called directly.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":60164,"byte_end":60228,"line_start":1566,"line_end":1566,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2841},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":60531,"byte_end":60564,"line_start":1578,"line_end":1578,"column_start":8,"column_end":41},"name":"__warn_about_html_reports_feature","qualname":"::__warn_about_html_reports_feature","value":"pub fn __warn_about_html_reports_feature()","parent":null,"children":[],"decl_id":null,"docs":" Print a warning informing users about upcoming changes to features\n","sig":null,"attributes":[{"value":"/ Print a warning informing users about upcoming changes to features","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":60400,"byte_end":60470,"line_start":1575,"line_end":1575,"column_start":1,"column_end":71}},{"value":"cfg(not(feature = \"html_reports\"))","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":60471,"byte_end":60508,"line_start":1576,"line_end":1576,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":2842},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":62320,"byte_end":62360,"line_start":1621,"line_end":1621,"column_start":8,"column_end":48},"name":"__warn_about_cargo_bench_support_feature","qualname":"::__warn_about_cargo_bench_support_feature","value":"pub fn __warn_about_cargo_bench_support_feature()","parent":null,"children":[],"decl_id":null,"docs":" Print a warning informing users about upcoming changes to features\n","sig":null,"attributes":[{"value":"/ Print a warning informing users about upcoming changes to features","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":62187,"byte_end":62257,"line_start":1618,"line_end":1618,"column_start":1,"column_end":71}},{"value":"cfg(feature = \"cargo_bench_support\")","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":62258,"byte_end":62297,"line_start":1619,"line_end":1619,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":81024,"byte_end":81046,"line_start":42,"line_end":42,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89149,"byte_end":89158,"line_start":239,"line_end":239,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":90843,"byte_end":90852,"line_start":301,"line_end":301,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93023,"byte_end":93045,"line_start":372,"line_end":372,"column_start":12,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":95599,"byte_end":95621,"line_start":458,"line_end":458,"column_start":39,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103442,"byte_end":103456,"line_start":86,"line_end":86,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":113975,"byte_end":113989,"line_start":368,"line_end":368,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115371,"byte_end":115382,"line_start":407,"line_end":407,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":117892,"byte_end":117903,"line_start":473,"line_end":473,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":117944,"byte_end":117945,"line_start":474,"line_end":474,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":118158,"byte_end":118169,"line_start":481,"line_end":481,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":118283,"byte_end":118284,"line_start":486,"line_end":486,"column_start":43,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123194,"byte_end":123201,"line_start":42,"line_end":42,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":464},{"krate":0,"index":469},{"krate":0,"index":474},{"krate":0,"index":480},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":148330,"byte_end":148342,"line_start":14,"line_end":14,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":148479,"byte_end":148491,"line_start":19,"line_end":19,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":148611,"byte_end":148623,"line_start":24,"line_end":24,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":149167,"byte_end":149179,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":150140,"byte_end":150155,"line_start":69,"line_end":69,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":152667,"byte_end":152677,"line_start":136,"line_end":136,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":156974,"byte_end":156988,"line_start":285,"line_end":285,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":157422,"byte_end":157431,"line_start":301,"line_end":301,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":157782,"byte_end":157799,"line_start":314,"line_end":314,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":158074,"byte_end":158082,"line_start":327,"line_end":327,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":158547,"byte_end":158562,"line_start":346,"line_end":346,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":159274,"byte_end":159288,"line_start":366,"line_end":366,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","byte_start":160480,"byte_end":160495,"line_start":24,"line_end":24,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","byte_start":161816,"byte_end":161829,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","byte_start":162216,"byte_end":162229,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/error.rs","byte_start":163178,"byte_end":163183,"line_start":26,"line_end":26,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/error.rs","byte_start":163872,"byte_end":163877,"line_start":44,"line_end":44,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/error.rs","byte_start":164503,"byte_end":164508,"line_start":63,"line_end":63,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/estimate.rs","byte_start":164970,"byte_end":164979,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/estimate.rs","byte_start":167812,"byte_end":167821,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/estimate.rs","byte_start":168578,"byte_end":168591,"line_start":136,"line_end":136,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/estimate.rs","byte_start":169354,"byte_end":169369,"line_start":162,"line_end":162,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/estimate.rs","byte_start":169713,"byte_end":169732,"line_start":176,"line_end":176,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":176822,"byte_end":176841,"line_start":59,"line_end":59,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":177834,"byte_end":177838,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":178638,"byte_end":178648,"line_start":137,"line_end":137,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":180319,"byte_end":180333,"line_start":192,"line_end":192,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":183109,"byte_end":183113,"line_start":275,"line_end":275,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":183966,"byte_end":183970,"line_start":295,"line_end":295,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":193558,"byte_end":193562,"line_start":566,"line_end":566,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":213799,"byte_end":213816,"line_start":107,"line_end":107,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":215205,"byte_end":215222,"line_start":148,"line_end":148,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":216462,"byte_end":216470,"line_start":190,"line_end":190,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/gnuplot_backend/summary.rs","byte_start":264595,"byte_end":264604,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/gnuplot_backend/mod.rs","byte_start":221484,"byte_end":221487,"line_start":62,"line_end":62,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/gnuplot_backend/mod.rs","byte_start":221683,"byte_end":221690,"line_start":74,"line_end":74,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1393},{"krate":0,"index":1395},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/plotters_backend/mod.rs","byte_start":273637,"byte_end":273652,"line_start":37,"line_end":37,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/mod.rs","byte_start":217873,"byte_end":217884,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/mod.rs","byte_start":218899,"byte_end":218907,"line_start":67,"line_end":67,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":323220,"byte_end":323236,"line_start":25,"line_end":25,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1746},{"krate":0,"index":1747}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":324814,"byte_end":324829,"line_start":44,"line_end":44,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":326691,"byte_end":326702,"line_start":108,"line_end":108,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":330296,"byte_end":330307,"line_start":225,"line_end":225,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":330438,"byte_end":330449,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":331126,"byte_end":331139,"line_start":254,"line_end":254,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":333492,"byte_end":333499,"line_start":330,"line_end":330,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3960},{"krate":0,"index":3961},{"krate":0,"index":3962},{"krate":0,"index":3963},{"krate":0,"index":3964},{"krate":0,"index":3965},{"krate":0,"index":3966},{"krate":0,"index":3967},{"krate":0,"index":3968},{"krate":0,"index":3969},{"krate":0,"index":3970},{"krate":0,"index":3971}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":334982,"byte_end":334991,"line_start":373,"line_end":373,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":337694,"byte_end":337703,"line_start":483,"line_end":483,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":346856,"byte_end":346869,"line_start":731,"line_end":731,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/routine.rs","byte_start":356302,"byte_end":356310,"line_start":175,"line_end":175,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/routine.rs","byte_start":356595,"byte_end":356603,"line_start":189,"line_end":189,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2010},{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/regression.rs","byte_start":367943,"byte_end":367948,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/resamples.rs","byte_start":369351,"byte_end":369360,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2052},{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","byte_start":361100,"byte_end":361104,"line_start":21,"line_end":21,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","byte_start":361222,"byte_end":361226,"line_start":24,"line_end":24,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","byte_start":361317,"byte_end":361321,"line_start":30,"line_end":30,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2097},{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","byte_start":361613,"byte_end":361617,"line_start":45,"line_end":45,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2113},{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","byte_start":363488,"byte_end":363493,"line_start":115,"line_end":115,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2125},{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":386121,"byte_end":386132,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/resamples.rs","byte_start":388319,"byte_end":388328,"line_start":17,"line_end":17,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391847,"byte_end":391853,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2309},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2325}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":398657,"byte_end":398663,"line_start":249,"line_end":249,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2336},{"krate":0,"index":2337}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/kde/kernel.rs","byte_start":402991,"byte_end":402999,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2348}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/kde/mod.rs","byte_start":399099,"byte_end":399102,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2377}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/kde/mod.rs","byte_start":400392,"byte_end":400401,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408797,"byte_end":408810,"line_start":66,"line_end":66,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":410008,"byte_end":410021,"line_start":114,"line_end":114,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":410209,"byte_end":410222,"line_start":126,"line_end":126,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":411353,"byte_end":411357,"line_start":178,"line_end":178,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412425,"byte_end":412430,"line_start":224,"line_end":224,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":358591,"byte_end":358603,"line_start":28,"line_end":28,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":360019,"byte_end":360031,"line_start":78,"line_end":78,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2576},{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5831,"byte_end":5834,"line_start":189,"line_end":189,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2734}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":10453,"byte_end":10462,"line_start":277,"line_end":277,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2737}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":12137,"byte_end":12152,"line_start":317,"line_end":317,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":12812,"byte_end":12816,"line_start":338,"line_end":338,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2741}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":14643,"byte_end":14652,"line_start":394,"line_end":394,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2760}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":16944,"byte_end":16953,"line_start":456,"line_end":456,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2805},{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43923,"byte_end":43932,"line_start":1111,"line_end":1111,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50667,"byte_end":50675,"line_start":1328,"line_end":1328,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2827}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52623,"byte_end":52640,"line_start":1382,"line_end":1382,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2829}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52781,"byte_end":52798,"line_start":1390,"line_end":1390,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2831}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":54225,"byte_end":54237,"line_start":1419,"line_end":1419,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2833}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":55349,"byte_end":55367,"line_start":1452,"line_end":1452,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2835},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":1562,"byte_end":1576,"line_start":57,"line_end":57,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":412}},{"kind":"Mod","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":1707,"byte_end":1718,"line_start":68,"line_end":68,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":907}},{"kind":"Mod","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":1738,"byte_end":1746,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1736}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":81024,"byte_end":81046,"line_start":42,"line_end":42,"column_start":6,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":83007,"byte_end":83012,"line_start":89,"line_end":89,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":260}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":89149,"byte_end":89158,"line_start":239,"line_end":239,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":90843,"byte_end":90852,"line_start":301,"line_end":301,"column_start":49,"column_end":58},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":255},"to":{"krate":0,"index":260}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":93023,"byte_end":93045,"line_start":372,"line_end":372,"column_start":12,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark.rs","byte_start":95599,"byte_end":95621,"line_start":458,"line_end":458,"column_start":39,"column_end":61},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":248},"to":{"krate":0,"index":260}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":103442,"byte_end":103456,"line_start":86,"line_end":86,"column_start":26,"column_end":40},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":113975,"byte_end":113989,"line_start":368,"line_end":368,"column_start":35,"column_end":49},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":115371,"byte_end":115382,"line_start":407,"line_end":407,"column_start":6,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":117892,"byte_end":117903,"line_start":473,"line_end":473,"column_start":28,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2895},"to":{"krate":0,"index":401}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":117944,"byte_end":117945,"line_start":474,"line_end":474,"column_start":38,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":404},"to":{"krate":0,"index":401}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":118075,"byte_end":118081,"line_start":478,"line_end":478,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":401},"to":{"krate":0,"index":405}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":118158,"byte_end":118169,"line_start":481,"line_end":481,"column_start":26,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2895},"to":{"krate":0,"index":405}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/benchmark_group.rs","byte_start":118283,"byte_end":118284,"line_start":486,"line_end":486,"column_start":43,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":410},"to":{"krate":0,"index":405}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/bencher.rs","byte_start":123194,"byte_end":123201,"line_start":42,"line_end":42,"column_start":26,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":148330,"byte_end":148342,"line_start":14,"line_end":14,"column_start":34,"column_end":46},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2910},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":148479,"byte_end":148491,"line_start":19,"line_end":19,"column_start":31,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2910},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":148611,"byte_end":148623,"line_start":24,"line_end":24,"column_start":28,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2910},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":149167,"byte_end":149179,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2910},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":150140,"byte_end":150155,"line_start":69,"line_end":69,"column_start":6,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":152667,"byte_end":152677,"line_start":136,"line_end":136,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":156974,"byte_end":156988,"line_start":285,"line_end":285,"column_start":37,"column_end":51},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3217},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":157422,"byte_end":157431,"line_start":301,"line_end":301,"column_start":33,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3230},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":157782,"byte_end":157799,"line_start":314,"line_end":314,"column_start":42,"column_end":59},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3243},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":158074,"byte_end":158082,"line_start":327,"line_end":327,"column_start":36,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3253},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":158547,"byte_end":158562,"line_start":346,"line_end":346,"column_start":51,"column_end":66},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3264},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/connection.rs","byte_start":159274,"byte_end":159288,"line_start":366,"line_end":366,"column_start":42,"column_end":56},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3280},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","byte_start":160480,"byte_end":160495,"line_start":24,"line_end":24,"column_start":16,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","byte_start":161816,"byte_end":161829,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/csv_report.rs","byte_start":162216,"byte_end":162229,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":589},"to":{"krate":0,"index":1877}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/error.rs","byte_start":163178,"byte_end":163183,"line_start":26,"line_end":26,"column_start":23,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3359},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/error.rs","byte_start":163872,"byte_end":163877,"line_start":44,"line_end":44,"column_start":19,"column_end":24},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3359},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/error.rs","byte_start":164503,"byte_end":164508,"line_start":63,"line_end":63,"column_start":25,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3359},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/estimate.rs","byte_start":164970,"byte_end":164979,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3375},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/estimate.rs","byte_start":167812,"byte_end":167821,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/estimate.rs","byte_start":168578,"byte_end":168591,"line_start":136,"line_end":136,"column_start":6,"column_end":19},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/estimate.rs","byte_start":169354,"byte_end":169369,"line_start":162,"line_end":162,"column_start":6,"column_end":21},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/estimate.rs","byte_start":169713,"byte_end":169732,"line_start":176,"line_end":176,"column_start":6,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":176822,"byte_end":176841,"line_start":59,"line_end":59,"column_start":6,"column_end":25},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3723},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":177834,"byte_end":177838,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":178638,"byte_end":178648,"line_start":137,"line_end":137,"column_start":10,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":180319,"byte_end":180333,"line_start":192,"line_end":192,"column_start":10,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":183109,"byte_end":183113,"line_start":275,"line_end":275,"column_start":6,"column_end":10},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":183966,"byte_end":183970,"line_start":295,"line_end":295,"column_start":17,"column_end":21},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":839},"to":{"krate":0,"index":1877}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/html/mod.rs","byte_start":193558,"byte_end":193562,"line_start":566,"line_end":566,"column_start":6,"column_end":10},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":213799,"byte_end":213816,"line_start":107,"line_end":107,"column_start":6,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":215205,"byte_end":215222,"line_start":148,"line_end":148,"column_start":25,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":939},"to":{"krate":0,"index":924}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/measurement.rs","byte_start":216462,"byte_end":216470,"line_start":190,"line_end":190,"column_start":22,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":948},"to":{"krate":0,"index":930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/gnuplot_backend/summary.rs","byte_start":264595,"byte_end":264604,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/gnuplot_backend/mod.rs","byte_start":221484,"byte_end":221487,"line_start":62,"line_end":62,"column_start":23,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":1380}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/gnuplot_backend/mod.rs","byte_start":221683,"byte_end":221690,"line_start":74,"line_end":74,"column_start":18,"column_end":25},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":1726}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/plotters_backend/mod.rs","byte_start":273637,"byte_end":273652,"line_start":37,"line_end":37,"column_start":18,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3841},"to":{"krate":0,"index":1726}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/mod.rs","byte_start":217873,"byte_end":217884,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/plot/mod.rs","byte_start":218899,"byte_end":218907,"line_start":67,"line_end":67,"column_start":10,"column_end":18},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/profiler.rs","byte_start":323220,"byte_end":323236,"line_start":25,"line_end":25,"column_start":19,"column_end":35},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1743},"to":{"krate":0,"index":1740}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":324814,"byte_end":324829,"line_start":44,"line_end":44,"column_start":10,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":326691,"byte_end":326702,"line_start":108,"line_end":108,"column_start":6,"column_end":17},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":330296,"byte_end":330307,"line_start":225,"line_end":225,"column_start":23,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":330438,"byte_end":330449,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":331126,"byte_end":331139,"line_start":254,"line_end":254,"column_start":6,"column_end":19},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":333492,"byte_end":333499,"line_start":330,"line_end":330,"column_start":17,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1890},"to":{"krate":0,"index":1877}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":334982,"byte_end":334991,"line_start":373,"line_end":373,"column_start":6,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":337694,"byte_end":337703,"line_start":483,"line_end":483,"column_start":17,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1901},"to":{"krate":0,"index":1877}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/report.rs","byte_start":346856,"byte_end":346869,"line_start":731,"line_end":731,"column_start":17,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1931},"to":{"krate":0,"index":1877}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/routine.rs","byte_start":356302,"byte_end":356310,"line_start":175,"line_end":175,"column_start":28,"column_end":36},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/routine.rs","byte_start":356595,"byte_end":356603,"line_start":189,"line_end":189,"column_start":46,"column_end":54},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1994},"to":{"krate":0,"index":1984}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/regression.rs","byte_start":367943,"byte_end":367948,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/resamples.rs","byte_start":369351,"byte_end":369360,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","byte_start":361100,"byte_end":361104,"line_start":21,"line_end":21,"column_start":25,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2077},"to":{"krate":2,"index":3034}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","byte_start":361222,"byte_end":361226,"line_start":24,"line_end":24,"column_start":26,"column_end":30},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2077},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","byte_start":361317,"byte_end":361321,"line_start":30,"line_end":30,"column_start":16,"column_end":20},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","byte_start":361613,"byte_end":361617,"line_start":45,"line_end":45,"column_start":16,"column_end":20},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/bivariate/mod.rs","byte_start":363488,"byte_end":363493,"line_start":115,"line_end":115,"column_start":29,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2115},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":370682,"byte_end":370687,"line_start":6,"line_end":6,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2131}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":371027,"byte_end":371032,"line_start":15,"line_end":15,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2134}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/tuple.rs","byte_start":371243,"byte_end":371248,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/percentiles.rs","byte_start":386121,"byte_end":386132,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/resamples.rs","byte_start":388319,"byte_end":388328,"line_start":17,"line_end":17,"column_start":13,"column_end":22},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":391847,"byte_end":391853,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/sample.rs","byte_start":398657,"byte_end":398663,"line_start":249,"line_end":249,"column_start":24,"column_end":30},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2293},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/kde/kernel.rs","byte_start":402776,"byte_end":402780,"line_start":6,"line_end":6,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3034},"to":{"krate":0,"index":2343}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/kde/kernel.rs","byte_start":402783,"byte_end":402787,"line_start":6,"line_end":6,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":2343}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/kde/kernel.rs","byte_start":402991,"byte_end":402999,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3984},"to":{"krate":0,"index":2343}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/kde/mod.rs","byte_start":399099,"byte_end":399102,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/kde/mod.rs","byte_start":400392,"byte_end":400401,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":408797,"byte_end":408810,"line_start":66,"line_end":66,"column_start":13,"column_end":26},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":410008,"byte_end":410021,"line_start":114,"line_end":114,"column_start":23,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3989},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":410209,"byte_end":410222,"line_start":126,"line_end":126,"column_start":30,"column_end":43},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3989},"to":{"krate":2,"index":3327}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":411353,"byte_end":411357,"line_start":178,"line_end":178,"column_start":26,"column_end":30},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2463},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/univariate/outliers/tukey.rs","byte_start":412425,"byte_end":412430,"line_start":224,"line_end":224,"column_start":6,"column_end":11},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/float.rs","byte_start":414037,"byte_end":414042,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":45,"index":441},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/float.rs","byte_start":414045,"byte_end":414049,"line_start":10,"line_end":10,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":39,"index":11},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/float.rs","byte_start":414074,"byte_end":414078,"line_start":10,"line_end":10,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":39,"index":11},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/float.rs","byte_start":414101,"byte_end":414105,"line_start":10,"line_end":10,"column_start":76,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/float.rs","byte_start":414108,"byte_end":414112,"line_start":10,"line_end":10,"column_start":83,"column_end":87},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":2533}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":358591,"byte_end":358603,"line_start":28,"line_end":28,"column_start":9,"column_end":21},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/stats/mod.rs","byte_start":360019,"byte_end":360031,"line_start":78,"line_end":78,"column_start":19,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4005},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":5831,"byte_end":5834,"line_start":189,"line_end":189,"column_start":25,"column_end":28},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":10453,"byte_end":10462,"line_start":277,"line_end":277,"column_start":6,"column_end":15},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":12137,"byte_end":12152,"line_start":317,"line_end":317,"column_start":6,"column_end":21},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":12812,"byte_end":12816,"line_start":338,"line_end":338,"column_start":6,"column_end":10},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":14643,"byte_end":14652,"line_start":394,"line_end":394,"column_start":18,"column_end":27},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2742},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":16944,"byte_end":16953,"line_start":456,"line_end":456,"column_start":22,"column_end":31},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":43923,"byte_end":43932,"line_start":1111,"line_end":1111,"column_start":9,"column_end":18},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":50667,"byte_end":50675,"line_start":1328,"line_end":1328,"column_start":22,"column_end":30},"kind":{"Impl":{"id":127}},"from":{"krate":2,"index":42040},"to":{"krate":0,"index":2823}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52623,"byte_end":52640,"line_start":1382,"line_end":1382,"column_start":18,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4247},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":52781,"byte_end":52798,"line_start":1390,"line_end":1390,"column_start":6,"column_end":23},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":54225,"byte_end":54237,"line_start":1419,"line_end":1419,"column_start":6,"column_end":18},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.6/src/lib.rs","byte_start":55349,"byte_end":55367,"line_start":1452,"line_end":1452,"column_start":6,"column_end":24},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4265},"to":{"krate":4294967295,"index":4294967295}}]}