{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13","program":"/Users/theo/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"std\"","-C","metadata=e839b0c8d1b3e010","-C","extra-filename=-e839b0c8d1b3e010","--out-dir","/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps","-L","dependency=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps","--extern","cfg_if=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libcfg_if-a0e5287b6b4574e0.rmeta","--extern","crossbeam_utils=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libcrossbeam_utils-c37153154a5365da.rmeta","--extern","memoffset=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libmemoffset-f70bce8028cf1990.rmeta","--extern","scopeguard=/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libscopeguard-a522cb9c218f86ad.rmeta","--cap-lints","allow","--cfg","crossbeam_no_const_fn_trait_bound","--error-format=json","--sysroot","/Users/theo/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/theo/Documents/rust-cryptography-study-group/week-1/criterion-benchmark/src/target/rls/debug/deps/libcrossbeam_epoch-e839b0c8d1b3e010.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[15068090761512692139,0]},"crate_root":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src","external_crates":[{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","num":19,"id":{"name":"crossbeam_utils","disambiguator":[6390297690919074076,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","num":20,"id":{"name":"scopeguard","disambiguator":[794896012219393328,0]}},{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","num":21,"id":{"name":"memoffset","disambiguator":[8128783658247980088,0]}}],"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":0,"byte_end":6330,"line_start":1,"line_end":169,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":5879,"byte_end":5888,"line_start":153,"line_end":153,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":5890,"byte_end":5896,"line_start":153,"line_end":153,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":5898,"byte_end":5918,"line_start":153,"line_end":153,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":5932,"byte_end":5937,"line_start":154,"line_end":154,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":5939,"byte_end":5946,"line_start":154,"line_end":154,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":5948,"byte_end":5954,"line_start":154,"line_end":154,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":373},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6001,"byte_end":6010,"line_start":156,"line_end":156,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6012,"byte_end":6023,"line_start":156,"line_end":156,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6056,"byte_end":6067,"line_start":157,"line_end":157,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6069,"byte_end":6074,"line_start":157,"line_end":157,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6138,"byte_end":6156,"line_start":160,"line_end":160,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6158,"byte_end":6179,"line_start":160,"line_end":160,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":937},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6287,"byte_end":6304,"line_start":167,"line_end":167,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6306,"byte_end":6315,"line_start":167,"line_end":167,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":933},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":6317,"byte_end":6320,"line_start":167,"line_end":167,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":0,"byte_end":6330,"line_start":1,"line_end":169,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":356},{"krate":0,"index":399},{"krate":0,"index":438},{"krate":0,"index":457},{"krate":0,"index":509},{"krate":0,"index":655},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":914},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11044681,"byte_end":11044699,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11044510,"byte_end":11044569,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11044613,"byte_end":11044671,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11044817,"byte_end":11044837,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11044745,"byte_end":11044805,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":104},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11044967,"byte_end":11044974,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11044886,"byte_end":11044958,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045060,"byte_end":11045063,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11044996,"byte_end":11045051,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11046174,"byte_end":11046195,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045378,"byte_end":11045430,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045431,"byte_end":11045434,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045435,"byte_end":11045526,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045527,"byte_end":11045619,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045620,"byte_end":11045623,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045624,"byte_end":11045689,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045690,"byte_end":11045693,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045694,"byte_end":11045788,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045789,"byte_end":11045815,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045816,"byte_end":11045908,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045909,"byte_end":11045937,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n\"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045981,"byte_end":11046163,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11046261,"byte_end":11046268,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11046202,"byte_end":11046253,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11046486,"byte_end":11046493,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11046294,"byte_end":11046342,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11046347,"byte_end":11046350,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11046355,"byte_end":11046448,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11046453,"byte_end":11046478,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048843,"byte_end":11048852,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11047870,"byte_end":11047917,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11047918,"byte_end":11047921,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11047922,"byte_end":11048020,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048021,"byte_end":11048116,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048117,"byte_end":11048179,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048180,"byte_end":11048183,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048184,"byte_end":11048276,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048277,"byte_end":11048376,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048377,"byte_end":11048477,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048478,"byte_end":11048500,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048501,"byte_end":11048504,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048505,"byte_end":11048598,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048599,"byte_end":11048670,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048671,"byte_end":11048674,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048675,"byte_end":11048682,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048683,"byte_end":11048713,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048714,"byte_end":11048745,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048746,"byte_end":11048749,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048750,"byte_end":11048824,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048825,"byte_end":11048832,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":128},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048899,"byte_end":11048904,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048859,"byte_end":11048888,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048958,"byte_end":11048962,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048918,"byte_end":11048948,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049114,"byte_end":11049118,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11048969,"byte_end":11049014,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049019,"byte_end":11049022,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049027,"byte_end":11049039,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049044,"byte_end":11049047,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049052,"byte_end":11049099,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049482,"byte_end":11049487,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049152,"byte_end":11049187,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049192,"byte_end":11049195,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049200,"byte_end":11049212,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049217,"byte_end":11049220,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049225,"byte_end":11049301,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049306,"byte_end":11049374,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049379,"byte_end":11049467,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049886,"byte_end":11049895,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049522,"byte_end":11049565,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049570,"byte_end":11049573,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049578,"byte_end":11049590,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049595,"byte_end":11049598,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049603,"byte_end":11049679,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049684,"byte_end":11049752,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049757,"byte_end":11049847,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049852,"byte_end":11049871,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11050308,"byte_end":11050312,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049934,"byte_end":11049987,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11049992,"byte_end":11049995,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11050000,"byte_end":11050012,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11050017,"byte_end":11050020,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11050025,"byte_end":11050101,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11050106,"byte_end":11050174,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11050179,"byte_end":11050269,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11050274,"byte_end":11050293,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053423,"byte_end":11053429,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11052905,"byte_end":11052969,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11052970,"byte_end":11052973,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11052974,"byte_end":11053072,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053073,"byte_end":11053170,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053171,"byte_end":11053242,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053243,"byte_end":11053246,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053247,"byte_end":11053327,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053328,"byte_end":11053331,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053332,"byte_end":11053411,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053972,"byte_end":11053975,"line_start":310,"line_end":310,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053682,"byte_end":11053764,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053769,"byte_end":11053772,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053777,"byte_end":11053791,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053796,"byte_end":11053799,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053804,"byte_end":11053811,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053816,"byte_end":11053848,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053853,"byte_end":11053856,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053861,"byte_end":11053891,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053896,"byte_end":11053948,"line_start":308,"line_end":308,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053953,"byte_end":11053960,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054376,"byte_end":11054380,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054078,"byte_end":11054160,"line_start":316,"line_end":316,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054165,"byte_end":11054168,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054173,"byte_end":11054187,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054192,"byte_end":11054195,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054200,"byte_end":11054207,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054212,"byte_end":11054244,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054249,"byte_end":11054252,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054257,"byte_end":11054295,"line_start":323,"line_end":323,"column_start":5,"column_end":43}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054300,"byte_end":11054352,"line_start":324,"line_end":324,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054357,"byte_end":11054364,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055224,"byte_end":11055228,"line_start":357,"line_end":357,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.\n","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055092,"byte_end":11055130,"line_start":355,"line_end":355,"column_start":5,"column_end":43}},{"value":"cfg(not(all(not(crossbeam_no_const_fn_trait_bound), not(crossbeam_loom))))","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055135,"byte_end":11055212,"line_start":356,"line_end":356,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055870,"byte_end":11055874,"line_start":380,"line_end":380,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055355,"byte_end":11055400,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055405,"byte_end":11055408,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055413,"byte_end":11055503,"line_start":366,"line_end":366,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055508,"byte_end":11055522,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055527,"byte_end":11055530,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055535,"byte_end":11055549,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055554,"byte_end":11055557,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055562,"byte_end":11055569,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055574,"byte_end":11055623,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055628,"byte_end":11055672,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055677,"byte_end":11055680,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055685,"byte_end":11055715,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055720,"byte_end":11055750,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055755,"byte_end":11055789,"line_start":377,"line_end":377,"column_start":5,"column_end":39}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055794,"byte_end":11055846,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11055851,"byte_end":11055858,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056938,"byte_end":11056950,"line_start":406,"line_end":406,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056004,"byte_end":11056083,"line_start":384,"line_end":384,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056088,"byte_end":11056091,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056096,"byte_end":11056169,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056174,"byte_end":11056250,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056255,"byte_end":11056326,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056331,"byte_end":11056405,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056410,"byte_end":11056433,"line_start":390,"line_end":390,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056438,"byte_end":11056441,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056446,"byte_end":11056521,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056526,"byte_end":11056600,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056605,"byte_end":11056639,"line_start":394,"line_end":394,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056644,"byte_end":11056647,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056652,"byte_end":11056666,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056671,"byte_end":11056674,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056679,"byte_end":11056686,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056691,"byte_end":11056740,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056745,"byte_end":11056748,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056753,"byte_end":11056783,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056788,"byte_end":11056818,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056823,"byte_end":11056857,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056862,"byte_end":11056914,"line_start":404,"line_end":404,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11056919,"byte_end":11056926,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057710,"byte_end":11057715,"line_start":427,"line_end":427,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057070,"byte_end":11057135,"line_start":410,"line_end":410,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057140,"byte_end":11057143,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057148,"byte_end":11057238,"line_start":412,"line_end":412,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057243,"byte_end":11057257,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057262,"byte_end":11057265,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057270,"byte_end":11057284,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057289,"byte_end":11057292,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057297,"byte_end":11057304,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057309,"byte_end":11057358,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057363,"byte_end":11057407,"line_start":419,"line_end":419,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057412,"byte_end":11057415,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057420,"byte_end":11057450,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/ # unsafe { drop(a.load(SeqCst, &crossbeam_epoch::pin()).into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057455,"byte_end":11057545,"line_start":422,"line_end":422,"column_start":5,"column_end":95}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057550,"byte_end":11057586,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057591,"byte_end":11057629,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057634,"byte_end":11057686,"line_start":425,"line_end":425,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057691,"byte_end":11057698,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058422,"byte_end":11058426,"line_start":448,"line_end":448,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057822,"byte_end":11057910,"line_start":431,"line_end":431,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057915,"byte_end":11057928,"line_start":432,"line_end":432,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057933,"byte_end":11057936,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11057941,"byte_end":11058031,"line_start":434,"line_end":434,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058036,"byte_end":11058050,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058055,"byte_end":11058058,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058063,"byte_end":11058077,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058082,"byte_end":11058085,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058090,"byte_end":11058097,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058102,"byte_end":11058159,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058164,"byte_end":11058208,"line_start":441,"line_end":441,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058213,"byte_end":11058216,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058221,"byte_end":11058251,"line_start":443,"line_end":443,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058256,"byte_end":11058286,"line_start":444,"line_end":444,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058291,"byte_end":11058341,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058346,"byte_end":11058398,"line_start":446,"line_end":446,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058403,"byte_end":11058410,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11060322,"byte_end":11060338,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058597,"byte_end":11058693,"line_start":452,"line_end":452,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058698,"byte_end":11058792,"line_start":453,"line_end":453,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058797,"byte_end":11058868,"line_start":454,"line_end":454,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058873,"byte_end":11058876,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058881,"byte_end":11058976,"line_start":456,"line_end":456,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11058981,"byte_end":11059072,"line_start":457,"line_end":457,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059077,"byte_end":11059090,"line_start":458,"line_end":458,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059095,"byte_end":11059098,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059103,"byte_end":11059172,"line_start":460,"line_end":460,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059177,"byte_end":11059258,"line_start":461,"line_end":461,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059263,"byte_end":11059354,"line_start":462,"line_end":462,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059359,"byte_end":11059449,"line_start":463,"line_end":463,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059454,"byte_end":11059536,"line_start":464,"line_end":464,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059541,"byte_end":11059619,"line_start":465,"line_end":465,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059624,"byte_end":11059704,"line_start":466,"line_end":466,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059709,"byte_end":11059775,"line_start":467,"line_end":467,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059780,"byte_end":11059783,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059788,"byte_end":11059802,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059807,"byte_end":11059810,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059815,"byte_end":11059822,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059827,"byte_end":11059891,"line_start":472,"line_end":472,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059896,"byte_end":11059940,"line_start":473,"line_end":473,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059945,"byte_end":11059948,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059953,"byte_end":11059983,"line_start":475,"line_end":475,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059988,"byte_end":11059991,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11059996,"byte_end":11060026,"line_start":477,"line_end":477,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11060031,"byte_end":11060068,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11060073,"byte_end":11060152,"line_start":479,"line_end":479,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11060157,"byte_end":11060238,"line_start":480,"line_end":480,"column_start":5,"column_end":86}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11060243,"byte_end":11060298,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11060303,"byte_end":11060310,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063509,"byte_end":11063530,"line_start":560,"line_end":560,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061000,"byte_end":11061096,"line_start":506,"line_end":506,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061101,"byte_end":11061195,"line_start":507,"line_end":507,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061200,"byte_end":11061271,"line_start":508,"line_end":508,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061276,"byte_end":11061279,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061284,"byte_end":11061379,"line_start":510,"line_end":510,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061384,"byte_end":11061479,"line_start":511,"line_end":511,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061484,"byte_end":11061574,"line_start":512,"line_end":512,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061579,"byte_end":11061663,"line_start":513,"line_end":513,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061668,"byte_end":11061671,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061676,"byte_end":11061745,"line_start":515,"line_end":515,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061750,"byte_end":11061831,"line_start":516,"line_end":516,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061836,"byte_end":11061927,"line_start":517,"line_end":517,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11061932,"byte_end":11062022,"line_start":518,"line_end":518,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062027,"byte_end":11062109,"line_start":519,"line_end":519,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062114,"byte_end":11062192,"line_start":520,"line_end":520,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062197,"byte_end":11062277,"line_start":521,"line_end":521,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062282,"byte_end":11062348,"line_start":522,"line_end":522,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062353,"byte_end":11062356,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062361,"byte_end":11062411,"line_start":524,"line_end":524,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062416,"byte_end":11062419,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062424,"byte_end":11062438,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062443,"byte_end":11062446,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062451,"byte_end":11062458,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062463,"byte_end":11062527,"line_start":529,"line_end":529,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062532,"byte_end":11062576,"line_start":530,"line_end":530,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062581,"byte_end":11062584,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062589,"byte_end":11062619,"line_start":532,"line_end":532,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062624,"byte_end":11062654,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062659,"byte_end":11062662,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062667,"byte_end":11062702,"line_start":535,"line_end":535,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062707,"byte_end":11062747,"line_start":536,"line_end":536,"column_start":5,"column_end":45}},{"value":"/ # unsafe { drop(a.load(SeqCst, guard).into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062752,"byte_end":11062824,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/ loop {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062829,"byte_end":11062839,"line_start":538,"line_end":538,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062844,"byte_end":11062916,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062921,"byte_end":11062943,"line_start":540,"line_end":540,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062948,"byte_end":11062972,"line_start":541,"line_end":541,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11062977,"byte_end":11062999,"line_start":542,"line_end":542,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063004,"byte_end":11063017,"line_start":543,"line_end":543,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063022,"byte_end":11063047,"line_start":544,"line_end":544,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063052,"byte_end":11063086,"line_start":545,"line_end":545,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063091,"byte_end":11063121,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063126,"byte_end":11063139,"line_start":547,"line_end":547,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063144,"byte_end":11063153,"line_start":548,"line_end":548,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063158,"byte_end":11063163,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063168,"byte_end":11063171,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063176,"byte_end":11063217,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063222,"byte_end":11063232,"line_start":552,"line_end":552,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063237,"byte_end":11063321,"line_start":553,"line_end":553,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063326,"byte_end":11063353,"line_start":554,"line_end":554,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063358,"byte_end":11063401,"line_start":555,"line_end":555,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063406,"byte_end":11063415,"line_start":556,"line_end":556,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063420,"byte_end":11063425,"line_start":557,"line_end":557,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063430,"byte_end":11063485,"line_start":558,"line_end":558,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11063490,"byte_end":11063497,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11066084,"byte_end":11066096,"line_start":623,"line_end":623,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"pub fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11064197,"byte_end":11064281,"line_start":583,"line_end":583,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11064286,"byte_end":11064380,"line_start":584,"line_end":584,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11064385,"byte_end":11064388,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11064393,"byte_end":11064487,"line_start":586,"line_end":586,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11064492,"byte_end":11064586,"line_start":587,"line_end":587,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11064591,"byte_end":11064648,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11064653,"byte_end":11064656,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11064661,"byte_end":11064735,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11064740,"byte_end":11064817,"line_start":591,"line_end":591,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11064822,"byte_end":11064892,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11064897,"byte_end":11064973,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11064978,"byte_end":11065037,"line_start":594,"line_end":594,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065042,"byte_end":11065045,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065050,"byte_end":11065120,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065125,"byte_end":11065200,"line_start":597,"line_end":597,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065205,"byte_end":11065277,"line_start":598,"line_end":598,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065282,"byte_end":11065357,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065362,"byte_end":11065383,"line_start":600,"line_end":600,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065388,"byte_end":11065391,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065396,"byte_end":11065430,"line_start":602,"line_end":602,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065435,"byte_end":11065469,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065474,"byte_end":11065508,"line_start":604,"line_end":604,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065513,"byte_end":11065545,"line_start":605,"line_end":605,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065550,"byte_end":11065553,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065558,"byte_end":11065572,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065577,"byte_end":11065580,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065585,"byte_end":11065592,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065597,"byte_end":11065646,"line_start":610,"line_end":610,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065651,"byte_end":11065695,"line_start":611,"line_end":611,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065700,"byte_end":11065703,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065708,"byte_end":11065738,"line_start":613,"line_end":613,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065743,"byte_end":11065773,"line_start":614,"line_end":614,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065778,"byte_end":11065781,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065786,"byte_end":11065864,"line_start":616,"line_end":616,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065869,"byte_end":11065895,"line_start":617,"line_end":617,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065900,"byte_end":11065903,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065908,"byte_end":11065971,"line_start":619,"line_end":619,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11065976,"byte_end":11066003,"line_start":620,"line_end":620,"column_start":5,"column_end":32}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11066008,"byte_end":11066060,"line_start":621,"line_end":621,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11066065,"byte_end":11066072,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11068456,"byte_end":11068471,"line_start":685,"line_end":685,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11066694,"byte_end":11066790,"line_start":643,"line_end":643,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11066795,"byte_end":11066889,"line_start":644,"line_end":644,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11066894,"byte_end":11066965,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11066970,"byte_end":11066973,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11066978,"byte_end":11067073,"line_start":647,"line_end":647,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067078,"byte_end":11067169,"line_start":648,"line_end":648,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067174,"byte_end":11067187,"line_start":649,"line_end":649,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067192,"byte_end":11067195,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067200,"byte_end":11067285,"line_start":651,"line_end":651,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067290,"byte_end":11067321,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067326,"byte_end":11067329,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067334,"byte_end":11067371,"line_start":654,"line_end":654,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067376,"byte_end":11067379,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067384,"byte_end":11067472,"line_start":656,"line_end":656,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067477,"byte_end":11067498,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067503,"byte_end":11067506,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067511,"byte_end":11067543,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067548,"byte_end":11067580,"line_start":660,"line_end":660,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067585,"byte_end":11067617,"line_start":661,"line_end":661,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067622,"byte_end":11067654,"line_start":662,"line_end":662,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067659,"byte_end":11067691,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067696,"byte_end":11067728,"line_start":664,"line_end":664,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067733,"byte_end":11067764,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067769,"byte_end":11067772,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067777,"byte_end":11067791,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067796,"byte_end":11067799,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067804,"byte_end":11067811,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067816,"byte_end":11067843,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067848,"byte_end":11067912,"line_start":671,"line_end":671,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067917,"byte_end":11067961,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067966,"byte_end":11067969,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11067974,"byte_end":11068004,"line_start":674,"line_end":674,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11068009,"byte_end":11068012,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11068017,"byte_end":11068047,"line_start":676,"line_end":676,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11068052,"byte_end":11068089,"line_start":677,"line_end":677,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11068094,"byte_end":11068164,"line_start":678,"line_end":678,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11068169,"byte_end":11068241,"line_start":679,"line_end":679,"column_start":5,"column_end":77}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11068246,"byte_end":11068301,"line_start":680,"line_end":680,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11068306,"byte_end":11068313,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11068365,"byte_end":11068385,"line_start":683,"line_end":683,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11068390,"byte_end":11068444,"line_start":684,"line_end":684,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071377,"byte_end":11071397,"line_start":764,"line_end":764,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11068814,"byte_end":11068910,"line_start":699,"line_end":699,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11068915,"byte_end":11069009,"line_start":700,"line_end":700,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069014,"byte_end":11069085,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069090,"byte_end":11069093,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069098,"byte_end":11069192,"line_start":703,"line_end":703,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069197,"byte_end":11069292,"line_start":704,"line_end":704,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069297,"byte_end":11069387,"line_start":705,"line_end":705,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069392,"byte_end":11069476,"line_start":706,"line_end":706,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069481,"byte_end":11069484,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069489,"byte_end":11069574,"line_start":708,"line_end":708,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069579,"byte_end":11069610,"line_start":709,"line_end":709,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069615,"byte_end":11069618,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069623,"byte_end":11069671,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069676,"byte_end":11069679,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069684,"byte_end":11069726,"line_start":713,"line_end":713,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069731,"byte_end":11069734,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069739,"byte_end":11069837,"line_start":715,"line_end":715,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069842,"byte_end":11069863,"line_start":716,"line_end":716,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069868,"byte_end":11069871,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069876,"byte_end":11069908,"line_start":718,"line_end":718,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069913,"byte_end":11069945,"line_start":719,"line_end":719,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069950,"byte_end":11069982,"line_start":720,"line_end":720,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11069987,"byte_end":11070019,"line_start":721,"line_end":721,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070024,"byte_end":11070056,"line_start":722,"line_end":722,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070061,"byte_end":11070093,"line_start":723,"line_end":723,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070098,"byte_end":11070129,"line_start":724,"line_end":724,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070134,"byte_end":11070137,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070142,"byte_end":11070156,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070161,"byte_end":11070164,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070169,"byte_end":11070176,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070181,"byte_end":11070208,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070213,"byte_end":11070277,"line_start":730,"line_end":730,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070282,"byte_end":11070326,"line_start":731,"line_end":731,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070331,"byte_end":11070334,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070339,"byte_end":11070369,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070374,"byte_end":11070404,"line_start":734,"line_end":734,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070409,"byte_end":11070412,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070417,"byte_end":11070452,"line_start":736,"line_end":736,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070457,"byte_end":11070497,"line_start":737,"line_end":737,"column_start":5,"column_end":45}},{"value":"/ # unsafe { drop(a.load(SeqCst, guard).into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070502,"byte_end":11070574,"line_start":738,"line_end":738,"column_start":5,"column_end":77}},{"value":"/ loop {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070579,"byte_end":11070589,"line_start":739,"line_end":739,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070594,"byte_end":11070657,"line_start":740,"line_end":740,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070662,"byte_end":11070684,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070689,"byte_end":11070713,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070718,"byte_end":11070740,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070745,"byte_end":11070758,"line_start":744,"line_end":744,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070763,"byte_end":11070788,"line_start":745,"line_end":745,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070793,"byte_end":11070827,"line_start":746,"line_end":746,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070832,"byte_end":11070862,"line_start":747,"line_end":747,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070867,"byte_end":11070880,"line_start":748,"line_end":748,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070885,"byte_end":11070894,"line_start":749,"line_end":749,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070899,"byte_end":11070904,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070909,"byte_end":11070912,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070917,"byte_end":11070958,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070963,"byte_end":11070973,"line_start":753,"line_end":753,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11070978,"byte_end":11071053,"line_start":754,"line_end":754,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071058,"byte_end":11071085,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071090,"byte_end":11071133,"line_start":756,"line_end":756,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071138,"byte_end":11071147,"line_start":757,"line_end":757,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071152,"byte_end":11071157,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071162,"byte_end":11071217,"line_start":759,"line_end":759,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071222,"byte_end":11071229,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071281,"byte_end":11071301,"line_start":762,"line_end":762,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071306,"byte_end":11071365,"line_start":763,"line_end":763,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072476,"byte_end":11072485,"line_start":797,"line_end":797,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071745,"byte_end":11071784,"line_start":778,"line_end":778,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071789,"byte_end":11071792,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071797,"byte_end":11071891,"line_start":780,"line_end":780,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071896,"byte_end":11071952,"line_start":781,"line_end":781,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071957,"byte_end":11071960,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11071965,"byte_end":11072055,"line_start":783,"line_end":783,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072060,"byte_end":11072074,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072079,"byte_end":11072082,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072087,"byte_end":11072101,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072106,"byte_end":11072109,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072114,"byte_end":11072121,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072126,"byte_end":11072183,"line_start":789,"line_end":789,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072188,"byte_end":11072232,"line_start":790,"line_end":790,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072237,"byte_end":11072240,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072245,"byte_end":11072305,"line_start":792,"line_end":792,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072310,"byte_end":11072340,"line_start":793,"line_end":793,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072345,"byte_end":11072400,"line_start":794,"line_end":794,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072405,"byte_end":11072452,"line_start":795,"line_end":795,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072457,"byte_end":11072464,"line_start":796,"line_end":796,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073384,"byte_end":11073392,"line_start":820,"line_end":820,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072656,"byte_end":11072694,"line_start":801,"line_end":801,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072699,"byte_end":11072702,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072707,"byte_end":11072800,"line_start":803,"line_end":803,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072805,"byte_end":11072861,"line_start":804,"line_end":804,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072866,"byte_end":11072869,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072874,"byte_end":11072964,"line_start":806,"line_end":806,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072969,"byte_end":11072983,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072988,"byte_end":11072991,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11072996,"byte_end":11073010,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073015,"byte_end":11073018,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073023,"byte_end":11073030,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073035,"byte_end":11073092,"line_start":812,"line_end":812,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073097,"byte_end":11073141,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073146,"byte_end":11073149,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073154,"byte_end":11073214,"line_start":815,"line_end":815,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073219,"byte_end":11073249,"line_start":816,"line_end":816,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073254,"byte_end":11073308,"line_start":817,"line_end":817,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073313,"byte_end":11073360,"line_start":818,"line_end":818,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073365,"byte_end":11073372,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074292,"byte_end":11074301,"line_start":843,"line_end":843,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073561,"byte_end":11073600,"line_start":824,"line_end":824,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073605,"byte_end":11073608,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073613,"byte_end":11073707,"line_start":826,"line_end":826,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073712,"byte_end":11073768,"line_start":827,"line_end":827,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073773,"byte_end":11073776,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073781,"byte_end":11073871,"line_start":829,"line_end":829,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073876,"byte_end":11073890,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073895,"byte_end":11073898,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073903,"byte_end":11073917,"line_start":832,"line_end":832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073922,"byte_end":11073925,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073930,"byte_end":11073937,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11073942,"byte_end":11073999,"line_start":835,"line_end":835,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074004,"byte_end":11074048,"line_start":836,"line_end":836,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074053,"byte_end":11074056,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074061,"byte_end":11074121,"line_start":838,"line_end":838,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074126,"byte_end":11074156,"line_start":839,"line_end":839,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074161,"byte_end":11074216,"line_start":840,"line_end":840,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074221,"byte_end":11074268,"line_start":841,"line_end":841,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074273,"byte_end":11074280,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075598,"byte_end":11075608,"line_start":881,"line_end":881,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074471,"byte_end":11074506,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074511,"byte_end":11074514,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074519,"byte_end":11074608,"line_start":849,"line_end":849,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074613,"byte_end":11074699,"line_start":850,"line_end":850,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074704,"byte_end":11074739,"line_start":851,"line_end":851,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074744,"byte_end":11074747,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074752,"byte_end":11074764,"line_start":853,"line_end":853,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074769,"byte_end":11074772,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074777,"byte_end":11074836,"line_start":855,"line_end":855,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074841,"byte_end":11074844,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074849,"byte_end":11074861,"line_start":857,"line_end":857,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074866,"byte_end":11074869,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074874,"byte_end":11074961,"line_start":859,"line_end":859,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11074966,"byte_end":11074999,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075004,"byte_end":11075007,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075012,"byte_end":11075026,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075031,"byte_end":11075034,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075039,"byte_end":11075050,"line_start":864,"line_end":864,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075055,"byte_end":11075074,"line_start":865,"line_end":865,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075079,"byte_end":11075113,"line_start":866,"line_end":866,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075118,"byte_end":11075144,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075149,"byte_end":11075176,"line_start":868,"line_end":868,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075181,"byte_end":11075186,"line_start":869,"line_end":869,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075191,"byte_end":11075194,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075199,"byte_end":11075232,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075237,"byte_end":11075265,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075270,"byte_end":11075364,"line_start":873,"line_end":873,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075369,"byte_end":11075416,"line_start":874,"line_end":874,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075421,"byte_end":11075441,"line_start":875,"line_end":875,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075446,"byte_end":11075525,"line_start":876,"line_end":876,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075530,"byte_end":11075543,"line_start":877,"line_end":877,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075548,"byte_end":11075557,"line_start":878,"line_end":878,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075562,"byte_end":11075567,"line_start":879,"line_end":879,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11075572,"byte_end":11075579,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11077295,"byte_end":11077309,"line_start":928,"line_end":928,"column_start":19,"column_end":33},"name":"try_into_owned","qualname":"<Atomic<T>>::try_into_owned","value":"pub unsafe fn try_into_owned(Self) -> Option<Owned<T>>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee if it is non-null.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee if it is non-null.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076076,"byte_end":11076129,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076134,"byte_end":11076137,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076142,"byte_end":11076231,"line_start":897,"line_end":897,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076236,"byte_end":11076322,"line_start":898,"line_end":898,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076327,"byte_end":11076362,"line_start":899,"line_end":899,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076367,"byte_end":11076370,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076375,"byte_end":11076387,"line_start":901,"line_end":901,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076392,"byte_end":11076395,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076400,"byte_end":11076487,"line_start":903,"line_end":903,"column_start":5,"column_end":92}},{"value":"/ reference to the same object, or the pointer is null.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076492,"byte_end":11076549,"line_start":904,"line_end":904,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076554,"byte_end":11076557,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076562,"byte_end":11076576,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076581,"byte_end":11076584,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076589,"byte_end":11076600,"line_start":908,"line_end":908,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076605,"byte_end":11076624,"line_start":909,"line_end":909,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076629,"byte_end":11076663,"line_start":910,"line_end":910,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076668,"byte_end":11076694,"line_start":911,"line_end":911,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076699,"byte_end":11076726,"line_start":912,"line_end":912,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076731,"byte_end":11076736,"line_start":913,"line_end":913,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076741,"byte_end":11076744,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076749,"byte_end":11076782,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076787,"byte_end":11076815,"line_start":916,"line_end":916,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076820,"byte_end":11076914,"line_start":917,"line_end":917,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves, but it may be null, so we have to be careful.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11076919,"byte_end":11077012,"line_start":918,"line_end":918,"column_start":5,"column_end":98}},{"value":"/         let old = mem::replace(&mut self.ptr, Atomic::null());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11077017,"byte_end":11077083,"line_start":919,"line_end":919,"column_start":5,"column_end":71}},{"value":"/         unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11077088,"byte_end":11077108,"line_start":920,"line_end":920,"column_start":5,"column_end":25}},{"value":"/             if let Some(x) = old.try_into_owned() {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11077113,"byte_end":11077168,"line_start":921,"line_end":921,"column_start":5,"column_end":60}},{"value":"/                 drop(x)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11077173,"byte_end":11077200,"line_start":922,"line_end":922,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11077205,"byte_end":11077222,"line_start":923,"line_end":923,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11077227,"byte_end":11077240,"line_start":924,"line_end":924,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11077245,"byte_end":11077254,"line_start":925,"line_end":925,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11077259,"byte_end":11077264,"line_start":926,"line_end":926,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11077269,"byte_end":11077276,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":243},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080280,"byte_end":11080287,"line_start":1041,"line_end":1041,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080217,"byte_end":11080269,"line_start":1040,"line_end":1040,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080379,"byte_end":11080389,"line_start":1043,"line_end":1043,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080317,"byte_end":11080371,"line_start":1042,"line_end":1042,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080696,"byte_end":11080706,"line_start":1051,"line_end":1051,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080411,"byte_end":11080475,"line_start":1045,"line_end":1045,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080480,"byte_end":11080483,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080488,"byte_end":11080500,"line_start":1047,"line_end":1047,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080505,"byte_end":11080508,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080513,"byte_end":11080608,"line_start":1049,"line_end":1049,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080613,"byte_end":11080681,"line_start":1050,"line_end":1050,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":247},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080972,"byte_end":11080977,"line_start":1060,"line_end":1060,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080732,"byte_end":11080767,"line_start":1054,"line_end":1054,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080768,"byte_end":11080771,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080772,"byte_end":11080814,"line_start":1056,"line_end":1056,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080815,"byte_end":11080818,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080819,"byte_end":11080917,"line_start":1058,"line_end":1058,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11080918,"byte_end":11080960,"line_start":1059,"line_end":1059,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082375,"byte_end":11082383,"line_start":1111,"line_end":1111,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081627,"byte_end":11081677,"line_start":1089,"line_end":1089,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081682,"byte_end":11081685,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081690,"byte_end":11081782,"line_start":1091,"line_end":1091,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081787,"byte_end":11081880,"line_start":1092,"line_end":1092,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081885,"byte_end":11081910,"line_start":1093,"line_end":1093,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081915,"byte_end":11081918,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081923,"byte_end":11081935,"line_start":1095,"line_end":1095,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081940,"byte_end":11081943,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081948,"byte_end":11081992,"line_start":1097,"line_end":1097,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081997,"byte_end":11082000,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082005,"byte_end":11082017,"line_start":1099,"line_end":1099,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082022,"byte_end":11082025,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082030,"byte_end":11082126,"line_start":1101,"line_end":1101,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082131,"byte_end":11082178,"line_start":1102,"line_end":1102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082183,"byte_end":11082186,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082191,"byte_end":11082205,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082210,"byte_end":11082213,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082218,"byte_end":11082225,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082230,"byte_end":11082261,"line_start":1107,"line_end":1107,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082266,"byte_end":11082269,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082274,"byte_end":11082344,"line_start":1109,"line_end":1109,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082349,"byte_end":11082356,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082781,"byte_end":11082789,"line_start":1128,"line_end":1128,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082518,"byte_end":11082562,"line_start":1117,"line_end":1117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082567,"byte_end":11082570,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082575,"byte_end":11082589,"line_start":1119,"line_end":1119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082594,"byte_end":11082597,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082602,"byte_end":11082609,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082614,"byte_end":11082645,"line_start":1122,"line_end":1122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082650,"byte_end":11082653,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082658,"byte_end":11082687,"line_start":1124,"line_end":1124,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082692,"byte_end":11082727,"line_start":1125,"line_end":1125,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082732,"byte_end":11082757,"line_start":1126,"line_end":1126,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082762,"byte_end":11082769,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083178,"byte_end":11083181,"line_start":1143,"line_end":1143,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11082948,"byte_end":11083029,"line_start":1134,"line_end":1134,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083034,"byte_end":11083037,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083042,"byte_end":11083056,"line_start":1136,"line_end":1136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083061,"byte_end":11083064,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083069,"byte_end":11083076,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083081,"byte_end":11083112,"line_start":1139,"line_end":1139,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083117,"byte_end":11083120,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083125,"byte_end":11083154,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083159,"byte_end":11083166,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083520,"byte_end":11083524,"line_start":1158,"line_end":1158,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083282,"byte_end":11083363,"line_start":1149,"line_end":1149,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083368,"byte_end":11083371,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083376,"byte_end":11083390,"line_start":1151,"line_end":1151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083395,"byte_end":11083398,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083403,"byte_end":11083410,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083415,"byte_end":11083446,"line_start":1154,"line_end":1154,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083451,"byte_end":11083454,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083459,"byte_end":11083496,"line_start":1156,"line_end":1156,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083501,"byte_end":11083508,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084002,"byte_end":11084013,"line_start":1175,"line_end":1175,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083616,"byte_end":11083665,"line_start":1162,"line_end":1162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083670,"byte_end":11083673,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083678,"byte_end":11083692,"line_start":1164,"line_end":1164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083697,"byte_end":11083700,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083705,"byte_end":11083712,"line_start":1166,"line_end":1166,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083717,"byte_end":11083765,"line_start":1167,"line_end":1167,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083770,"byte_end":11083773,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083778,"byte_end":11083807,"line_start":1169,"line_end":1169,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083812,"byte_end":11083842,"line_start":1170,"line_end":1170,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083847,"byte_end":11083880,"line_start":1171,"line_end":1171,"column_start":5,"column_end":38}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083885,"byte_end":11083937,"line_start":1172,"line_end":1172,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083942,"byte_end":11083949,"line_start":1173,"line_end":1173,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083954,"byte_end":11083990,"line_start":1174,"line_end":1174,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084333,"byte_end":11084336,"line_start":1188,"line_end":1188,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084125,"byte_end":11084171,"line_start":1179,"line_end":1179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084176,"byte_end":11084179,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084184,"byte_end":11084198,"line_start":1181,"line_end":1181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084203,"byte_end":11084206,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084211,"byte_end":11084218,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084223,"byte_end":11084254,"line_start":1184,"line_end":1184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084259,"byte_end":11084262,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084267,"byte_end":11084309,"line_start":1186,"line_end":1186,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084314,"byte_end":11084321,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084809,"byte_end":11084817,"line_start":1206,"line_end":1206,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084432,"byte_end":11084522,"line_start":1193,"line_end":1193,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084527,"byte_end":11084565,"line_start":1194,"line_end":1194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084570,"byte_end":11084573,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084578,"byte_end":11084592,"line_start":1196,"line_end":1196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084597,"byte_end":11084600,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084605,"byte_end":11084612,"line_start":1198,"line_end":1198,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084617,"byte_end":11084648,"line_start":1199,"line_end":1199,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084653,"byte_end":11084656,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084661,"byte_end":11084690,"line_start":1201,"line_end":1201,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084695,"byte_end":11084722,"line_start":1202,"line_end":1202,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084727,"byte_end":11084753,"line_start":1203,"line_end":1203,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084758,"byte_end":11084785,"line_start":1204,"line_end":1204,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084790,"byte_end":11084797,"line_start":1205,"line_end":1205,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087279,"byte_end":11087285,"line_start":1309,"line_end":1309,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087000,"byte_end":11087053,"line_start":1303,"line_end":1303,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087054,"byte_end":11087057,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087058,"byte_end":11087121,"line_start":1305,"line_end":1305,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087122,"byte_end":11087125,"line_start":1306,"line_end":1306,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087126,"byte_end":11087224,"line_start":1307,"line_end":1307,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087225,"byte_end":11087267,"line_start":1308,"line_end":1308,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088464,"byte_end":11088470,"line_start":1358,"line_end":1358,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087937,"byte_end":11087997,"line_start":1341,"line_end":1341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088002,"byte_end":11088005,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088010,"byte_end":11088024,"line_start":1343,"line_end":1343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088029,"byte_end":11088032,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088037,"byte_end":11088044,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088049,"byte_end":11088105,"line_start":1346,"line_end":1346,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088110,"byte_end":11088154,"line_start":1347,"line_end":1347,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088159,"byte_end":11088162,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088167,"byte_end":11088196,"line_start":1349,"line_end":1349,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088201,"byte_end":11088231,"line_start":1350,"line_end":1350,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088236,"byte_end":11088264,"line_start":1351,"line_end":1351,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088269,"byte_end":11088272,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088277,"byte_end":11088307,"line_start":1353,"line_end":1353,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088312,"byte_end":11088346,"line_start":1354,"line_end":1354,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088351,"byte_end":11088383,"line_start":1355,"line_end":1355,"column_start":5,"column_end":37}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088388,"byte_end":11088440,"line_start":1356,"line_end":1356,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088445,"byte_end":11088452,"line_start":1357,"line_end":1357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088847,"byte_end":11088851,"line_start":1375,"line_end":1375,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088631,"byte_end":11088662,"line_start":1365,"line_end":1365,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088667,"byte_end":11088670,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088675,"byte_end":11088689,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088694,"byte_end":11088697,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088702,"byte_end":11088709,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088714,"byte_end":11088746,"line_start":1370,"line_end":1370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088751,"byte_end":11088754,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088759,"byte_end":11088793,"line_start":1372,"line_end":1372,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088798,"byte_end":11088823,"line_start":1373,"line_end":1373,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088828,"byte_end":11088835,"line_start":1374,"line_end":1374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089465,"byte_end":11089472,"line_start":1397,"line_end":1397,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088966,"byte_end":11089008,"line_start":1382,"line_end":1382,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089013,"byte_end":11089016,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089021,"byte_end":11089035,"line_start":1384,"line_end":1384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089040,"byte_end":11089043,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089048,"byte_end":11089055,"line_start":1386,"line_end":1386,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089060,"byte_end":11089116,"line_start":1387,"line_end":1387,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089121,"byte_end":11089165,"line_start":1388,"line_end":1388,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089170,"byte_end":11089173,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089178,"byte_end":11089205,"line_start":1390,"line_end":1390,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089210,"byte_end":11089240,"line_start":1391,"line_end":1391,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089245,"byte_end":11089290,"line_start":1392,"line_end":1392,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089295,"byte_end":11089333,"line_start":1393,"line_end":1393,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089338,"byte_end":11089384,"line_start":1394,"line_end":1394,"column_start":5,"column_end":51}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089389,"byte_end":11089441,"line_start":1395,"line_end":1395,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089446,"byte_end":11089453,"line_start":1396,"line_end":1396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090809,"byte_end":11090814,"line_start":1434,"line_end":1434,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089572,"byte_end":11089601,"line_start":1402,"line_end":1402,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089606,"byte_end":11089609,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089614,"byte_end":11089692,"line_start":1404,"line_end":1404,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089697,"byte_end":11089700,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089705,"byte_end":11089717,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089722,"byte_end":11089725,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089730,"byte_end":11089815,"line_start":1408,"line_end":1408,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089820,"byte_end":11089823,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089828,"byte_end":11089919,"line_start":1410,"line_end":1410,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089924,"byte_end":11089973,"line_start":1411,"line_end":1411,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089978,"byte_end":11089981,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11089986,"byte_end":11090058,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090063,"byte_end":11090138,"line_start":1414,"line_end":1414,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090143,"byte_end":11090146,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090151,"byte_end":11090244,"line_start":1416,"line_end":1416,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090249,"byte_end":11090342,"line_start":1417,"line_end":1417,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090347,"byte_end":11090385,"line_start":1418,"line_end":1418,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090390,"byte_end":11090393,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090398,"byte_end":11090412,"line_start":1420,"line_end":1420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090417,"byte_end":11090420,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090425,"byte_end":11090432,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090437,"byte_end":11090486,"line_start":1423,"line_end":1423,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090491,"byte_end":11090535,"line_start":1424,"line_end":1424,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090540,"byte_end":11090543,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090548,"byte_end":11090578,"line_start":1426,"line_end":1426,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090583,"byte_end":11090613,"line_start":1427,"line_end":1427,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090618,"byte_end":11090652,"line_start":1428,"line_end":1428,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090657,"byte_end":11090669,"line_start":1429,"line_end":1429,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090674,"byte_end":11090711,"line_start":1430,"line_end":1430,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090716,"byte_end":11090721,"line_start":1431,"line_end":1431,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090726,"byte_end":11090778,"line_start":1432,"line_end":1432,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090783,"byte_end":11090790,"line_start":1433,"line_end":1433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092137,"byte_end":11092146,"line_start":1476,"line_end":1476,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090920,"byte_end":11090949,"line_start":1439,"line_end":1439,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090954,"byte_end":11090957,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11090962,"byte_end":11091048,"line_start":1441,"line_end":1441,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091053,"byte_end":11091056,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091061,"byte_end":11091073,"line_start":1443,"line_end":1443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091078,"byte_end":11091081,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091086,"byte_end":11091181,"line_start":1445,"line_end":1445,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091186,"byte_end":11091223,"line_start":1446,"line_end":1446,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091228,"byte_end":11091231,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091236,"byte_end":11091325,"line_start":1448,"line_end":1448,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091330,"byte_end":11091333,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091338,"byte_end":11091412,"line_start":1450,"line_end":1450,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091417,"byte_end":11091420,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091425,"byte_end":11091439,"line_start":1452,"line_end":1452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091444,"byte_end":11091447,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091452,"byte_end":11091459,"line_start":1454,"line_end":1454,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091464,"byte_end":11091513,"line_start":1455,"line_end":1455,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091518,"byte_end":11091562,"line_start":1456,"line_end":1456,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091567,"byte_end":11091570,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091575,"byte_end":11091617,"line_start":1458,"line_end":1458,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091622,"byte_end":11091652,"line_start":1459,"line_end":1459,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091657,"byte_end":11091660,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091665,"byte_end":11091703,"line_start":1461,"line_end":1461,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091708,"byte_end":11091720,"line_start":1462,"line_end":1462,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091725,"byte_end":11091755,"line_start":1463,"line_end":1463,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091760,"byte_end":11091790,"line_start":1464,"line_end":1464,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091795,"byte_end":11091836,"line_start":1465,"line_end":1465,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091841,"byte_end":11091859,"line_start":1466,"line_end":1466,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091864,"byte_end":11091908,"line_start":1467,"line_end":1467,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091913,"byte_end":11091918,"line_start":1468,"line_end":1468,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091923,"byte_end":11091926,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091931,"byte_end":11091965,"line_start":1470,"line_end":1470,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091970,"byte_end":11091982,"line_start":1471,"line_end":1471,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11091987,"byte_end":11092039,"line_start":1472,"line_end":1472,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092044,"byte_end":11092049,"line_start":1473,"line_end":1473,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092054,"byte_end":11092106,"line_start":1474,"line_end":1474,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092111,"byte_end":11092118,"line_start":1475,"line_end":1475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093536,"byte_end":11093542,"line_start":1513,"line_end":1513,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092264,"byte_end":11092304,"line_start":1481,"line_end":1481,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092309,"byte_end":11092312,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092317,"byte_end":11092412,"line_start":1483,"line_end":1483,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092417,"byte_end":11092420,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092425,"byte_end":11092437,"line_start":1485,"line_end":1485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092442,"byte_end":11092445,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092450,"byte_end":11092535,"line_start":1487,"line_end":1487,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092540,"byte_end":11092543,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092548,"byte_end":11092639,"line_start":1489,"line_end":1489,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092644,"byte_end":11092693,"line_start":1490,"line_end":1490,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092698,"byte_end":11092701,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092706,"byte_end":11092778,"line_start":1492,"line_end":1492,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092783,"byte_end":11092858,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092863,"byte_end":11092866,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092871,"byte_end":11092964,"line_start":1495,"line_end":1495,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11092969,"byte_end":11093062,"line_start":1496,"line_end":1496,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093067,"byte_end":11093105,"line_start":1497,"line_end":1497,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093110,"byte_end":11093113,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093118,"byte_end":11093132,"line_start":1499,"line_end":1499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093137,"byte_end":11093140,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093145,"byte_end":11093152,"line_start":1501,"line_end":1501,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093157,"byte_end":11093206,"line_start":1502,"line_end":1502,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093211,"byte_end":11093255,"line_start":1503,"line_end":1503,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093260,"byte_end":11093263,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093268,"byte_end":11093298,"line_start":1505,"line_end":1505,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093303,"byte_end":11093333,"line_start":1506,"line_end":1506,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093338,"byte_end":11093372,"line_start":1507,"line_end":1507,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093377,"byte_end":11093389,"line_start":1508,"line_end":1508,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093394,"byte_end":11093438,"line_start":1509,"line_end":1509,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093443,"byte_end":11093448,"line_start":1510,"line_end":1510,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093453,"byte_end":11093505,"line_start":1511,"line_end":1511,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093510,"byte_end":11093517,"line_start":1512,"line_end":1512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094402,"byte_end":11094412,"line_start":1546,"line_end":1546,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093732,"byte_end":11093767,"line_start":1522,"line_end":1522,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093772,"byte_end":11093775,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093780,"byte_end":11093792,"line_start":1524,"line_end":1524,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093797,"byte_end":11093800,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093805,"byte_end":11093864,"line_start":1526,"line_end":1526,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093869,"byte_end":11093872,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093877,"byte_end":11093889,"line_start":1528,"line_end":1528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093894,"byte_end":11093897,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093902,"byte_end":11093989,"line_start":1530,"line_end":1530,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11093994,"byte_end":11094027,"line_start":1531,"line_end":1531,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094032,"byte_end":11094035,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094040,"byte_end":11094054,"line_start":1533,"line_end":1533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094059,"byte_end":11094062,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094067,"byte_end":11094074,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094079,"byte_end":11094128,"line_start":1536,"line_end":1536,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094133,"byte_end":11094177,"line_start":1537,"line_end":1537,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094182,"byte_end":11094185,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094190,"byte_end":11094220,"line_start":1539,"line_end":1539,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094225,"byte_end":11094237,"line_start":1540,"line_end":1540,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094242,"byte_end":11094284,"line_start":1541,"line_end":1541,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094289,"byte_end":11094327,"line_start":1542,"line_end":1542,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094332,"byte_end":11094361,"line_start":1543,"line_end":1543,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094366,"byte_end":11094371,"line_start":1544,"line_end":1544,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094376,"byte_end":11094383,"line_start":1545,"line_end":1545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095237,"byte_end":11095251,"line_start":1573,"line_end":1573,"column_start":19,"column_end":33},"name":"try_into_owned","qualname":"<Shared>::try_into_owned","value":"pub unsafe fn try_into_owned(Self) -> Option<Owned<T>>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee if it is not null.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee if it is not null.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094564,"byte_end":11094617,"line_start":1551,"line_end":1551,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094622,"byte_end":11094625,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094630,"byte_end":11094642,"line_start":1553,"line_end":1553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094647,"byte_end":11094650,"line_start":1554,"line_end":1554,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094655,"byte_end":11094742,"line_start":1555,"line_end":1555,"column_start":5,"column_end":92}},{"value":"/ reference to the same object, or if the pointer is null.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094747,"byte_end":11094807,"line_start":1556,"line_end":1556,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094812,"byte_end":11094815,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094820,"byte_end":11094834,"line_start":1558,"line_end":1558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094839,"byte_end":11094842,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094847,"byte_end":11094854,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094859,"byte_end":11094908,"line_start":1561,"line_end":1561,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094913,"byte_end":11094957,"line_start":1562,"line_end":1562,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094962,"byte_end":11094965,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11094970,"byte_end":11095000,"line_start":1564,"line_end":1564,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095005,"byte_end":11095017,"line_start":1565,"line_end":1565,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095022,"byte_end":11095064,"line_start":1566,"line_end":1566,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095069,"byte_end":11095107,"line_start":1567,"line_end":1567,"column_start":5,"column_end":43}},{"value":"/     if let Some(x) = p.try_into_owned() {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095112,"byte_end":11095157,"line_start":1568,"line_end":1568,"column_start":5,"column_end":50}},{"value":"/         drop(x);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095162,"byte_end":11095182,"line_start":1569,"line_end":1569,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095187,"byte_end":11095196,"line_start":1570,"line_end":1570,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095201,"byte_end":11095206,"line_start":1571,"line_end":1571,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095211,"byte_end":11095218,"line_start":1572,"line_end":1572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095875,"byte_end":11095878,"line_start":1595,"line_end":1595,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095410,"byte_end":11095456,"line_start":1581,"line_end":1581,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095461,"byte_end":11095464,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095469,"byte_end":11095483,"line_start":1583,"line_end":1583,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095488,"byte_end":11095491,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095496,"byte_end":11095503,"line_start":1585,"line_end":1585,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095508,"byte_end":11095564,"line_start":1586,"line_end":1586,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095569,"byte_end":11095613,"line_start":1587,"line_end":1587,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095618,"byte_end":11095621,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095626,"byte_end":11095688,"line_start":1589,"line_end":1589,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095693,"byte_end":11095723,"line_start":1590,"line_end":1590,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095728,"byte_end":11095762,"line_start":1591,"line_end":1591,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095767,"byte_end":11095794,"line_start":1592,"line_end":1592,"column_start":5,"column_end":32}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095799,"byte_end":11095851,"line_start":1593,"line_end":1593,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095856,"byte_end":11095863,"line_start":1594,"line_end":1594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096609,"byte_end":11096617,"line_start":1619,"line_end":1619,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11095974,"byte_end":11096064,"line_start":1600,"line_end":1600,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096069,"byte_end":11096107,"line_start":1601,"line_end":1601,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096112,"byte_end":11096115,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096120,"byte_end":11096134,"line_start":1603,"line_end":1603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096139,"byte_end":11096142,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096147,"byte_end":11096154,"line_start":1605,"line_end":1605,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096159,"byte_end":11096208,"line_start":1606,"line_end":1606,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096213,"byte_end":11096257,"line_start":1607,"line_end":1607,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096262,"byte_end":11096265,"line_start":1608,"line_end":1608,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096270,"byte_end":11096300,"line_start":1609,"line_end":1609,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096305,"byte_end":11096335,"line_start":1610,"line_end":1610,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096340,"byte_end":11096375,"line_start":1611,"line_end":1611,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096380,"byte_end":11096408,"line_start":1612,"line_end":1612,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096413,"byte_end":11096416,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096421,"byte_end":11096449,"line_start":1614,"line_end":1614,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096454,"byte_end":11096482,"line_start":1615,"line_end":1615,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096487,"byte_end":11096528,"line_start":1616,"line_end":1616,"column_start":5,"column_end":46}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096533,"byte_end":11096585,"line_start":1617,"line_end":1617,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096590,"byte_end":11096597,"line_start":1618,"line_end":1618,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099602,"byte_end":11099611,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":374}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099553,"byte_end":11099590,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099918,"byte_end":11099921,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099878,"byte_end":11099906,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100026,"byte_end":11100034,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099969,"byte_end":11100014,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100702,"byte_end":11100713,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":390}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100654,"byte_end":11100690,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100824,"byte_end":11100827,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100778,"byte_end":11100798,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100803,"byte_end":11100812,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100965,"byte_end":11100974,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100896,"byte_end":11100939,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100944,"byte_end":11100953,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11101130,"byte_end":11101139,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11101048,"byte_end":11101104,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11101109,"byte_end":11101118,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122073,"byte_end":11122078,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":480}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120304,"byte_end":11120353,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120354,"byte_end":11120357,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120358,"byte_end":11120371,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120372,"byte_end":11120375,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120376,"byte_end":11120455,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120456,"byte_end":11120459,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120460,"byte_end":11120467,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120468,"byte_end":11120501,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120502,"byte_end":11120505,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120506,"byte_end":11120604,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120605,"byte_end":11120697,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120698,"byte_end":11120728,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120729,"byte_end":11120736,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120737,"byte_end":11120740,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120741,"byte_end":11120817,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120818,"byte_end":11120821,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120822,"byte_end":11120849,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120850,"byte_end":11120853,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120854,"byte_end":11120941,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120942,"byte_end":11120958,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120959,"byte_end":11120962,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120963,"byte_end":11120970,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11120971,"byte_end":11121020,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121021,"byte_end":11121065,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121066,"byte_end":11121069,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121070,"byte_end":11121108,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121109,"byte_end":11121138,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121139,"byte_end":11121142,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121143,"byte_end":11121173,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121174,"byte_end":11121204,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121205,"byte_end":11121208,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121209,"byte_end":11121283,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121284,"byte_end":11121318,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121319,"byte_end":11121322,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121323,"byte_end":11121374,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121375,"byte_end":11121421,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121422,"byte_end":11121465,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121466,"byte_end":11121471,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121472,"byte_end":11121524,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121525,"byte_end":11121532,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121533,"byte_end":11121536,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121537,"byte_end":11121558,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121559,"byte_end":11121562,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121563,"byte_end":11121658,"line_start":54,"line_end":54,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121659,"byte_end":11121757,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121758,"byte_end":11121777,"line_start":56,"line_end":56,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121778,"byte_end":11121781,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121782,"byte_end":11121789,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121790,"byte_end":11121823,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121824,"byte_end":11121827,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121828,"byte_end":11121858,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121859,"byte_end":11121889,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121890,"byte_end":11121922,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121923,"byte_end":11121940,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121941,"byte_end":11121973,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121974,"byte_end":11121991,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11121992,"byte_end":11122025,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122026,"byte_end":11122033,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122034,"byte_end":11122037,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122038,"byte_end":11122061,"line_start":70,"line_end":70,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123053,"byte_end":11123058,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122137,"byte_end":11122226,"line_start":76,"line_end":76,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122231,"byte_end":11122256,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122261,"byte_end":11122264,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122269,"byte_end":11122362,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122367,"byte_end":11122455,"line_start":80,"line_end":80,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122460,"byte_end":11122550,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122555,"byte_end":11122595,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122600,"byte_end":11122603,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122608,"byte_end":11122698,"line_start":84,"line_end":84,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122703,"byte_end":11122794,"line_start":85,"line_end":85,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122799,"byte_end":11122886,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122891,"byte_end":11122911,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122916,"byte_end":11122919,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122924,"byte_end":11123011,"line_start":89,"line_end":89,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123016,"byte_end":11123041,"line_start":90,"line_end":90,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127415,"byte_end":11127430,"line_start":190,"line_end":190,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123222,"byte_end":11123311,"line_start":101,"line_end":101,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123316,"byte_end":11123341,"line_start":102,"line_end":102,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123346,"byte_end":11123349,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123354,"byte_end":11123447,"line_start":104,"line_end":104,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123452,"byte_end":11123540,"line_start":105,"line_end":105,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123545,"byte_end":11123635,"line_start":106,"line_end":106,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123640,"byte_end":11123680,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123685,"byte_end":11123688,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123693,"byte_end":11123783,"line_start":109,"line_end":109,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123788,"byte_end":11123879,"line_start":110,"line_end":110,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123884,"byte_end":11123971,"line_start":111,"line_end":111,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11123976,"byte_end":11123996,"line_start":112,"line_end":112,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124001,"byte_end":11124004,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124009,"byte_end":11124096,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124101,"byte_end":11124126,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124131,"byte_end":11124134,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124139,"byte_end":11124151,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124156,"byte_end":11124159,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124164,"byte_end":11124256,"line_start":119,"line_end":119,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124261,"byte_end":11124348,"line_start":120,"line_end":120,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124353,"byte_end":11124365,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124370,"byte_end":11124373,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124378,"byte_end":11124385,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124390,"byte_end":11124423,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124428,"byte_end":11124431,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124436,"byte_end":11124466,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124471,"byte_end":11124498,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124503,"byte_end":11124515,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124520,"byte_end":11124595,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124600,"byte_end":11124639,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124644,"byte_end":11124680,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124685,"byte_end":11124696,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124701,"byte_end":11124706,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124711,"byte_end":11124718,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124723,"byte_end":11124726,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124731,"byte_end":11124825,"line_start":136,"line_end":136,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124830,"byte_end":11124861,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124866,"byte_end":11124869,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124874,"byte_end":11124969,"line_start":139,"line_end":139,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11124974,"byte_end":11125066,"line_start":140,"line_end":140,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125071,"byte_end":11125160,"line_start":141,"line_end":141,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125165,"byte_end":11125168,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125173,"byte_end":11125186,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125191,"byte_end":11125244,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125249,"byte_end":11125331,"line_start":145,"line_end":145,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125336,"byte_end":11125343,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125348,"byte_end":11125351,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125356,"byte_end":11125449,"line_start":148,"line_end":148,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125454,"byte_end":11125549,"line_start":149,"line_end":149,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125554,"byte_end":11125614,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125619,"byte_end":11125622,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125627,"byte_end":11125641,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125646,"byte_end":11125649,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125654,"byte_end":11125740,"line_start":154,"line_end":154,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125745,"byte_end":11125839,"line_start":155,"line_end":155,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125844,"byte_end":11125940,"line_start":156,"line_end":156,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11125945,"byte_end":11126037,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126042,"byte_end":11126098,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126103,"byte_end":11126106,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126111,"byte_end":11126118,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126123,"byte_end":11126179,"line_start":161,"line_end":161,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126184,"byte_end":11126228,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126233,"byte_end":11126236,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126241,"byte_end":11126272,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126277,"byte_end":11126280,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126285,"byte_end":11126362,"line_start":166,"line_end":166,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126367,"byte_end":11126398,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126403,"byte_end":11126406,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126411,"byte_end":11126441,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126446,"byte_end":11126476,"line_start":170,"line_end":170,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126481,"byte_end":11126484,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126489,"byte_end":11126566,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126571,"byte_end":11126643,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126648,"byte_end":11126651,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126656,"byte_end":11126677,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126682,"byte_end":11126742,"line_start":176,"line_end":176,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126747,"byte_end":11126829,"line_start":177,"line_end":177,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126834,"byte_end":11126850,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126855,"byte_end":11126934,"line_start":179,"line_end":179,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126939,"byte_end":11126982,"line_start":180,"line_end":180,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11126987,"byte_end":11127055,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127060,"byte_end":11127152,"line_start":182,"line_end":182,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127157,"byte_end":11127241,"line_start":183,"line_end":183,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127246,"byte_end":11127283,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127288,"byte_end":11127303,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127308,"byte_end":11127317,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127322,"byte_end":11127327,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127332,"byte_end":11127384,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127389,"byte_end":11127396,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131074,"byte_end":11131087,"line_start":270,"line_end":270,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127669,"byte_end":11127762,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127767,"byte_end":11127819,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127824,"byte_end":11127827,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127832,"byte_end":11127925,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11127930,"byte_end":11128020,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128025,"byte_end":11128114,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128119,"byte_end":11128173,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128178,"byte_end":11128181,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128186,"byte_end":11128279,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128284,"byte_end":11128377,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128382,"byte_end":11128475,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128480,"byte_end":11128511,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128516,"byte_end":11128519,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128524,"byte_end":11128613,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128618,"byte_end":11128643,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128648,"byte_end":11128651,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128656,"byte_end":11128668,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128673,"byte_end":11128676,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128681,"byte_end":11128774,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128779,"byte_end":11128812,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128817,"byte_end":11128820,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128825,"byte_end":11128920,"line_start":222,"line_end":222,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128925,"byte_end":11128963,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128968,"byte_end":11128971,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11128976,"byte_end":11129071,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129076,"byte_end":11129168,"line_start":226,"line_end":226,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129173,"byte_end":11129262,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129267,"byte_end":11129270,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129275,"byte_end":11129288,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129293,"byte_end":11129346,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129351,"byte_end":11129410,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129415,"byte_end":11129422,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129427,"byte_end":11129430,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129435,"byte_end":11129529,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129534,"byte_end":11129621,"line_start":235,"line_end":235,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129626,"byte_end":11129686,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129691,"byte_end":11129694,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129699,"byte_end":11129713,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129718,"byte_end":11129721,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129726,"byte_end":11129812,"line_start":240,"line_end":240,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129817,"byte_end":11129911,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11129916,"byte_end":11130012,"line_start":242,"line_end":242,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130017,"byte_end":11130109,"line_start":243,"line_end":243,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130114,"byte_end":11130170,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130175,"byte_end":11130178,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130183,"byte_end":11130190,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130195,"byte_end":11130251,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130256,"byte_end":11130300,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130305,"byte_end":11130308,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130313,"byte_end":11130344,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130349,"byte_end":11130352,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130357,"byte_end":11130434,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130439,"byte_end":11130470,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130475,"byte_end":11130478,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130483,"byte_end":11130513,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130518,"byte_end":11130548,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130553,"byte_end":11130556,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130561,"byte_end":11130638,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130643,"byte_end":11130715,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130720,"byte_end":11130723,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130728,"byte_end":11130749,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130754,"byte_end":11130814,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130819,"byte_end":11130901,"line_start":263,"line_end":263,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130906,"byte_end":11130922,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130927,"byte_end":11130962,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130967,"byte_end":11130976,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130981,"byte_end":11130986,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11130991,"byte_end":11131043,"line_start":268,"line_end":268,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131048,"byte_end":11131055,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131972,"byte_end":11131977,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131187,"byte_end":11131282,"line_start":274,"line_end":274,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131287,"byte_end":11131304,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131309,"byte_end":11131312,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131317,"byte_end":11131411,"line_start":277,"line_end":277,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131416,"byte_end":11131508,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131513,"byte_end":11131581,"line_start":279,"line_end":279,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131586,"byte_end":11131589,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131594,"byte_end":11131686,"line_start":281,"line_end":281,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131691,"byte_end":11131694,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131699,"byte_end":11131713,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131718,"byte_end":11131721,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131726,"byte_end":11131733,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131738,"byte_end":11131771,"line_start":286,"line_end":286,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131776,"byte_end":11131779,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131784,"byte_end":11131814,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131819,"byte_end":11131844,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131849,"byte_end":11131913,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131918,"byte_end":11131925,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131930,"byte_end":11131948,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11131953,"byte_end":11131960,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133196,"byte_end":11133201,"line_start":328,"line_end":328,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132101,"byte_end":11132152,"line_start":300,"line_end":300,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132157,"byte_end":11132160,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132165,"byte_end":11132255,"line_start":302,"line_end":302,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132260,"byte_end":11132354,"line_start":303,"line_end":303,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132359,"byte_end":11132453,"line_start":304,"line_end":304,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132458,"byte_end":11132510,"line_start":305,"line_end":305,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132515,"byte_end":11132518,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132523,"byte_end":11132616,"line_start":307,"line_end":307,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132621,"byte_end":11132624,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132629,"byte_end":11132643,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132648,"byte_end":11132651,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132656,"byte_end":11132663,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132668,"byte_end":11132717,"line_start":312,"line_end":312,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132722,"byte_end":11132766,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132771,"byte_end":11132774,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132779,"byte_end":11132808,"line_start":315,"line_end":315,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132813,"byte_end":11132846,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132851,"byte_end":11132856,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132861,"byte_end":11132900,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132905,"byte_end":11132959,"line_start":319,"line_end":319,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132964,"byte_end":11132969,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132974,"byte_end":11132992,"line_start":321,"line_end":321,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11132997,"byte_end":11133002,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133007,"byte_end":11133046,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133051,"byte_end":11133105,"line_start":324,"line_end":324,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133110,"byte_end":11133115,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133120,"byte_end":11133172,"line_start":326,"line_end":326,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133177,"byte_end":11133184,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134585,"byte_end":11134596,"line_start":365,"line_end":365,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133325,"byte_end":11133416,"line_start":334,"line_end":334,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133421,"byte_end":11133424,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133429,"byte_end":11133520,"line_start":336,"line_end":336,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133525,"byte_end":11133621,"line_start":337,"line_end":337,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133626,"byte_end":11133720,"line_start":338,"line_end":338,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133725,"byte_end":11133744,"line_start":339,"line_end":339,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133749,"byte_end":11133752,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133757,"byte_end":11133851,"line_start":341,"line_end":341,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133856,"byte_end":11133898,"line_start":342,"line_end":342,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133903,"byte_end":11133906,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133911,"byte_end":11133925,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133930,"byte_end":11133933,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133938,"byte_end":11133945,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11133950,"byte_end":11133999,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134004,"byte_end":11134048,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134053,"byte_end":11134073,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134078,"byte_end":11134106,"line_start":350,"line_end":350,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134111,"byte_end":11134114,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134119,"byte_end":11134148,"line_start":352,"line_end":352,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134153,"byte_end":11134186,"line_start":353,"line_end":353,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134191,"byte_end":11134196,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134201,"byte_end":11134240,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134245,"byte_end":11134299,"line_start":356,"line_end":356,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134304,"byte_end":11134309,"line_start":357,"line_end":357,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134314,"byte_end":11134381,"line_start":358,"line_end":358,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134386,"byte_end":11134391,"line_start":359,"line_end":359,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134396,"byte_end":11134435,"line_start":360,"line_end":360,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134440,"byte_end":11134494,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134499,"byte_end":11134504,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134509,"byte_end":11134561,"line_start":363,"line_end":363,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11134566,"byte_end":11134573,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135742,"byte_end":11135751,"line_start":403,"line_end":403,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135201,"byte_end":11135256,"line_start":387,"line_end":387,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135261,"byte_end":11135264,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135269,"byte_end":11135344,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135349,"byte_end":11135399,"line_start":390,"line_end":390,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135404,"byte_end":11135407,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135412,"byte_end":11135496,"line_start":392,"line_end":392,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135501,"byte_end":11135504,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135509,"byte_end":11135523,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135528,"byte_end":11135531,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135536,"byte_end":11135543,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135548,"byte_end":11135581,"line_start":397,"line_end":397,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135586,"byte_end":11135589,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135594,"byte_end":11135624,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135629,"byte_end":11135659,"line_start":400,"line_end":400,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135664,"byte_end":11135718,"line_start":401,"line_end":401,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135723,"byte_end":11135730,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11139103,"byte_end":11139114,"line_start":510,"line_end":510,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136161,"byte_end":11136248,"line_start":423,"line_end":423,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136249,"byte_end":11136252,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136253,"byte_end":11136348,"line_start":425,"line_end":425,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136349,"byte_end":11136438,"line_start":426,"line_end":426,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136439,"byte_end":11136442,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136443,"byte_end":11136536,"line_start":428,"line_end":428,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136537,"byte_end":11136574,"line_start":429,"line_end":429,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136575,"byte_end":11136578,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136579,"byte_end":11136675,"line_start":431,"line_end":431,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136676,"byte_end":11136679,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136680,"byte_end":11136692,"line_start":433,"line_end":433,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136693,"byte_end":11136696,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136697,"byte_end":11136787,"line_start":435,"line_end":435,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136788,"byte_end":11136855,"line_start":436,"line_end":436,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136856,"byte_end":11136859,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136860,"byte_end":11136874,"line_start":438,"line_end":438,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136875,"byte_end":11136878,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136879,"byte_end":11136886,"line_start":440,"line_end":440,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136887,"byte_end":11136936,"line_start":441,"line_end":441,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136937,"byte_end":11136982,"line_start":442,"line_end":442,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136983,"byte_end":11136986,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136987,"byte_end":11137014,"line_start":444,"line_end":444,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137015,"byte_end":11137018,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137019,"byte_end":11137031,"line_start":446,"line_end":446,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137032,"byte_end":11137087,"line_start":447,"line_end":447,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137088,"byte_end":11137134,"line_start":448,"line_end":448,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137135,"byte_end":11137138,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137139,"byte_end":11137213,"line_start":450,"line_end":450,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137214,"byte_end":11137264,"line_start":451,"line_end":451,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137265,"byte_end":11137268,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137269,"byte_end":11137298,"line_start":453,"line_end":453,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137299,"byte_end":11137355,"line_start":454,"line_end":454,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137356,"byte_end":11137367,"line_start":455,"line_end":455,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137368,"byte_end":11137371,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137372,"byte_end":11137453,"line_start":457,"line_end":457,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137454,"byte_end":11137459,"line_start":458,"line_end":458,"column_start":1,"column_end":6}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137460,"byte_end":11137512,"line_start":459,"line_end":459,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137513,"byte_end":11137520,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137521,"byte_end":11137524,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137525,"byte_end":11137619,"line_start":462,"line_end":462,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137620,"byte_end":11137623,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137624,"byte_end":11137718,"line_start":464,"line_end":464,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137719,"byte_end":11137804,"line_start":465,"line_end":465,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137805,"byte_end":11137808,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137809,"byte_end":11137908,"line_start":467,"line_end":467,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11137909,"byte_end":11138007,"line_start":468,"line_end":468,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138008,"byte_end":11138028,"line_start":469,"line_end":469,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138029,"byte_end":11138032,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138033,"byte_end":11138040,"line_start":471,"line_end":471,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138041,"byte_end":11138090,"line_start":472,"line_end":472,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138091,"byte_end":11138122,"line_start":473,"line_end":473,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138123,"byte_end":11138168,"line_start":474,"line_end":474,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138169,"byte_end":11138172,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138173,"byte_end":11138194,"line_start":476,"line_end":476,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138195,"byte_end":11138225,"line_start":477,"line_end":477,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138226,"byte_end":11138231,"line_start":478,"line_end":478,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138232,"byte_end":11138235,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138236,"byte_end":11138256,"line_start":480,"line_end":480,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138257,"byte_end":11138287,"line_start":481,"line_end":481,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138288,"byte_end":11138318,"line_start":482,"line_end":482,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138319,"byte_end":11138324,"line_start":483,"line_end":483,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138325,"byte_end":11138328,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138329,"byte_end":11138360,"line_start":485,"line_end":485,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138361,"byte_end":11138389,"line_start":486,"line_end":486,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138390,"byte_end":11138410,"line_start":487,"line_end":487,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138411,"byte_end":11138447,"line_start":488,"line_end":488,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138448,"byte_end":11138525,"line_start":489,"line_end":489,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138526,"byte_end":11138529,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138530,"byte_end":11138581,"line_start":491,"line_end":491,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138582,"byte_end":11138622,"line_start":492,"line_end":492,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138623,"byte_end":11138697,"line_start":493,"line_end":493,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138698,"byte_end":11138701,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138702,"byte_end":11138790,"line_start":495,"line_end":495,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138791,"byte_end":11138841,"line_start":496,"line_end":496,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138842,"byte_end":11138894,"line_start":497,"line_end":497,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138895,"byte_end":11138923,"line_start":498,"line_end":498,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138924,"byte_end":11138927,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138928,"byte_end":11138960,"line_start":500,"line_end":500,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138961,"byte_end":11138978,"line_start":501,"line_end":501,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138979,"byte_end":11138992,"line_start":502,"line_end":502,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11138993,"byte_end":11139002,"line_start":503,"line_end":503,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11139003,"byte_end":11139008,"line_start":504,"line_end":504,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11139009,"byte_end":11139016,"line_start":505,"line_end":505,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11139017,"byte_end":11139020,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11139021,"byte_end":11139050,"line_start":507,"line_end":507,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11139051,"byte_end":11139078,"line_start":508,"line_end":508,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11139079,"byte_end":11139088,"line_start":509,"line_end":509,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":933},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":11195856,"byte_end":11195859,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":11195810,"byte_end":11195838,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":11195839,"byte_end":11195848,"line_start":38,"line_end":38,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":935},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":11195984,"byte_end":11195993,"line_start":45,"line_end":45,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":11195915,"byte_end":11195966,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":11195967,"byte_end":11195976,"line_start":44,"line_end":44,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":937},"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":11196103,"byte_end":11196120,"line_start":50,"line_end":50,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/default.rs","byte_start":11196054,"byte_end":11196095,"line_start":49,"line_end":49,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045122,"byte_end":11045142,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11046569,"byte_end":11046577,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11050351,"byte_end":11050352,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053573,"byte_end":11053579,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053644,"byte_end":11053650,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053666,"byte_end":11053672,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054062,"byte_end":11054068,"line_start":315,"line_end":315,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11077715,"byte_end":11077721,"line_start":942,"line_end":942,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11078068,"byte_end":11078074,"line_start":954,"line_end":954,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11078362,"byte_end":11078368,"line_start":962,"line_end":962,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11078715,"byte_end":11078721,"line_start":973,"line_end":973,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11078833,"byte_end":11078839,"line_start":979,"line_end":979,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11079291,"byte_end":11079297,"line_start":997,"line_end":997,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11079400,"byte_end":11079406,"line_start":1003,"line_end":1003,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11079526,"byte_end":11079532,"line_start":1009,"line_end":1009,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11079881,"byte_end":11079887,"line_start":1024,"line_end":1024,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081100,"byte_end":11081105,"line_start":1065,"line_end":1065,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081612,"byte_end":11081617,"line_start":1088,"line_end":1088,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083267,"byte_end":11083272,"line_start":1148,"line_end":1148,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084999,"byte_end":11085004,"line_start":1212,"line_end":1212,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11085194,"byte_end":11085199,"line_start":1221,"line_end":1221,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11085477,"byte_end":11085482,"line_start":1232,"line_end":1232,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11085623,"byte_end":11085628,"line_start":1238,"line_end":1238,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11085821,"byte_end":11085826,"line_start":1247,"line_end":1247,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11085992,"byte_end":11085997,"line_start":1254,"line_end":1254,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11086087,"byte_end":11086092,"line_start":1260,"line_end":1260,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11086565,"byte_end":11086570,"line_start":1279,"line_end":1279,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11086680,"byte_end":11086685,"line_start":1285,"line_end":1285,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11086807,"byte_end":11086812,"line_start":1291,"line_end":1291,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11086918,"byte_end":11086923,"line_start":1297,"line_end":1297,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087424,"byte_end":11087430,"line_start":1314,"line_end":1314,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087604,"byte_end":11087610,"line_start":1323,"line_end":1323,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087665,"byte_end":11087671,"line_start":1325,"line_end":1325,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087917,"byte_end":11087923,"line_start":1340,"line_end":1340,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088611,"byte_end":11088617,"line_start":1364,"line_end":1364,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096762,"byte_end":11096768,"line_start":1624,"line_end":1624,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11097388,"byte_end":11097394,"line_start":1647,"line_end":1647,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11097521,"byte_end":11097527,"line_start":1653,"line_end":1653,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11097601,"byte_end":11097607,"line_start":1655,"line_end":1655,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11097772,"byte_end":11097778,"line_start":1661,"line_end":1661,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11097926,"byte_end":11097932,"line_start":1667,"line_end":1667,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11098235,"byte_end":11098241,"line_start":1678,"line_end":1678,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11098432,"byte_end":11098438,"line_start":1684,"line_end":1684,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099674,"byte_end":11099683,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099708,"byte_end":11099717,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099739,"byte_end":11099748,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099862,"byte_end":11099871,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100113,"byte_end":11100122,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100320,"byte_end":11100329,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100457,"byte_end":11100466,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100640,"byte_end":11100649,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100760,"byte_end":11100771,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11101231,"byte_end":11101242,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11101389,"byte_end":11101400,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/deferred.rs","byte_start":11112147,"byte_end":11112155,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/deferred.rs","byte_start":11112279,"byte_end":11112287,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/epoch.rs","byte_start":11116372,"byte_end":11116377,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/epoch.rs","byte_start":11118181,"byte_end":11118192,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122125,"byte_end":11122130,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135876,"byte_end":11135881,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136051,"byte_end":11136056,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11139393,"byte_end":11139405,"line_start":515,"line_end":515,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11142561,"byte_end":11142564,"line_start":72,"line_end":72,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11142574,"byte_end":11142577,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11143526,"byte_end":11143529,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11143681,"byte_end":11143684,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11144073,"byte_end":11144076,"line_start":130,"line_end":130,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11144483,"byte_end":11144492,"line_start":146,"line_end":146,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11144502,"byte_end":11144511,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11145193,"byte_end":11145199,"line_start":169,"line_end":169,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11150422,"byte_end":11150427,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11159214,"byte_end":11159219,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":11165362,"byte_end":11165367,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":11165503,"byte_end":11165508,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":11166021,"byte_end":11166025,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":11168608,"byte_end":11168612,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":11169144,"byte_end":11169148,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":11177976,"byte_end":11177984,"line_start":19,"line_end":19,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":11178021,"byte_end":11178029,"line_start":20,"line_end":20,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":11178045,"byte_end":11178053,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":11180134,"byte_end":11180142,"line_start":96,"line_end":96,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":11182020,"byte_end":11182025,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":11182062,"byte_end":11182067,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":11182083,"byte_end":11182088,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":11188008,"byte_end":11188013,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11045122,"byte_end":11045142,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11046569,"byte_end":11046577,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":39551},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11050351,"byte_end":11050352,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":127}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053573,"byte_end":11053579,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053644,"byte_end":11053650,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11053666,"byte_end":11053672,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11054062,"byte_end":11054068,"line_start":315,"line_end":315,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11077715,"byte_end":11077721,"line_start":942,"line_end":942,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11078068,"byte_end":11078074,"line_start":954,"line_end":954,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":9621}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11078362,"byte_end":11078368,"line_start":962,"line_end":962,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11078715,"byte_end":11078721,"line_start":973,"line_end":973,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11078833,"byte_end":11078839,"line_start":979,"line_end":979,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11079291,"byte_end":11079297,"line_start":997,"line_end":997,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11079400,"byte_end":11079406,"line_start":1003,"line_end":1003,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11079526,"byte_end":11079532,"line_start":1009,"line_end":1009,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11079881,"byte_end":11079887,"line_start":1024,"line_end":1024,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081100,"byte_end":11081105,"line_start":1065,"line_end":1065,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":247},"to":{"krate":0,"index":243}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11081612,"byte_end":11081617,"line_start":1088,"line_end":1088,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11083267,"byte_end":11083272,"line_start":1148,"line_end":1148,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11084999,"byte_end":11085004,"line_start":1212,"line_end":1212,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11085194,"byte_end":11085199,"line_start":1221,"line_end":1221,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11085477,"byte_end":11085482,"line_start":1232,"line_end":1232,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11085623,"byte_end":11085628,"line_start":1238,"line_end":1238,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11085821,"byte_end":11085826,"line_start":1247,"line_end":1247,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3255}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11085992,"byte_end":11085997,"line_start":1254,"line_end":1254,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11086087,"byte_end":11086092,"line_start":1260,"line_end":1260,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11086565,"byte_end":11086570,"line_start":1279,"line_end":1279,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11086680,"byte_end":11086685,"line_start":1285,"line_end":1285,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2626}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11086807,"byte_end":11086812,"line_start":1291,"line_end":1291,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11086918,"byte_end":11086923,"line_start":1297,"line_end":1297,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2924}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087424,"byte_end":11087430,"line_start":1314,"line_end":1314,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087604,"byte_end":11087610,"line_start":1323,"line_end":1323,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3034}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087665,"byte_end":11087671,"line_start":1325,"line_end":1325,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":243}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11087917,"byte_end":11087923,"line_start":1340,"line_end":1340,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11088611,"byte_end":11088617,"line_start":1364,"line_end":1364,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11096762,"byte_end":11096768,"line_start":1624,"line_end":1624,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11097388,"byte_end":11097394,"line_start":1647,"line_end":1647,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11097521,"byte_end":11097527,"line_start":1653,"line_end":1653,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11097601,"byte_end":11097607,"line_start":1655,"line_end":1655,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11097772,"byte_end":11097778,"line_start":1661,"line_end":1661,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2711}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11097926,"byte_end":11097932,"line_start":1667,"line_end":1667,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11098235,"byte_end":11098241,"line_start":1678,"line_end":1678,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9621}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/atomic.rs","byte_start":11098432,"byte_end":11098438,"line_start":1684,"line_end":1684,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099674,"byte_end":11099683,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099708,"byte_end":11099717,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099739,"byte_end":11099748,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11099862,"byte_end":11099871,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100113,"byte_end":11100122,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100320,"byte_end":11100329,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100457,"byte_end":11100466,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100640,"byte_end":11100649,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11100760,"byte_end":11100771,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11101231,"byte_end":11101242,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/collector.rs","byte_start":11101389,"byte_end":11101400,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/deferred.rs","byte_start":11112147,"byte_end":11112155,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/deferred.rs","byte_start":11112279,"byte_end":11112287,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/epoch.rs","byte_start":11116372,"byte_end":11116377,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/epoch.rs","byte_start":11118181,"byte_end":11118192,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11122125,"byte_end":11122130,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11135876,"byte_end":11135881,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11136051,"byte_end":11136056,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/guard.rs","byte_start":11139393,"byte_end":11139405,"line_start":515,"line_end":515,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":504},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11142561,"byte_end":11142564,"line_start":72,"line_end":72,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11142574,"byte_end":11142577,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11143526,"byte_end":11143529,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11143681,"byte_end":11143684,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11144073,"byte_end":11144076,"line_start":130,"line_end":130,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11144483,"byte_end":11144492,"line_start":146,"line_end":146,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":879},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11144502,"byte_end":11144511,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11145193,"byte_end":11145199,"line_start":169,"line_end":169,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11150422,"byte_end":11150427,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/internal.rs","byte_start":11159214,"byte_end":11159219,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":624},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":11165362,"byte_end":11165367,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":886},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":11165503,"byte_end":11165508,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":11166021,"byte_end":11166025,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":11168608,"byte_end":11168612,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":890},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/list.rs","byte_start":11169144,"byte_end":11169148,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":11177976,"byte_end":11177984,"line_start":19,"line_end":19,"column_start":38,"column_end":46},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":736},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":11178021,"byte_end":11178029,"line_start":20,"line_end":20,"column_start":31,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":736},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":11178045,"byte_end":11178053,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/once_lock.rs","byte_start":11180134,"byte_end":11180142,"line_start":96,"line_end":96,"column_start":18,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":736},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":11182020,"byte_end":11182025,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":11182062,"byte_end":11182067,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":11182083,"byte_end":11182088,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/theo/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.13/src/sync/queue.rs","byte_start":11188008,"byte_end":11188013,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":3266}}]}